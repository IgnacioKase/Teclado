

Microchip Technology PIC LITE Macro Assembler V1.44 build -154322312 
                                                                                               Thu Nov 16 10:04:16 2017

Microchip Technology Omniscient Code Generator v1.44 (Free mode) build 201709140600
     1                           	processor	16F628A
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     7                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     8                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	maintext,global,class=CODE,split=1,delta=2
    10                           	psect	text1,local,class=CODE,merge=1,delta=2
    11                           	psect	text2,local,class=CODE,merge=1,delta=2
    12                           	psect	text3,local,class=CODE,merge=1,delta=2
    13                           	psect	text4,local,class=CODE,merge=1,delta=2
    14                           	psect	intentry,global,class=CODE,delta=2
    15                           	psect	text5,local,class=CODE,merge=1,delta=2
    16                           	psect	text6,local,class=CODE,merge=1,delta=2
    17                           	dabs	1,0x7E,2
    18  0000                     
    19                           ; Version 1.44
    20                           ; Generated 14/09/2017 GMT
    21                           ; 
    22                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    23                           ; All rights reserved.
    24                           ; 
    25                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    26                           ; 
    27                           ; Redistribution and use in source and binary forms, with or without modification, are
    28                           ; permitted provided that the following conditions are met:
    29                           ; 
    30                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    31                           ;        conditions and the following disclaimer.
    32                           ; 
    33                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    34                           ;        of conditions and the following disclaimer in the documentation and/or other
    35                           ;        materials provided with the distribution.
    36                           ; 
    37                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    38                           ;        software without specific prior written permission.
    39                           ; 
    40                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    41                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    42                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    43                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    44                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    45                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    46                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    47                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    48                           ; 
    49                           ; 
    50                           ; Code-generator required, PIC16F628A Definitions
    51                           ; 
    52                           ; SFR Addresses
    53  0000                     	;# 
    54  0001                     	;# 
    55  0002                     	;# 
    56  0003                     	;# 
    57  0004                     	;# 
    58  0005                     	;# 
    59  0006                     	;# 
    60  000A                     	;# 
    61  000B                     	;# 
    62  000C                     	;# 
    63  000E                     	;# 
    64  000E                     	;# 
    65  000F                     	;# 
    66  0010                     	;# 
    67  0011                     	;# 
    68  0012                     	;# 
    69  0015                     	;# 
    70  0015                     	;# 
    71  0016                     	;# 
    72  0017                     	;# 
    73  0018                     	;# 
    74  0019                     	;# 
    75  001A                     	;# 
    76  001F                     	;# 
    77  0081                     	;# 
    78  0085                     	;# 
    79  0086                     	;# 
    80  008C                     	;# 
    81  008E                     	;# 
    82  0092                     	;# 
    83  0098                     	;# 
    84  0099                     	;# 
    85  009A                     	;# 
    86  009B                     	;# 
    87  009C                     	;# 
    88  009D                     	;# 
    89  009F                     	;# 
    90  001A                     _RCREG	set	26
    91  001F                     _CMCON	set	31
    92  00C1                     _OERR	set	193
    93  00C6                     _RX9	set	198
    94  00C5                     _SREN	set	197
    95  00C4                     _CREN	set	196
    96  00C7                     _SPEN	set	199
    97  002A                     _RA2	set	42
    98  0029                     _RA1	set	41
    99  0028                     _RA0	set	40
   100  0065                     _RCIF	set	101
   101  002C                     _RA4	set	44
   102  005E                     _PEIE	set	94
   103  005F                     _GIE	set	95
   104  002B                     _RA3	set	43
   105  0099                     _SPBRG	set	153
   106  0085                     _TRISA	set	133
   107  04C5                     _TXEN	set	1221
   108  04C6                     _TX9	set	1222
   109  0465                     _RCIE	set	1125
   110  0464                     _TXIE	set	1124
   111  04C4                     _SYNC	set	1220
   112  04C2                     _BRGH	set	1218
   113                           
   114                           ; #config settings
   115  0000                     
   116                           	psect	cinit
   117  0011                     start_initialization:	
   118  0011                     __initialization:	
   119                           
   120                           ; Clear objects allocated to COMMON
   121  0011  01F7               	clrf	__pbssCOMMON& (0+127)
   122  0012  01F8               	clrf	(__pbssCOMMON+1)& (0+127)
   123  0013  01F9               	clrf	(__pbssCOMMON+2)& (0+127)
   124  0014  01FA               	clrf	(__pbssCOMMON+3)& (0+127)
   125  0015  01FB               	clrf	(__pbssCOMMON+4)& (0+127)
   126  0016  01FC               	clrf	(__pbssCOMMON+5)& (0+127)
   127                           
   128                           ; Clear objects allocated to BANK0
   129  0017  1283               	bcf	3,5	;RP0=0, select bank0
   130  0018  1303               	bcf	3,6	;RP1=0, select bank0
   131  0019  01B8               	clrf	__pbssBANK0& (0+127)
   132  001A  01B9               	clrf	(__pbssBANK0+1)& (0+127)
   133  001B  01BA               	clrf	(__pbssBANK0+2)& (0+127)
   134  001C  01BB               	clrf	(__pbssBANK0+3)& (0+127)
   135  001D  01BC               	clrf	(__pbssBANK0+4)& (0+127)
   136  001E  01BD               	clrf	(__pbssBANK0+5)& (0+127)
   137  001F  01BE               	clrf	(__pbssBANK0+6)& (0+127)
   138  0020  01BF               	clrf	(__pbssBANK0+7)& (0+127)
   139  0021                     end_of_initialization:	
   140                           ;End of C runtime variable initialization code
   141                           
   142  0021                     __end_of__initialization:	
   143  0021  0183               	clrf	3
   144  0022  295F               	ljmp	_main	;jump to C main() function
   145                           
   146                           	psect	bssCOMMON
   147  0077                     __pbssCOMMON:	
   148  0077                     _lectura:	
   149  0077                     	ds	2
   150  0079                     _dataLength:	
   151  0079                     	ds	2
   152  007B                     _indice:	
   153  007B                     	ds	2
   154                           
   155                           	psect	bssBANK0
   156  0038                     __pbssBANK0:	
   157  0038                     _palabras:	
   158  0038                     	ds	8
   159                           
   160                           	psect	cstackCOMMON
   161  0070                     __pcstackCOMMON:	
   162  0070                     ?_InitUART:	
   163  0070                     ?_resetDatos:	
   164                           ; 1 bytes @ 0x0
   165                           
   166  0070                     ?_ReceiveByteSerially:	
   167                           ; 1 bytes @ 0x0
   168                           
   169  0070                     ??_ReceiveByteSerially:	
   170                           ; 1 bytes @ 0x0
   171                           
   172  0070                     ?_escribirSalida:	
   173                           ; 1 bytes @ 0x0
   174                           
   175  0070                     ??_escribirSalida:	
   176                           ; 1 bytes @ 0x0
   177                           
   178  0070                     ?_main:	
   179                           ; 1 bytes @ 0x0
   180                           
   181  0070                     ?_Interrupcion:	
   182                           ; 1 bytes @ 0x0
   183                           
   184                           
   185                           ; 1 bytes @ 0x0
   186  0070                     	ds	3
   187  0073                     escribirSalida@i:	
   188                           
   189                           ; 2 bytes @ 0x3
   190  0073                     	ds	2
   191  0075                     escribirSalida@k:	
   192                           
   193                           ; 2 bytes @ 0x5
   194  0075                     	ds	2
   195                           
   196                           	psect	cstackBANK0
   197  0020                     __pcstackBANK0:	
   198  0020                     ??_Interrupcion:	
   199                           
   200                           ; 1 bytes @ 0x0
   201  0020                     	ds	14
   202  002E                     ??_InitUART:	
   203  002E                     ?_resetearSalidas:	
   204                           ; 1 bytes @ 0xE
   205                           
   206  002E                     ??_resetDatos:	
   207                           ; 1 bytes @ 0xE
   208                           
   209  002E                     resetearSalidas@cantidadSalidas:	
   210                           ; 1 bytes @ 0xE
   211                           
   212                           
   213                           ; 2 bytes @ 0xE
   214  002E                     	ds	2
   215  0030                     ??_resetearSalidas:	
   216                           
   217                           ; 1 bytes @ 0x10
   218  0030                     	ds	1
   219  0031                     resetearSalidas@i:	
   220  0031                     resetDatos@i:	
   221                           ; 2 bytes @ 0x11
   222                           
   223                           
   224                           ; 2 bytes @ 0x11
   225  0031                     	ds	2
   226  0033                     resetDatos@j:	
   227                           
   228                           ; 2 bytes @ 0x13
   229  0033                     	ds	2
   230  0035                     ??_main:	
   231                           
   232                           ; 1 bytes @ 0x15
   233  0035                     	ds	3
   234                           
   235                           	psect	maintext
   236  015F                     __pmaintext:	
   237 ;;
   238 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   239 ;;
   240 ;; *************** function _main *****************
   241 ;; Defined at:
   242 ;;		line 33 in file "main.c"
   243 ;; Parameters:    Size  Location     Type
   244 ;;		None
   245 ;; Auto vars:     Size  Location     Type
   246 ;;		None
   247 ;; Return value:  Size  Location     Type
   248 ;;                  1    wreg      void 
   249 ;; Registers used:
   250 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   251 ;; Tracked objects:
   252 ;;		On entry : B00/0
   253 ;;		On exit  : 0/0
   254 ;;		Unchanged: 0/0
   255 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   256 ;;      Params:         0       0       0       0
   257 ;;      Locals:         0       0       0       0
   258 ;;      Temps:          0       3       0       0
   259 ;;      Totals:         0       3       0       0
   260 ;;Total ram usage:        3 bytes
   261 ;; Hardware stack levels required when called:    3
   262 ;; This function calls:
   263 ;;		_InitUART
   264 ;;		_resetDatos
   265 ;;		_resetearSalidas
   266 ;; This function is called by:
   267 ;;		Startup code after reset
   268 ;; This function uses a non-reentrant model
   269 ;;
   270                           
   271                           
   272                           ;psect for function _main
   273  015F                     _main:	
   274                           
   275                           ;main.c: 35: CMCON = 0x07;
   276                           
   277                           ;incstack = 0
   278                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   279  015F  3007               	movlw	7
   280  0160  1283               	bcf	3,5	;RP0=0, select bank0
   281  0161  1303               	bcf	3,6	;RP1=0, select bank0
   282  0162  009F               	movwf	31	;volatile
   283                           
   284                           ;main.c: 36: TRISA = 0b00010000;
   285  0163  3010               	movlw	16
   286  0164  1683               	bsf	3,5	;RP0=1, select bank1
   287  0165  1303               	bcf	3,6	;RP1=0, select bank1
   288  0166  0085               	movwf	5	;volatile
   289                           
   290                           ;main.c: 37: RA3 = 0;
   291  0167  1283               	bcf	3,5	;RP0=0, select bank0
   292  0168  1303               	bcf	3,6	;RP1=0, select bank0
   293  0169  1185               	bcf	5,3	;volatile
   294                           
   295                           ;main.c: 39: InitUART();
   296  016A  21AC               	fcall	_InitUART
   297                           
   298                           ;main.c: 41: GIE = 1;
   299  016B  178B               	bsf	11,7	;volatile
   300                           
   301                           ;main.c: 42: PEIE = 1;
   302  016C  170B               	bsf	11,6	;volatile
   303                           
   304                           ;main.c: 44: resetearSalidas(64);
   305  016D  3040               	movlw	64
   306  016E  1283               	bcf	3,5	;RP0=0, select bank0
   307  016F  1303               	bcf	3,6	;RP1=0, select bank0
   308  0170  00AE               	movwf	resetearSalidas@cantidadSalidas
   309  0171  3000               	movlw	0
   310  0172  00AF               	movwf	resetearSalidas@cantidadSalidas+1
   311  0173  2189               	fcall	_resetearSalidas
   312  0174                     l853:	
   313                           ;main.c: 46: while(1)
   314                           
   315                           
   316                           ;main.c: 47: {
   317                           ;main.c: 48: if(RA4)
   318  0174  1283               	bcf	3,5	;RP0=0, select bank0
   319  0175  1303               	bcf	3,6	;RP1=0, select bank0
   320  0176  1E05               	btfss	5,4	;volatile
   321  0177  2974               	goto	l853
   322                           
   323                           ;main.c: 49: {
   324                           ;main.c: 50: resetDatos();
   325  0178  20F9               	fcall	_resetDatos
   326                           
   327                           ;main.c: 51: _delay((unsigned long)((500)*(4000000/4000.0)));
   328  0179  3003               	movlw	3
   329  017A  1283               	bcf	3,5	;RP0=0, select bank0
   330  017B  1303               	bcf	3,6	;RP1=0, select bank0
   331  017C  00B7               	movwf	??_main+2
   332  017D  308A               	movlw	138
   333  017E  00B6               	movwf	??_main+1
   334  017F  3055               	movlw	85
   335  0180  00B5               	movwf	??_main
   336  0181                     u447:	
   337  0181  0BB5               	decfsz	??_main,f
   338  0182  2981               	goto	u447
   339  0183  0BB6               	decfsz	??_main+1,f
   340  0184  2981               	goto	u447
   341  0185  0BB7               	decfsz	??_main+2,f
   342  0186  2981               	goto	u447
   343  0187  0000               	nop
   344  0188  2974               	goto	l853
   345  0189                     __end_of_main:	
   346                           
   347                           	psect	text1
   348  0189                     __ptext1:	
   349 ;; *************** function _resetearSalidas *****************
   350 ;; Defined at:
   351 ;;		line 94 in file "main.c"
   352 ;; Parameters:    Size  Location     Type
   353 ;;  cantidadSali    2   14[BANK0 ] int 
   354 ;; Auto vars:     Size  Location     Type
   355 ;;  i               2   17[BANK0 ] int 
   356 ;; Return value:  Size  Location     Type
   357 ;;                  1    wreg      void 
   358 ;; Registers used:
   359 ;;		wreg, status,2, status,0
   360 ;; Tracked objects:
   361 ;;		On entry : 0/0
   362 ;;		On exit  : 0/0
   363 ;;		Unchanged: 0/0
   364 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   365 ;;      Params:         0       2       0       0
   366 ;;      Locals:         0       2       0       0
   367 ;;      Temps:          0       1       0       0
   368 ;;      Totals:         0       5       0       0
   369 ;;Total ram usage:        5 bytes
   370 ;; Hardware stack levels used:    1
   371 ;; Hardware stack levels required when called:    2
   372 ;; This function calls:
   373 ;;		Nothing
   374 ;; This function is called by:
   375 ;;		_main
   376 ;; This function uses a non-reentrant model
   377 ;;
   378                           
   379                           
   380                           ;psect for function _resetearSalidas
   381  0189                     _resetearSalidas:	
   382                           
   383                           ;main.c: 96: for(int i = 0; i < cantidadSalidas; i = i + 1)
   384                           
   385                           ;incstack = 0
   386                           ; Regs used in _resetearSalidas: [wreg+status,2+status,0]
   387  0189  1283               	bcf	3,5	;RP0=0, select bank0
   388  018A  1303               	bcf	3,6	;RP1=0, select bank0
   389  018B  01B1               	clrf	resetearSalidas@i
   390  018C  01B2               	clrf	resetearSalidas@i+1
   391  018D                     l711:	
   392  018D  0832               	movf	resetearSalidas@i+1,w
   393  018E  3A80               	xorlw	128
   394  018F  00B0               	movwf	??_resetearSalidas
   395  0190  082F               	movf	resetearSalidas@cantidadSalidas+1,w
   396  0191  3A80               	xorlw	128
   397  0192  0230               	subwf	??_resetearSalidas,w
   398  0193  1D03               	skipz
   399  0194  2997               	goto	u225
   400  0195  082E               	movf	resetearSalidas@cantidadSalidas,w
   401  0196  0231               	subwf	resetearSalidas@i,w
   402  0197                     u225:	
   403  0197  1803               	btfsc	3,0
   404  0198  29A7               	goto	l96
   405                           
   406                           ;main.c: 97: {
   407                           ;main.c: 98: RA0 = 0;
   408  0199  1283               	bcf	3,5	;RP0=0, select bank0
   409  019A  1303               	bcf	3,6	;RP1=0, select bank0
   410  019B  1005               	bcf	5,0	;volatile
   411                           
   412                           ;main.c: 99: RA1 = 1;
   413  019C  1485               	bsf	5,1	;volatile
   414                           
   415                           ;main.c: 100: RA1 = 0;
   416  019D  1085               	bcf	5,1	;volatile
   417  019E  0831               	movf	resetearSalidas@i,w
   418  019F  3E01               	addlw	1
   419  01A0  00B1               	movwf	resetearSalidas@i
   420  01A1  0832               	movf	resetearSalidas@i+1,w
   421  01A2  1803               	skipnc
   422  01A3  3E01               	addlw	1
   423  01A4  3E00               	addlw	0
   424  01A5  00B2               	movwf	resetearSalidas@i+1
   425  01A6  298D               	goto	l711
   426  01A7                     l96:	
   427                           
   428                           ;main.c: 101: }
   429                           ;main.c: 102: RA2 = 1;
   430  01A7  1283               	bcf	3,5	;RP0=0, select bank0
   431  01A8  1303               	bcf	3,6	;RP1=0, select bank0
   432  01A9  1505               	bsf	5,2	;volatile
   433                           
   434                           ;main.c: 103: RA2 = 0;
   435  01AA  1105               	bcf	5,2	;volatile
   436  01AB  0008               	return
   437  01AC                     __end_of_resetearSalidas:	
   438                           
   439                           	psect	text2
   440  00F9                     __ptext2:	
   441 ;; *************** function _resetDatos *****************
   442 ;; Defined at:
   443 ;;		line 132 in file "main.c"
   444 ;; Parameters:    Size  Location     Type
   445 ;;		None
   446 ;; Auto vars:     Size  Location     Type
   447 ;;  j               2   19[BANK0 ] int 
   448 ;;  i               2   17[BANK0 ] int 
   449 ;; Return value:  Size  Location     Type
   450 ;;                  1    wreg      void 
   451 ;; Registers used:
   452 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1
   453 ;; Tracked objects:
   454 ;;		On entry : 0/0
   455 ;;		On exit  : 0/0
   456 ;;		Unchanged: 0/0
   457 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   458 ;;      Params:         0       0       0       0
   459 ;;      Locals:         0       4       0       0
   460 ;;      Temps:          0       3       0       0
   461 ;;      Totals:         0       7       0       0
   462 ;;Total ram usage:        7 bytes
   463 ;; Hardware stack levels used:    1
   464 ;; Hardware stack levels required when called:    2
   465 ;; This function calls:
   466 ;;		Nothing
   467 ;; This function is called by:
   468 ;;		_main
   469 ;; This function uses a non-reentrant model
   470 ;;
   471                           
   472                           
   473                           ;psect for function _resetDatos
   474  00F9                     _resetDatos:	
   475                           
   476                           ;main.c: 134: for(int i = 0; i < 5; i++)
   477                           
   478                           ;incstack = 0
   479                           ; Regs used in _resetDatos: [wreg-fsr0h+status,2+status,0+btemp+1]
   480  00F9  1283               	bcf	3,5	;RP0=0, select bank0
   481  00FA  1303               	bcf	3,6	;RP1=0, select bank0
   482  00FB  01B1               	clrf	resetDatos@i
   483  00FC  01B2               	clrf	resetDatos@i+1
   484  00FD                     L1:	
   485  00FD  0832               	movf	resetDatos@i+1,w
   486  00FE  3A80               	xorlw	128
   487  00FF  00FF               	movwf	127
   488  0100  3080               	movlw	128
   489  0101  027F               	subwf	127,w
   490  0102  1D03               	skipz
   491  0103  2906               	goto	u235
   492  0104  3005               	movlw	5
   493  0105  0231               	subwf	resetDatos@i,w
   494  0106                     u235:	
   495  0106  1803               	btfsc	3,0
   496  0107  0008               	return
   497                           
   498                           ;main.c: 135: {
   499                           ;main.c: 136: if(RA4)
   500  0108  1283               	bcf	3,5	;RP0=0, select bank0
   501  0109  1303               	bcf	3,6	;RP1=0, select bank0
   502  010A  1E05               	btfss	5,4	;volatile
   503  010B  2956               	goto	l739
   504                           
   505                           ;main.c: 137: {
   506                           ;main.c: 138: RA3 = 1;
   507  010C  1585               	bsf	5,3	;volatile
   508                           
   509                           ;main.c: 139: _delay((unsigned long)((200)*(4000000/4000.0)));
   510  010D  3002               	movlw	2
   511  010E  1283               	bcf	3,5	;RP0=0, select bank0
   512  010F  1303               	bcf	3,6	;RP1=0, select bank0
   513  0110  00B0               	movwf	??_resetDatos+2
   514  0111  3004               	movlw	4
   515  0112  00AF               	movwf	??_resetDatos+1
   516  0113  30BA               	movlw	186
   517  0114  00AE               	movwf	??_resetDatos
   518  0115                     u457:	
   519  0115  0BAE               	decfsz	??_resetDatos,f
   520  0116  2915               	goto	u457
   521  0117  0BAF               	decfsz	??_resetDatos+1,f
   522  0118  2915               	goto	u457
   523  0119  0BB0               	decfsz	??_resetDatos+2,f
   524  011A  2915               	goto	u457
   525                           
   526                           ;main.c: 140: RA3 = 0;
   527  011B  1283               	bcf	3,5	;RP0=0, select bank0
   528  011C  1303               	bcf	3,6	;RP1=0, select bank0
   529  011D  1185               	bcf	5,3	;volatile
   530                           
   531                           ;main.c: 141: if(i >= 4)
   532  011E  0832               	movf	resetDatos@i+1,w
   533  011F  3A80               	xorlw	128
   534  0120  00FF               	movwf	127
   535  0121  3080               	movlw	128
   536  0122  027F               	subwf	127,w
   537  0123  1D03               	skipz
   538  0124  2927               	goto	u255
   539  0125  3004               	movlw	4
   540  0126  0231               	subwf	resetDatos@i,w
   541  0127                     u255:	
   542  0127  1C03               	skipc
   543  0128  2956               	goto	l739
   544                           
   545                           ;main.c: 142: {
   546                           ;main.c: 143: dataLength = 0;
   547  0129  01F9               	clrf	_dataLength
   548  012A  01FA               	clrf	_dataLength+1
   549                           
   550                           ;main.c: 144: for(int j = 0; j < 4; j++)
   551  012B  1283               	bcf	3,5	;RP0=0, select bank0
   552  012C  1303               	bcf	3,6	;RP1=0, select bank0
   553  012D  01B3               	clrf	resetDatos@j
   554  012E  01B4               	clrf	resetDatos@j+1
   555  012F  0834               	movf	resetDatos@j+1,w
   556  0130  3A80               	xorlw	128
   557  0131  00FF               	movwf	127
   558  0132  3080               	movlw	128
   559  0133  027F               	subwf	127,w
   560  0134  1D03               	skipz
   561  0135  2938               	goto	u265
   562  0136  3004               	movlw	4
   563  0137  0233               	subwf	resetDatos@j,w
   564  0138                     u265:	
   565  0138  1803               	btfsc	3,0
   566  0139  2956               	goto	l739
   567  013A                     l733:	
   568                           
   569                           ;main.c: 145: {
   570                           ;main.c: 146: palabras[j] = 0;
   571  013A  1283               	bcf	3,5	;RP0=0, select bank0
   572  013B  1303               	bcf	3,6	;RP1=0, select bank0
   573  013C  0833               	movf	resetDatos@j,w
   574  013D  00AE               	movwf	??_resetDatos
   575  013E  072E               	addwf	??_resetDatos,w
   576  013F  3E38               	addlw	(low (_palabras| 0))& (0+255)
   577  0140  0084               	movwf	4
   578  0141  1383               	bcf	3,7	;select IRP bank0
   579  0142  0180               	clrf	0
   580  0143  0A84               	incf	4,f
   581  0144  0180               	clrf	0
   582  0145  3001               	movlw	1
   583  0146  07B3               	addwf	resetDatos@j,f
   584  0147  1803               	skipnc
   585  0148  0AB4               	incf	resetDatos@j+1,f
   586  0149  3000               	movlw	0
   587  014A  07B4               	addwf	resetDatos@j+1,f
   588  014B  0834               	movf	resetDatos@j+1,w
   589  014C  3A80               	xorlw	128
   590  014D  00FF               	movwf	127
   591  014E  3080               	movlw	128
   592  014F  027F               	subwf	127,w
   593  0150  1D03               	skipz
   594  0151  2954               	goto	u275
   595  0152  3004               	movlw	4
   596  0153  0233               	subwf	resetDatos@j,w
   597  0154                     u275:	
   598  0154  1C03               	skipc
   599  0155  293A               	goto	l733
   600  0156                     l739:	
   601  0156  3001               	movlw	1
   602  0157  1283               	bcf	3,5	;RP0=0, select bank0
   603  0158  1303               	bcf	3,6	;RP1=0, select bank0
   604  0159  07B1               	addwf	resetDatos@i,f
   605  015A  1803               	skipnc
   606  015B  0AB2               	incf	resetDatos@i+1,f
   607  015C  3000               	movlw	0
   608  015D  07B2               	addwf	resetDatos@i+1,f
   609  015E  28FD               	goto	L1
   610  015F                     __end_of_resetDatos:	
   611                           
   612                           	psect	text3
   613  01AC                     __ptext3:	
   614 ;; *************** function _InitUART *****************
   615 ;; Defined at:
   616 ;;		line 106 in file "main.c"
   617 ;; Parameters:    Size  Location     Type
   618 ;;		None
   619 ;; Auto vars:     Size  Location     Type
   620 ;;		None
   621 ;; Return value:  Size  Location     Type
   622 ;;                  1    wreg      void 
   623 ;; Registers used:
   624 ;;		wreg
   625 ;; Tracked objects:
   626 ;;		On entry : 0/0
   627 ;;		On exit  : 0/0
   628 ;;		Unchanged: 0/0
   629 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   630 ;;      Params:         0       0       0       0
   631 ;;      Locals:         0       0       0       0
   632 ;;      Temps:          0       0       0       0
   633 ;;      Totals:         0       0       0       0
   634 ;;Total ram usage:        0 bytes
   635 ;; Hardware stack levels used:    1
   636 ;; Hardware stack levels required when called:    2
   637 ;; This function calls:
   638 ;;		Nothing
   639 ;; This function is called by:
   640 ;;		_main
   641 ;; This function uses a non-reentrant model
   642 ;;
   643                           
   644                           
   645                           ;psect for function _InitUART
   646  01AC                     _InitUART:	
   647                           
   648                           ;main.c: 108: SPBRG = ((4000000/16)/19200) - 1;
   649                           
   650                           ;incstack = 0
   651                           ; Regs used in _InitUART: [wreg]
   652  01AC  300C               	movlw	12
   653  01AD  1683               	bsf	3,5	;RP0=1, select bank1
   654  01AE  1303               	bcf	3,6	;RP1=0, select bank1
   655  01AF  0099               	movwf	25	;volatile
   656                           
   657                           ;main.c: 109: BRGH = 1;
   658  01B0  1518               	bsf	24,2	;volatile
   659                           
   660                           ;main.c: 110: SYNC = 0;
   661  01B1  1218               	bcf	24,4	;volatile
   662                           
   663                           ;main.c: 111: SPEN = 1;
   664  01B2  1283               	bcf	3,5	;RP0=0, select bank0
   665  01B3  1303               	bcf	3,6	;RP1=0, select bank0
   666  01B4  1798               	bsf	24,7	;volatile
   667                           
   668                           ;main.c: 112: CREN = 1;
   669  01B5  1618               	bsf	24,4	;volatile
   670                           
   671                           ;main.c: 113: SREN = 0;
   672  01B6  1298               	bcf	24,5	;volatile
   673                           
   674                           ;main.c: 114: TXIE = 0;
   675  01B7  1683               	bsf	3,5	;RP0=1, select bank1
   676  01B8  1303               	bcf	3,6	;RP1=0, select bank1
   677  01B9  120C               	bcf	12,4	;volatile
   678                           
   679                           ;main.c: 115: RCIE = 1;
   680  01BA  168C               	bsf	12,5	;volatile
   681                           
   682                           ;main.c: 116: TX9 = 0;
   683  01BB  1318               	bcf	24,6	;volatile
   684                           
   685                           ;main.c: 117: RX9 = 0;
   686  01BC  1283               	bcf	3,5	;RP0=0, select bank0
   687  01BD  1303               	bcf	3,6	;RP1=0, select bank0
   688  01BE  1318               	bcf	24,6	;volatile
   689                           
   690                           ;main.c: 118: TXEN = 0;
   691  01BF  1683               	bsf	3,5	;RP0=1, select bank1
   692  01C0  1303               	bcf	3,6	;RP1=0, select bank1
   693  01C1  1298               	bcf	24,5	;volatile
   694                           
   695                           ;main.c: 119: TXEN = 1;
   696  01C2  1698               	bsf	24,5	;volatile
   697  01C3  0008               	return
   698  01C4                     __end_of_InitUART:	
   699                           
   700                           	psect	text4
   701  0023                     __ptext4:	
   702 ;; *************** function _Interrupcion *****************
   703 ;; Defined at:
   704 ;;		line 57 in file "main.c"
   705 ;; Parameters:    Size  Location     Type
   706 ;;		None
   707 ;; Auto vars:     Size  Location     Type
   708 ;;		None
   709 ;; Return value:  Size  Location     Type
   710 ;;                  1    wreg      void 
   711 ;; Registers used:
   712 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   713 ;; Tracked objects:
   714 ;;		On entry : 0/0
   715 ;;		On exit  : 0/0
   716 ;;		Unchanged: 0/0
   717 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   718 ;;      Params:         0       0       0       0
   719 ;;      Locals:         0       0       0       0
   720 ;;      Temps:          0      14       0       0
   721 ;;      Totals:         0      14       0       0
   722 ;;Total ram usage:       14 bytes
   723 ;; Hardware stack levels used:    1
   724 ;; Hardware stack levels required when called:    1
   725 ;; This function calls:
   726 ;;		_ReceiveByteSerially
   727 ;;		_escribirSalida
   728 ;; This function is called by:
   729 ;;		Interrupt level 1
   730 ;; This function uses a non-reentrant model
   731 ;;
   732                           
   733                           
   734                           ;psect for function _Interrupcion
   735  0023                     _Interrupcion:	
   736                           
   737                           ;main.c: 59: if(RCIF)
   738  0023  1E8C               	btfss	12,5	;volatile
   739  0024  2881               	goto	i1l84
   740                           
   741                           ;main.c: 60: {
   742                           ;main.c: 61: lectura = ReceiveByteSerially();
   743  0025  21C4               	fcall	_ReceiveByteSerially
   744  0026  1283               	bcf	3,5	;RP0=0, select bank0
   745  0027  1303               	bcf	3,6	;RP1=0, select bank0
   746  0028  00A0               	movwf	??_Interrupcion
   747  0029  01A1               	clrf	??_Interrupcion+1
   748  002A  0820               	movf	??_Interrupcion,w
   749  002B  00F7               	movwf	_lectura
   750  002C  0821               	movf	??_Interrupcion+1,w
   751  002D  00F8               	movwf	_lectura+1
   752                           
   753                           ;main.c: 62: RA3 = !RA3;
   754  002E  3008               	movlw	8
   755  002F  0685               	xorwf	5,f
   756                           
   757                           ;main.c: 63: if(dataLength > 0)
   758  0030  0879               	movf	_dataLength,w
   759  0031  047A               	iorwf	_dataLength+1,w
   760  0032  1903               	btfsc	3,2
   761  0033  287D               	goto	i1l815
   762                           
   763                           ;main.c: 64: {
   764                           ;main.c: 65: indice = lectura/16;
   765  0034  0E77               	swapf	_lectura,w
   766  0035  390F               	andlw	15
   767  0036  00FB               	movwf	_indice
   768  0037  0E78               	swapf	_lectura+1,w
   769  0038  39F0               	andlw	240
   770  0039  04FB               	iorwf	_indice,f
   771  003A  0E78               	swapf	_lectura+1,w
   772  003B  390F               	andlw	15
   773  003C  00FC               	movwf	_indice+1
   774                           
   775                           ;main.c: 66: dataLength--;
   776  003D  3001               	movlw	1
   777  003E  02F9               	subwf	_dataLength,f
   778  003F  3000               	movlw	0
   779  0040  1C03               	skipc
   780  0041  03FA               	decf	_dataLength+1,f
   781  0042  02FA               	subwf	_dataLength+1,f
   782                           
   783                           ;main.c: 67: palabras[ indice ] = palabras[ indice ] | (1 << (lectura - (indice * 16)));
   784  0043  087B               	movf	_indice,w
   785  0044  00A0               	movwf	??_Interrupcion
   786  0045  0720               	addwf	??_Interrupcion,w
   787  0046  3E38               	addlw	(low (_palabras| 0))& (0+255)
   788  0047  0084               	movwf	4
   789  0048  1383               	bcf	3,7	;select IRP bank0
   790  0049  0800               	movf	0,w
   791  004A  00A1               	movwf	??_Interrupcion+1
   792  004B  0A84               	incf	4,f
   793  004C  0800               	movf	0,w
   794  004D  00A2               	movwf	??_Interrupcion+2
   795  004E  087B               	movf	_indice,w
   796  004F  00A3               	movwf	??_Interrupcion+3
   797  0050  3003               	movlw	3
   798  0051                     u40_25:	
   799  0051  1003               	clrc
   800  0052  0DA3               	rlf	??_Interrupcion+3,f
   801  0053  3EFF               	addlw	-1
   802  0054  1D03               	skipz
   803  0055  2851               	goto	u40_25
   804  0056  1003               	clrc
   805  0057  0D23               	rlf	??_Interrupcion+3,w
   806  0058  3AFF               	xorlw	255
   807  0059  3E01               	addlw	1
   808  005A  0777               	addwf	_lectura,w
   809  005B  00A4               	movwf	??_Interrupcion+4
   810  005C  0AA4               	incf	??_Interrupcion+4,f
   811  005D  3001               	movlw	1
   812  005E  00A5               	movwf	??_Interrupcion+5
   813  005F  3000               	movlw	0
   814  0060  00A6               	movwf	??_Interrupcion+6
   815  0061  2865               	goto	u41_24
   816  0062                     u41_25:	
   817  0062  1003               	clrc
   818  0063  0DA5               	rlf	??_Interrupcion+5,f
   819  0064  0DA6               	rlf	??_Interrupcion+6,f
   820  0065                     u41_24:	
   821  0065  0BA4               	decfsz	??_Interrupcion+4,f
   822  0066  2862               	goto	u41_25
   823  0067  0821               	movf	??_Interrupcion+1,w
   824  0068  0425               	iorwf	??_Interrupcion+5,w
   825  0069  00A7               	movwf	??_Interrupcion+7
   826  006A  0822               	movf	??_Interrupcion+2,w
   827  006B  0426               	iorwf	??_Interrupcion+6,w
   828  006C  00A8               	movwf	??_Interrupcion+8
   829  006D  087B               	movf	_indice,w
   830  006E  00A9               	movwf	??_Interrupcion+9
   831  006F  0729               	addwf	??_Interrupcion+9,w
   832  0070  3E38               	addlw	(low (_palabras| 0))& (0+255)
   833  0071  0084               	movwf	4
   834  0072  0827               	movf	??_Interrupcion+7,w
   835  0073  0080               	movwf	0
   836  0074  0A84               	incf	4,f
   837  0075  0828               	movf	??_Interrupcion+8,w
   838  0076  0080               	movwf	0
   839                           
   840                           ;main.c: 68: if(dataLength <= 0) escribirSalida();
   841  0077  0879               	movf	_dataLength,w
   842  0078  047A               	iorwf	_dataLength+1,w
   843  0079  1D03               	btfss	3,2
   844  007A  2881               	goto	i1l84
   845  007B  208E               	fcall	_escribirSalida
   846                           
   847                           ;main.c: 69: }
   848  007C  2881               	goto	i1l84
   849  007D                     i1l815:	
   850                           
   851                           ;main.c: 70: else
   852                           ;main.c: 71: {
   853                           ;main.c: 72: dataLength = lectura;
   854  007D  0878               	movf	_lectura+1,w
   855  007E  00FA               	movwf	_dataLength+1
   856  007F  0877               	movf	_lectura,w
   857  0080  00F9               	movwf	_dataLength
   858  0081                     i1l84:	
   859  0081  1283               	bcf	3,5	;RP0=0, select bank0
   860  0082  1303               	bcf	3,6	;RP1=0, select bank0
   861  0083  082D               	movf	??_Interrupcion+13,w
   862  0084  00FF               	movwf	127
   863  0085  082C               	movf	??_Interrupcion+12,w
   864  0086  008A               	movwf	10
   865  0087  082B               	movf	??_Interrupcion+11,w
   866  0088  0084               	movwf	4
   867  0089  0E2A               	swapf	(??_Interrupcion+10)^0,w
   868  008A  0083               	movwf	3
   869  008B  0EFE               	swapf	126,f
   870  008C  0E7E               	swapf	126,w
   871  008D  0009               	retfie
   872  008E                     __end_of_Interrupcion:	
   873                           
   874                           	psect	intentry
   875  0004                     __pintentry:	
   876                           ;incstack = 0
   877                           ; Regs used in _Interrupcion: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   878                           
   879  0004                     interrupt_function:	
   880  007E                     saved_w	set	btemp
   881  0004  00FE               	movwf	btemp
   882  0005  0E03               	swapf	3,w
   883  0006  1283               	bcf	3,5	;RP0=0, select bank0
   884  0007  1303               	bcf	3,6	;RP1=0, select bank0
   885  0008  00AA               	movwf	??_Interrupcion+10
   886  0009  0804               	movf	4,w
   887  000A  00AB               	movwf	??_Interrupcion+11
   888  000B  080A               	movf	10,w
   889  000C  00AC               	movwf	??_Interrupcion+12
   890  000D  087F               	movf	btemp+1,w
   891  000E  00AD               	movwf	??_Interrupcion+13
   892  000F  2823               	ljmp	_Interrupcion
   893                           
   894                           	psect	text5
   895  008E                     __ptext5:	
   896 ;; *************** function _escribirSalida *****************
   897 ;; Defined at:
   898 ;;		line 77 in file "main.c"
   899 ;; Parameters:    Size  Location     Type
   900 ;;		None
   901 ;; Auto vars:     Size  Location     Type
   902 ;;  i               2    3[COMMON] int 
   903 ;;  k               2    5[COMMON] int 
   904 ;; Return value:  Size  Location     Type
   905 ;;                  1    wreg      void 
   906 ;; Registers used:
   907 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1
   908 ;; Tracked objects:
   909 ;;		On entry : 0/0
   910 ;;		On exit  : 0/0
   911 ;;		Unchanged: 0/0
   912 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   913 ;;      Params:         0       0       0       0
   914 ;;      Locals:         4       0       0       0
   915 ;;      Temps:          3       0       0       0
   916 ;;      Totals:         7       0       0       0
   917 ;;Total ram usage:        7 bytes
   918 ;; Hardware stack levels used:    1
   919 ;; This function calls:
   920 ;;		Nothing
   921 ;; This function is called by:
   922 ;;		_Interrupcion
   923 ;; This function uses a non-reentrant model
   924 ;;
   925                           
   926                           
   927                           ;psect for function _escribirSalida
   928  008E                     _escribirSalida:	
   929                           
   930                           ;main.c: 79: for(int k = 0; k < 4; k++)
   931                           
   932                           ;incstack = 0
   933                           ; Regs used in _escribirSalida: [wreg-fsr0h+status,2+status,0+btemp+1]
   934  008E  01F5               	clrf	escribirSalida@k
   935  008F  01F6               	clrf	escribirSalida@k+1
   936  0090  0876               	movf	escribirSalida@k+1,w
   937  0091  3A80               	xorlw	128
   938  0092  00FF               	movwf	127
   939  0093  3080               	movlw	128
   940  0094  027F               	subwf	127,w
   941  0095  1D03               	skipz
   942  0096  2899               	goto	u30_25
   943  0097  3004               	movlw	4
   944  0098  0275               	subwf	escribirSalida@k,w
   945  0099                     u30_25:	
   946  0099  1803               	btfsc	3,0
   947  009A  28F4               	goto	i1l88
   948  009B                     i1l757:	
   949                           
   950                           ;main.c: 80: {
   951                           ;main.c: 81: for(int i = 0; i < 16; i++)
   952  009B  01F3               	clrf	escribirSalida@i
   953  009C  01F4               	clrf	escribirSalida@i+1
   954  009D  0874               	movf	escribirSalida@i+1,w
   955  009E  3A80               	xorlw	128
   956  009F  00FF               	movwf	127
   957  00A0  3080               	movlw	128
   958  00A1  027F               	subwf	127,w
   959  00A2  1D03               	skipz
   960  00A3  28A6               	goto	u31_25
   961  00A4  3010               	movlw	16
   962  00A5  0273               	subwf	escribirSalida@i,w
   963  00A6                     u31_25:	
   964  00A6  1803               	btfsc	3,0
   965  00A7  28DA               	goto	i1l773
   966  00A8                     i1l763:	
   967                           
   968                           ;main.c: 82: {
   969                           ;main.c: 83: RA0 = ((palabras[k] >> (16 - i)) & 1);
   970  00A8  0875               	movf	escribirSalida@k,w
   971  00A9  00F0               	movwf	??_escribirSalida
   972  00AA  0770               	addwf	??_escribirSalida,w
   973  00AB  3E38               	addlw	(low (_palabras| 0))& (0+255)
   974  00AC  0084               	movwf	4
   975  00AD  1383               	bcf	3,7	;select IRP bank0
   976  00AE  0800               	movf	0,w
   977  00AF  00F1               	movwf	??_escribirSalida+1
   978  00B0  0A84               	incf	4,f
   979  00B1  0800               	movf	0,w
   980  00B2  00F2               	movwf	??_escribirSalida+2
   981  00B3  0373               	decf	escribirSalida@i,w
   982  00B4  3AFF               	xorlw	255
   983  00B5  3E10               	addlw	16
   984  00B6  3E01               	addlw	1
   985  00B7  28BB               	goto	u32_24
   986  00B8                     u32_25:	
   987  00B8  1003               	clrc
   988  00B9  0CF2               	rrf	??_escribirSalida+2,f
   989  00BA  0CF1               	rrf	??_escribirSalida+1,f
   990  00BB                     u32_24:	
   991  00BB  3EFF               	addlw	-1
   992  00BC  1D03               	skipz
   993  00BD  28B8               	goto	u32_25
   994  00BE  1C71               	btfss	??_escribirSalida+1,0
   995  00BF  28C4               	goto	u33_20
   996  00C0  1283               	bcf	3,5	;RP0=0, select bank0
   997  00C1  1303               	bcf	3,6	;RP1=0, select bank0
   998  00C2  1405               	bsf	5,0	;volatile
   999  00C3  28C7               	goto	i1l765
  1000  00C4                     u33_20:	
  1001  00C4  1283               	bcf	3,5	;RP0=0, select bank0
  1002  00C5  1303               	bcf	3,6	;RP1=0, select bank0
  1003  00C6  1005               	bcf	5,0	;volatile
  1004  00C7                     i1l765:	
  1005                           
  1006                           ;main.c: 84: RA1 = 1;
  1007  00C7  1485               	bsf	5,1	;volatile
  1008                           
  1009                           ;main.c: 85: RA1 = 0;
  1010  00C8  1085               	bcf	5,1	;volatile
  1011  00C9  3001               	movlw	1
  1012  00CA  07F3               	addwf	escribirSalida@i,f
  1013  00CB  1803               	skipnc
  1014  00CC  0AF4               	incf	escribirSalida@i+1,f
  1015  00CD  3000               	movlw	0
  1016  00CE  07F4               	addwf	escribirSalida@i+1,f
  1017  00CF  0874               	movf	escribirSalida@i+1,w
  1018  00D0  3A80               	xorlw	128
  1019  00D1  00FF               	movwf	127
  1020  00D2  3080               	movlw	128
  1021  00D3  027F               	subwf	127,w
  1022  00D4  1D03               	skipz
  1023  00D5  28D8               	goto	u35_25
  1024  00D6  3010               	movlw	16
  1025  00D7  0273               	subwf	escribirSalida@i,w
  1026  00D8                     u35_25:	
  1027  00D8  1C03               	skipc
  1028  00D9  28A8               	goto	i1l763
  1029  00DA                     i1l773:	
  1030                           
  1031                           ;main.c: 86: }
  1032                           ;main.c: 87: palabras[k] = 0;
  1033  00DA  0875               	movf	escribirSalida@k,w
  1034  00DB  00F0               	movwf	??_escribirSalida
  1035  00DC  0770               	addwf	??_escribirSalida,w
  1036  00DD  3E38               	addlw	(low (_palabras| 0))& (0+255)
  1037  00DE  0084               	movwf	4
  1038  00DF  1383               	bcf	3,7	;select IRP bank0
  1039  00E0  0180               	clrf	0
  1040  00E1  0A84               	incf	4,f
  1041  00E2  0180               	clrf	0
  1042  00E3  3001               	movlw	1
  1043  00E4  07F5               	addwf	escribirSalida@k,f
  1044  00E5  1803               	skipnc
  1045  00E6  0AF6               	incf	escribirSalida@k+1,f
  1046  00E7  3000               	movlw	0
  1047  00E8  07F6               	addwf	escribirSalida@k+1,f
  1048  00E9  0876               	movf	escribirSalida@k+1,w
  1049  00EA  3A80               	xorlw	128
  1050  00EB  00FF               	movwf	127
  1051  00EC  3080               	movlw	128
  1052  00ED  027F               	subwf	127,w
  1053  00EE  1D03               	skipz
  1054  00EF  28F2               	goto	u36_25
  1055  00F0  3004               	movlw	4
  1056  00F1  0275               	subwf	escribirSalida@k,w
  1057  00F2                     u36_25:	
  1058  00F2  1C03               	skipc
  1059  00F3  289B               	goto	i1l757
  1060  00F4                     i1l88:	
  1061                           
  1062                           ;main.c: 88: }
  1063                           ;main.c: 90: RA2 = 1;
  1064  00F4  1283               	bcf	3,5	;RP0=0, select bank0
  1065  00F5  1303               	bcf	3,6	;RP1=0, select bank0
  1066  00F6  1505               	bsf	5,2	;volatile
  1067                           
  1068                           ;main.c: 91: RA2 = 0;
  1069  00F7  1105               	bcf	5,2	;volatile
  1070  00F8  0008               	return
  1071  00F9                     __end_of_escribirSalida:	
  1072                           
  1073                           	psect	text6
  1074  01C4                     __ptext6:	
  1075 ;; *************** function _ReceiveByteSerially *****************
  1076 ;; Defined at:
  1077 ;;		line 122 in file "main.c"
  1078 ;; Parameters:    Size  Location     Type
  1079 ;;		None
  1080 ;; Auto vars:     Size  Location     Type
  1081 ;;		None
  1082 ;; Return value:  Size  Location     Type
  1083 ;;                  1    wreg      unsigned char 
  1084 ;; Registers used:
  1085 ;;		wreg
  1086 ;; Tracked objects:
  1087 ;;		On entry : 0/0
  1088 ;;		On exit  : 0/0
  1089 ;;		Unchanged: 0/0
  1090 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1091 ;;      Params:         0       0       0       0
  1092 ;;      Locals:         0       0       0       0
  1093 ;;      Temps:          0       0       0       0
  1094 ;;      Totals:         0       0       0       0
  1095 ;;Total ram usage:        0 bytes
  1096 ;; Hardware stack levels used:    1
  1097 ;; This function calls:
  1098 ;;		Nothing
  1099 ;; This function is called by:
  1100 ;;		_Interrupcion
  1101 ;; This function uses a non-reentrant model
  1102 ;;
  1103                           
  1104                           
  1105                           ;psect for function _ReceiveByteSerially
  1106  01C4                     _ReceiveByteSerially:	
  1107                           
  1108                           ;main.c: 124: if(OERR)
  1109                           
  1110                           ;incstack = 0
  1111                           ; Regs used in _ReceiveByteSerially: [wreg]
  1112  01C4  1283               	bcf	3,5	;RP0=0, select bank0
  1113  01C5  1303               	bcf	3,6	;RP1=0, select bank0
  1114  01C6  1C98               	btfss	24,1	;volatile
  1115  01C7  29CA               	goto	i1l747
  1116                           
  1117                           ;main.c: 125: {
  1118                           ;main.c: 126: CREN = 0;
  1119  01C8  1218               	bcf	24,4	;volatile
  1120                           
  1121                           ;main.c: 127: CREN = 1;
  1122  01C9  1618               	bsf	24,4	;volatile
  1123  01CA                     i1l747:	
  1124                           
  1125                           ;main.c: 128: }
  1126                           ;main.c: 129: return RCREG;
  1127  01CA  081A               	movf	26,w	;volatile
  1128  01CB  0008               	return
  1129  01CC                     __end_of_ReceiveByteSerially:	
  1130  007E                     btemp	set	126	;btemp
  1131  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         14
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      7      13
    BANK0            80     24      32
    BANK1            80      0       0
    BANK2            48      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _Interrupcion in COMMON

    _Interrupcion->_escribirSalida

Critical Paths under _main in BANK0

    _main->_resetDatos

Critical Paths under _Interrupcion in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _Interrupcion in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _Interrupcion in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0     257
                                             21 BANK0      3     3      0
                           _InitUART
                         _resetDatos
                    _resetearSalidas
 ---------------------------------------------------------------------------------
 (1) _resetearSalidas                                      5     3      2     121
                                             14 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 (1) _resetDatos                                           7     7      0     136
                                             14 BANK0      7     7      0
 ---------------------------------------------------------------------------------
 (1) _InitUART                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _Interrupcion                                        14    14      0     158
                                              0 BANK0     14    14      0
                _ReceiveByteSerially
                     _escribirSalida
 ---------------------------------------------------------------------------------
 (3) _escribirSalida                                       7     7      0     158
                                              0 COMMON     7     7      0
 ---------------------------------------------------------------------------------
 (3) _ReceiveByteSerially                                  0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _InitUART
   _resetDatos
   _resetearSalidas

 _Interrupcion (ROOT)
   _ReceiveByteSerially
   _escribirSalida

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA              80      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      7       D       1       92.9%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
BANK0               50     18      20       3       40.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      2D       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK2            30      0       0       8        0.0%
BANK2               30      0       0       9        0.0%
DATA                 0      0      2D      10        0.0%


Microchip Technology PIC Macro Assembler V1.44 build -154322312 
Symbol Table                                                                                   Thu Nov 16 10:04:16 2017

                   __CFG_CP$OFF 0000                              l96 01A7         __size_of_escribirSalida 006B  
                           l711 018D                             l733 013A                             l739 0156  
                           l853 0174                             _GIE 005F                             _RA0 0028  
                           _RA1 0029                             _RA2 002A                             _RA3 002B  
                           _RA4 002C                             u225 0197                             u235 0106  
                           u255 0127                             u265 0138                    __CFG_CPD$OFF 0000  
                           u275 0154                             u447 0181                             u457 0115  
                           _RX9 00C6                             _TX9 04C6                             fsr0 0004  
                           indf 0000                    __CFG_LVP$OFF 0000                            _BRGH 04C2  
                          _CREN 00C4                            _PEIE 005E                            _RCIE 0465  
                          _RCIF 0065                            i1l84 0081                            i1l88 00F4  
                          _OERR 00C1                            _SPEN 00C7                            _SREN 00C5  
                          _TXIE 0464                            _TXEN 04C5                            _SYNC 04C4  
                          _main 015F                            btemp 007E                   __CFG_BOREN$ON 0000  
                          start 0010                           ?_main 0070                   __CFG_WDTE$OFF 0000  
                         _CMCON 001F                           i1l815 007D                           i1l747 01CA  
                         i1l763 00A8                           i1l765 00C7                           i1l773 00DA  
                         i1l757 009B                           _RCREG 001A                           u30_25 0099  
                         u31_25 00A6                           u32_24 00BB                           u32_25 00B8  
                         u40_25 0051                           u33_20 00C4                           u41_24 0065  
                         u41_25 0062                           _SPBRG 0099                           u35_25 00D8  
                         u36_25 00F2                           _TRISA 0085                           pclath 000A  
                         status 0003                           wtemp0 007E                  __CFG_MCLRE$OFF 0000  
               __initialization 0011                ?_resetearSalidas 002E                    __end_of_main 0189  
              __end_of_InitUART 01C4                          ??_main 0035                   ?_Interrupcion 0070  
                __CFG_PWRTE$OFF 0000                          _indice 007B                  _escribirSalida 008E  
                        saved_w 007E                  ??_Interrupcion 0020         __end_of__initialization 0021  
   __end_of_ReceiveByteSerially 01CC                  __pcstackCOMMON 0070          __end_of_escribirSalida 00F9  
                    _dataLength 0079                      __pbssBANK0 0038                       ?_InitUART 0070  
                    __pmaintext 015F                      __pintentry 0004                 ?_escribirSalida 0070  
                    ??_InitUART 002E                     resetDatos@i 0031                     resetDatos@j 0033  
                       __ptext1 0189                         __ptext2 00F9                         __ptext3 01AC  
                       __ptext4 0023                         __ptext5 008E                         __ptext6 01C4  
          __end_of_Interrupcion 008E                         _lectura 0077            end_of_initialization 0021  
                    _resetDatos 00F9        __size_of_resetearSalidas 0023             start_initialization 0011  
             __size_of_InitUART 0018                     ?_resetDatos 0070                ??_escribirSalida 0070  
         __size_of_Interrupcion 006B    __size_of_ReceiveByteSerially 0008                     __pbssCOMMON 0077  
                     ___latbits 0000                   __pcstackBANK0 0020               ??_resetearSalidas 0030  
                  _Interrupcion 0023             __size_of_resetDatos 0066                resetearSalidas@i 0031  
             interrupt_function 0004                        _InitUART 01AC             _ReceiveByteSerially 01C4  
                      _palabras 0038                   __size_of_main 002A                    ??_resetDatos 002E  
          ?_ReceiveByteSerially 0070                 _resetearSalidas 0189              __end_of_resetDatos 015F  
                      intlevel1 0000           ??_ReceiveByteSerially 0070  resetearSalidas@cantidadSalidas 002E  
               escribirSalida@i 0073                 escribirSalida@k 0075              __CFG_FOSC$INTOSCIO 0000  
       __end_of_resetearSalidas 01AC  
