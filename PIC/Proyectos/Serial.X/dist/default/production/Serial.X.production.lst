

Microchip Technology PIC LITE Macro Assembler V1.42 build -159332390 
                                                                                               Sun Nov 12 17:21:13 2017

Microchip Technology Omniscient Code Generator v1.42 (Free mode) build 201704130522
     1                           	processor	16F628A
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	maintext,global,class=CODE,split=1,delta=2
     9                           	psect	text1,local,class=CODE,merge=1,delta=2
    10                           	psect	text2,local,class=CODE,merge=1,delta=2
    11                           	psect	text3,local,class=CODE,merge=1,delta=2
    12                           	psect	intentry,global,class=CODE,delta=2
    13                           	psect	text4,local,class=CODE,merge=1,delta=2
    14                           	dabs	1,0x7E,2
    15  0000                     
    16                           ; Version 1.42
    17                           ; Generated 13/04/2017 GMT
    18                           ; 
    19                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    20                           ; All rights reserved.
    21                           ; 
    22                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    23                           ; 
    24                           ; Redistribution and use in source and binary forms, with or without modification, are
    25                           ; permitted provided that the following conditions are met:
    26                           ; 
    27                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    28                           ;        conditions and the following disclaimer.
    29                           ; 
    30                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    31                           ;        of conditions and the following disclaimer in the documentation and/or other
    32                           ;        materials provided with the distribution.
    33                           ; 
    34                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    35                           ;        software without specific prior written permission.
    36                           ; 
    37                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    38                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    39                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    40                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    41                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    42                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    43                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    44                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    45                           ; 
    46                           ; 
    47                           ; Code-generator required, PIC16F628A Definitions
    48                           ; 
    49                           ; SFR Addresses
    50  0000                     	;# 
    51  0001                     	;# 
    52  0002                     	;# 
    53  0003                     	;# 
    54  0004                     	;# 
    55  0005                     	;# 
    56  0006                     	;# 
    57  000A                     	;# 
    58  000B                     	;# 
    59  000C                     	;# 
    60  000E                     	;# 
    61  000E                     	;# 
    62  000F                     	;# 
    63  0010                     	;# 
    64  0011                     	;# 
    65  0012                     	;# 
    66  0015                     	;# 
    67  0015                     	;# 
    68  0016                     	;# 
    69  0017                     	;# 
    70  0018                     	;# 
    71  0019                     	;# 
    72  001A                     	;# 
    73  001F                     	;# 
    74  0081                     	;# 
    75  0085                     	;# 
    76  0086                     	;# 
    77  008C                     	;# 
    78  008E                     	;# 
    79  0092                     	;# 
    80  0098                     	;# 
    81  0099                     	;# 
    82  009A                     	;# 
    83  009B                     	;# 
    84  009C                     	;# 
    85  009D                     	;# 
    86  009F                     	;# 
    87  0000                     	;# 
    88  0001                     	;# 
    89  0002                     	;# 
    90  0003                     	;# 
    91  0004                     	;# 
    92  0005                     	;# 
    93  0006                     	;# 
    94  000A                     	;# 
    95  000B                     	;# 
    96  000C                     	;# 
    97  000E                     	;# 
    98  000E                     	;# 
    99  000F                     	;# 
   100  0010                     	;# 
   101  0011                     	;# 
   102  0012                     	;# 
   103  0015                     	;# 
   104  0015                     	;# 
   105  0016                     	;# 
   106  0017                     	;# 
   107  0018                     	;# 
   108  0019                     	;# 
   109  001A                     	;# 
   110  001F                     	;# 
   111  0081                     	;# 
   112  0085                     	;# 
   113  0086                     	;# 
   114  008C                     	;# 
   115  008E                     	;# 
   116  0092                     	;# 
   117  0098                     	;# 
   118  0099                     	;# 
   119  009A                     	;# 
   120  009B                     	;# 
   121  009C                     	;# 
   122  009D                     	;# 
   123  009F                     	;# 
   124  001A                     _RCREG	set	26
   125  0019                     _TXREG	set	25
   126  001F                     _CMCON	set	31
   127  0064                     _TXIF	set	100
   128  00C6                     _RX9	set	198
   129  00C5                     _SREN	set	197
   130  00C7                     _SPEN	set	199
   131  005E                     _PEIE	set	94
   132  005F                     _GIE	set	95
   133  00C4                     _CREN	set	196
   134  00C1                     _OERR	set	193
   135  0065                     _RCIF	set	101
   136  002A                     _RA2	set	42
   137  0029                     _RA1	set	41
   138  0028                     _RA0	set	40
   139  0099                     _SPBRG	set	153
   140  0085                     _TRISA	set	133
   141  04C5                     _TXEN	set	1221
   142  04C6                     _TX9	set	1222
   143  0465                     _RCIE	set	1125
   144  0464                     _TXIE	set	1124
   145  04C4                     _SYNC	set	1220
   146  04C2                     _BRGH	set	1218
   147  0431                     _TRISB1	set	1073
   148  0432                     _TRISB2	set	1074
   149                           
   150                           ; #config settings
   151  0000                     
   152                           	psect	cinit
   153  0011                     start_initialization:	
   154  0011                     __initialization:	
   155                           
   156                           ; Clear objects allocated to COMMON
   157  0011  01F0               	clrf	__pbssCOMMON& (0+127)
   158  0012  01F1               	clrf	(__pbssCOMMON+1)& (0+127)
   159  0013  01F2               	clrf	(__pbssCOMMON+2)& (0+127)
   160  0014  01F3               	clrf	(__pbssCOMMON+3)& (0+127)
   161  0015  01F4               	clrf	(__pbssCOMMON+4)& (0+127)
   162  0016  01F5               	clrf	(__pbssCOMMON+5)& (0+127)
   163  0017                     end_of_initialization:	
   164                           ;End of C runtime variable initialization code
   165                           
   166  0017                     __end_of__initialization:	
   167  0017  0183               	clrf	3
   168  0018  2892               	ljmp	_main	;jump to C main() function
   169                           
   170                           	psect	bssCOMMON
   171  0070                     __pbssCOMMON:	
   172  0070                     _palabra:	
   173  0070                     	ds	4
   174  0074                     _dataLength:	
   175  0074                     	ds	2
   176                           
   177                           	psect	cstackCOMMON
   178  0076                     __pcstackCOMMON:	
   179  0076                     ?_InitUART:	
   180  0076                     ?_escribirSalida:	
   181                           ; 1 bytes @ 0x0
   182                           
   183  0076                     ??_escribirSalida:	
   184                           ; 1 bytes @ 0x0
   185                           
   186  0076                     ?_ISR:	
   187                           ; 1 bytes @ 0x0
   188                           
   189  0076                     ?_main:	
   190                           ; 1 bytes @ 0x0
   191                           
   192  0076                     escribirSalida@i:	
   193                           ; 1 bytes @ 0x0
   194                           
   195                           
   196                           ; 2 bytes @ 0x0
   197  0076                     	ds	2
   198  0078                     ??_ISR:	
   199                           
   200                           ; 1 bytes @ 0x2
   201  0078                     	ds	4
   202                           
   203                           	psect	cstackBANK0
   204  0020                     __pcstackBANK0:	
   205  0020                     ??_InitUART:	
   206  0020                     ?_resetearSalidas:	
   207                           ; 1 bytes @ 0x0
   208                           
   209  0020                     resetearSalidas@cantidadSalidas:	
   210                           ; 1 bytes @ 0x0
   211                           
   212                           
   213                           ; 2 bytes @ 0x0
   214  0020                     	ds	2
   215  0022                     ??_resetearSalidas:	
   216                           
   217                           ; 1 bytes @ 0x2
   218  0022                     	ds	1
   219  0023                     resetearSalidas@i:	
   220                           
   221                           ; 2 bytes @ 0x3
   222  0023                     	ds	2
   223  0025                     ??_main:	
   224                           
   225                           	psect	maintext
   226  0092                     __pmaintext:	
   227                           ; 1 bytes @ 0x5
   228 ;;
   229 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   230 ;;
   231 ;; *************** function _main *****************
   232 ;; Defined at:
   233 ;;		line 79 in file "main.c"
   234 ;; Parameters:    Size  Location     Type
   235 ;;		None
   236 ;; Auto vars:     Size  Location     Type
   237 ;;		None
   238 ;; Return value:  Size  Location     Type
   239 ;;                  1    wreg      void 
   240 ;; Registers used:
   241 ;;		wreg, status,2, status,0, pclath, cstack
   242 ;; Tracked objects:
   243 ;;		On entry : B00/0
   244 ;;		On exit  : 0/0
   245 ;;		Unchanged: 0/0
   246 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   247 ;;      Params:         0       0       0       0
   248 ;;      Locals:         0       0       0       0
   249 ;;      Temps:          0       0       0       0
   250 ;;      Totals:         0       0       0       0
   251 ;;Total ram usage:        0 bytes
   252 ;; Hardware stack levels required when called:    3
   253 ;; This function calls:
   254 ;;		_InitUART
   255 ;;		_resetearSalidas
   256 ;; This function is called by:
   257 ;;		Startup code after reset
   258 ;; This function uses a non-reentrant model
   259 ;;
   260                           
   261                           
   262                           ;psect for function _main
   263  0092                     _main:	
   264                           
   265                           ;main.c: 81: CMCON = 0x07;
   266                           
   267                           ;incstack = 0
   268                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   269  0092  3007               	movlw	7
   270  0093  1283               	bcf	3,5	;RP0=0, select bank0
   271  0094  1303               	bcf	3,6	;RP1=0, select bank0
   272  0095  009F               	movwf	31	;volatile
   273                           
   274                           ;main.c: 82: TRISA = 0b00000000;
   275  0096  1683               	bsf	3,5	;RP0=1, select bank1
   276  0097  1303               	bcf	3,6	;RP1=0, select bank1
   277  0098  0185               	clrf	5	;volatile
   278                           
   279                           ;main.c: 84: InitUART();
   280  0099  2064               	fcall	_InitUART
   281                           
   282                           ;main.c: 88: GIE = 1;
   283  009A  178B               	bsf	11,7	;volatile
   284                           
   285                           ;main.c: 89: PEIE = 1;
   286  009B  170B               	bsf	11,6	;volatile
   287                           
   288                           ;main.c: 91: resetearSalidas(61);
   289  009C  303D               	movlw	61
   290  009D  1283               	bcf	3,5	;RP0=0, select bank0
   291  009E  1303               	bcf	3,6	;RP1=0, select bank0
   292  009F  00A0               	movwf	resetearSalidas@cantidadSalidas
   293  00A0  3000               	movlw	0
   294  00A1  00A1               	movwf	resetearSalidas@cantidadSalidas+1
   295  00A2  2041               	fcall	_resetearSalidas
   296  00A3                     l49:	
   297                           ;main.c: 93: while(1)
   298                           
   299                           
   300                           ;main.c: 94: {
   301  00A3  28A3               	goto	l49
   302  00A4                     __end_of_main:	
   303                           
   304                           	psect	text1
   305  0041                     __ptext1:	
   306 ;; *************** function _resetearSalidas *****************
   307 ;; Defined at:
   308 ;;		line 22 in file "main.c"
   309 ;; Parameters:    Size  Location     Type
   310 ;;  cantidadSali    2    0[BANK0 ] int 
   311 ;; Auto vars:     Size  Location     Type
   312 ;;  i               2    3[BANK0 ] int 
   313 ;; Return value:  Size  Location     Type
   314 ;;                  1    wreg      void 
   315 ;; Registers used:
   316 ;;		wreg, status,2, status,0
   317 ;; Tracked objects:
   318 ;;		On entry : 0/0
   319 ;;		On exit  : 0/0
   320 ;;		Unchanged: 0/0
   321 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   322 ;;      Params:         0       2       0       0
   323 ;;      Locals:         0       2       0       0
   324 ;;      Temps:          0       1       0       0
   325 ;;      Totals:         0       5       0       0
   326 ;;Total ram usage:        5 bytes
   327 ;; Hardware stack levels used:    1
   328 ;; Hardware stack levels required when called:    2
   329 ;; This function calls:
   330 ;;		Nothing
   331 ;; This function is called by:
   332 ;;		_main
   333 ;; This function uses a non-reentrant model
   334 ;;
   335                           
   336                           
   337                           ;psect for function _resetearSalidas
   338  0041                     _resetearSalidas:	
   339                           
   340                           ;main.c: 24: for(int i = 0; i < cantidadSalidas; i = i + 1)
   341                           
   342                           ;incstack = 0
   343                           ; Regs used in _resetearSalidas: [wreg+status,2+status,0]
   344  0041  1283               	bcf	3,5	;RP0=0, select bank0
   345  0042  1303               	bcf	3,6	;RP1=0, select bank0
   346  0043  01A3               	clrf	resetearSalidas@i
   347  0044  01A4               	clrf	resetearSalidas@i+1
   348  0045                     l674:	
   349  0045  0824               	movf	resetearSalidas@i+1,w
   350  0046  3A80               	xorlw	128
   351  0047  00A2               	movwf	??_resetearSalidas
   352  0048  0821               	movf	resetearSalidas@cantidadSalidas+1,w
   353  0049  3A80               	xorlw	128
   354  004A  0222               	subwf	??_resetearSalidas,w
   355  004B  1D03               	skipz
   356  004C  284F               	goto	u115
   357  004D  0820               	movf	resetearSalidas@cantidadSalidas,w
   358  004E  0223               	subwf	resetearSalidas@i,w
   359  004F                     u115:	
   360  004F  1803               	btfsc	3,0
   361  0050  285F               	goto	l31
   362                           
   363                           ;main.c: 25: {
   364                           ;main.c: 26: RA0 = 0;
   365  0051  1283               	bcf	3,5	;RP0=0, select bank0
   366  0052  1303               	bcf	3,6	;RP1=0, select bank0
   367  0053  1005               	bcf	5,0	;volatile
   368                           
   369                           ;main.c: 27: RA1 = 1;
   370  0054  1485               	bsf	5,1	;volatile
   371                           
   372                           ;main.c: 28: RA1 = 0;
   373  0055  1085               	bcf	5,1	;volatile
   374  0056  0823               	movf	resetearSalidas@i,w
   375  0057  3E01               	addlw	1
   376  0058  00A3               	movwf	resetearSalidas@i
   377  0059  0824               	movf	resetearSalidas@i+1,w
   378  005A  1803               	skipnc
   379  005B  3E01               	addlw	1
   380  005C  3E00               	addlw	0
   381  005D  00A4               	movwf	resetearSalidas@i+1
   382  005E  2845               	goto	l674
   383  005F                     l31:	
   384                           
   385                           ;main.c: 29: }
   386                           ;main.c: 30: RA2 = 1;
   387  005F  1283               	bcf	3,5	;RP0=0, select bank0
   388  0060  1303               	bcf	3,6	;RP1=0, select bank0
   389  0061  1505               	bsf	5,2	;volatile
   390                           
   391                           ;main.c: 31: RA2 = 0;
   392  0062  1105               	bcf	5,2	;volatile
   393  0063  0008               	return
   394  0064                     __end_of_resetearSalidas:	
   395                           
   396                           	psect	text2
   397  0064                     __ptext2:	
   398 ;; *************** function _InitUART *****************
   399 ;; Defined at:
   400 ;;		line 7 in file "UART.c"
   401 ;; Parameters:    Size  Location     Type
   402 ;;		None
   403 ;; Auto vars:     Size  Location     Type
   404 ;;		None
   405 ;; Return value:  Size  Location     Type
   406 ;;                  1    wreg      void 
   407 ;; Registers used:
   408 ;;		wreg
   409 ;; Tracked objects:
   410 ;;		On entry : 0/0
   411 ;;		On exit  : 0/0
   412 ;;		Unchanged: 0/0
   413 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   414 ;;      Params:         0       0       0       0
   415 ;;      Locals:         0       0       0       0
   416 ;;      Temps:          0       0       0       0
   417 ;;      Totals:         0       0       0       0
   418 ;;Total ram usage:        0 bytes
   419 ;; Hardware stack levels used:    1
   420 ;; Hardware stack levels required when called:    2
   421 ;; This function calls:
   422 ;;		Nothing
   423 ;; This function is called by:
   424 ;;		_main
   425 ;; This function uses a non-reentrant model
   426 ;;
   427                           
   428                           
   429                           ;psect for function _InitUART
   430  0064                     _InitUART:	
   431                           
   432                           ;UART.c: 9: TRISB2 = 0;
   433                           
   434                           ;incstack = 0
   435                           ; Regs used in _InitUART: [wreg]
   436  0064  1683               	bsf	3,5	;RP0=1, select bank1
   437  0065  1303               	bcf	3,6	;RP1=0, select bank1
   438  0066  1106               	bcf	6,2	;volatile
   439                           
   440                           ;UART.c: 10: TRISB1 = 1;
   441  0067  1486               	bsf	6,1	;volatile
   442                           
   443                           ;UART.c: 12: SPBRG = ((4000000/16)/9600) - 1;
   444  0068  3019               	movlw	25
   445  0069  0099               	movwf	25	;volatile
   446                           
   447                           ;UART.c: 13: BRGH = 1;
   448  006A  1518               	bsf	24,2	;volatile
   449                           
   450                           ;UART.c: 14: SYNC = 0;
   451  006B  1218               	bcf	24,4	;volatile
   452                           
   453                           ;UART.c: 15: SPEN = 1;
   454  006C  1283               	bcf	3,5	;RP0=0, select bank0
   455  006D  1303               	bcf	3,6	;RP1=0, select bank0
   456  006E  1798               	bsf	24,7	;volatile
   457                           
   458                           ;UART.c: 16: CREN = 1;
   459  006F  1618               	bsf	24,4	;volatile
   460                           
   461                           ;UART.c: 17: SREN = 0;
   462  0070  1298               	bcf	24,5	;volatile
   463                           
   464                           ;UART.c: 18: TXIE = 0;
   465  0071  1683               	bsf	3,5	;RP0=1, select bank1
   466  0072  1303               	bcf	3,6	;RP1=0, select bank1
   467  0073  120C               	bcf	12,4	;volatile
   468                           
   469                           ;UART.c: 19: RCIE = 1;
   470  0074  168C               	bsf	12,5	;volatile
   471                           
   472                           ;UART.c: 20: TX9 = 0;
   473  0075  1318               	bcf	24,6	;volatile
   474                           
   475                           ;UART.c: 21: RX9 = 0;
   476  0076  1283               	bcf	3,5	;RP0=0, select bank0
   477  0077  1303               	bcf	3,6	;RP1=0, select bank0
   478  0078  1318               	bcf	24,6	;volatile
   479                           
   480                           ;UART.c: 22: TXEN = 0;
   481  0079  1683               	bsf	3,5	;RP0=1, select bank1
   482  007A  1303               	bcf	3,6	;RP1=0, select bank1
   483  007B  1298               	bcf	24,5	;volatile
   484                           
   485                           ;UART.c: 23: TXEN = 1;
   486  007C  1698               	bsf	24,5	;volatile
   487  007D  0008               	return
   488  007E                     __end_of_InitUART:	
   489                           
   490                           	psect	text3
   491  007E                     __ptext3:	
   492 ;; *************** function _ISR *****************
   493 ;; Defined at:
   494 ;;		line 48 in file "main.c"
   495 ;; Parameters:    Size  Location     Type
   496 ;;		None
   497 ;; Auto vars:     Size  Location     Type
   498 ;;		None
   499 ;; Return value:  Size  Location     Type
   500 ;;                  1    wreg      void 
   501 ;; Registers used:
   502 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
   503 ;; Tracked objects:
   504 ;;		On entry : 0/0
   505 ;;		On exit  : 0/0
   506 ;;		Unchanged: 0/0
   507 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   508 ;;      Params:         0       0       0       0
   509 ;;      Locals:         0       0       0       0
   510 ;;      Temps:          4       0       0       0
   511 ;;      Totals:         4       0       0       0
   512 ;;Total ram usage:        4 bytes
   513 ;; Hardware stack levels used:    1
   514 ;; Hardware stack levels required when called:    1
   515 ;; This function calls:
   516 ;;		_escribirSalida
   517 ;; This function is called by:
   518 ;;		Interrupt level 1
   519 ;; This function uses a non-reentrant model
   520 ;;
   521                           
   522                           
   523                           ;psect for function _ISR
   524  007E                     _ISR:	
   525                           
   526                           ;main.c: 50: if(RCIF)
   527  007E  1E8C               	btfss	12,5	;volatile
   528  007F  2885               	goto	i1l44
   529                           
   530                           ;main.c: 51: {
   531                           ;main.c: 52: if(OERR)
   532  0080  1C98               	btfss	24,1	;volatile
   533  0081  2884               	goto	i1l622
   534                           
   535                           ;main.c: 53: {
   536                           ;main.c: 54: CREN = 0;
   537  0082  1218               	bcf	24,4	;volatile
   538                           
   539                           ;main.c: 55: CREN = 1;
   540  0083  1618               	bsf	24,4	;volatile
   541  0084                     i1l622:	
   542                           
   543                           ;main.c: 56: }
   544                           ;main.c: 57: escribirSalida();
   545  0084  2019               	fcall	_escribirSalida
   546  0085                     i1l44:	
   547  0085  087B               	movf	??_ISR+3,w
   548  0086  1283               	bcf	3,5	;RP0=0, select bank0
   549  0087  1303               	bcf	3,6	;RP1=0, select bank0
   550  0088  00FF               	movwf	127
   551  0089  087A               	movf	??_ISR+2,w
   552  008A  008A               	movwf	10
   553  008B  0879               	movf	??_ISR+1,w
   554  008C  0084               	movwf	4
   555  008D  0E78               	swapf	??_ISR^(0+-128),w
   556  008E  0083               	movwf	3
   557  008F  0EFE               	swapf	126,f
   558  0090  0E7E               	swapf	126,w
   559  0091  0009               	retfie
   560  0092                     __end_of_ISR:	
   561                           
   562                           	psect	intentry
   563  0004                     __pintentry:	
   564                           ;incstack = 0
   565                           ; Regs used in _ISR: [wreg+status,2+status,0+btemp+1+pclath+cstack]
   566                           
   567  0004                     interrupt_function:	
   568  007E                     saved_w	set	btemp
   569  0004  00FE               	movwf	btemp
   570  0005  0E03               	swapf	3,w
   571  0006  00F8               	movwf	??_ISR
   572  0007  0804               	movf	4,w
   573  0008  00F9               	movwf	??_ISR+1
   574  0009  080A               	movf	10,w
   575  000A  00FA               	movwf	??_ISR+2
   576  000B  1283               	bcf	3,5	;RP0=0, select bank0
   577  000C  1303               	bcf	3,6	;RP1=0, select bank0
   578  000D  087F               	movf	btemp+1,w
   579  000E  00FB               	movwf	??_ISR+3
   580  000F  287E               	ljmp	_ISR
   581                           
   582                           	psect	text4
   583  0019                     __ptext4:	
   584 ;; *************** function _escribirSalida *****************
   585 ;; Defined at:
   586 ;;		line 34 in file "main.c"
   587 ;; Parameters:    Size  Location     Type
   588 ;;		None
   589 ;; Auto vars:     Size  Location     Type
   590 ;;  i               2    0[COMMON] int 
   591 ;; Return value:  Size  Location     Type
   592 ;;                  1    wreg      void 
   593 ;; Registers used:
   594 ;;		wreg, status,2, btemp+1
   595 ;; Tracked objects:
   596 ;;		On entry : 0/0
   597 ;;		On exit  : 0/0
   598 ;;		Unchanged: 0/0
   599 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   600 ;;      Params:         0       0       0       0
   601 ;;      Locals:         2       0       0       0
   602 ;;      Temps:          0       0       0       0
   603 ;;      Totals:         2       0       0       0
   604 ;;Total ram usage:        2 bytes
   605 ;; Hardware stack levels used:    1
   606 ;; This function calls:
   607 ;;		Nothing
   608 ;; This function is called by:
   609 ;;		_ISR
   610 ;; This function uses a non-reentrant model
   611 ;;
   612                           
   613                           
   614                           ;psect for function _escribirSalida
   615  0019                     _escribirSalida:	
   616                           
   617                           ;main.c: 36: for(int i = 0; i < 61; i++)
   618                           
   619                           ;incstack = 0
   620                           ; Regs used in _escribirSalida: [wreg+status,2+btemp+1]
   621  0019  01F6               	clrf	escribirSalida@i
   622  001A  01F7               	clrf	escribirSalida@i+1
   623  001B  0877               	movf	escribirSalida@i+1,w
   624  001C  3A80               	xorlw	128
   625  001D  00FF               	movwf	127
   626  001E  3080               	movlw	128
   627  001F  027F               	subwf	127,w
   628  0020  1D03               	skipz
   629  0021  2824               	goto	u2_25
   630  0022  303D               	movlw	61
   631  0023  0276               	subwf	escribirSalida@i,w
   632  0024                     u2_25:	
   633  0024  1803               	btfsc	3,0
   634  0025  283C               	goto	i1l36
   635  0026                     i1l35:	
   636                           
   637                           ;main.c: 37: {
   638                           ;main.c: 39: RA0 = 1;
   639  0026  1283               	bcf	3,5	;RP0=0, select bank0
   640  0027  1303               	bcf	3,6	;RP1=0, select bank0
   641  0028  1405               	bsf	5,0	;volatile
   642                           
   643                           ;main.c: 40: RA1 = 1;
   644  0029  1485               	bsf	5,1	;volatile
   645                           
   646                           ;main.c: 41: RA1 = 0;
   647  002A  1085               	bcf	5,1	;volatile
   648  002B  3001               	movlw	1
   649  002C  07F6               	addwf	escribirSalida@i,f
   650  002D  1803               	skipnc
   651  002E  0AF7               	incf	escribirSalida@i+1,f
   652  002F  3000               	movlw	0
   653  0030  07F7               	addwf	escribirSalida@i+1,f
   654  0031  0877               	movf	escribirSalida@i+1,w
   655  0032  3A80               	xorlw	128
   656  0033  00FF               	movwf	127
   657  0034  3080               	movlw	128
   658  0035  027F               	subwf	127,w
   659  0036  1D03               	skipz
   660  0037  283A               	goto	u3_25
   661  0038  303D               	movlw	61
   662  0039  0276               	subwf	escribirSalida@i,w
   663  003A                     u3_25:	
   664  003A  1C03               	skipc
   665  003B  2826               	goto	i1l35
   666  003C                     i1l36:	
   667                           
   668                           ;main.c: 42: }
   669                           ;main.c: 43: RA2 = 1;
   670  003C  1283               	bcf	3,5	;RP0=0, select bank0
   671  003D  1303               	bcf	3,6	;RP1=0, select bank0
   672  003E  1505               	bsf	5,2	;volatile
   673                           
   674                           ;main.c: 44: RA2 = 0;
   675  003F  1105               	bcf	5,2	;volatile
   676  0040  0008               	return
   677  0041                     __end_of_escribirSalida:	
   678  007E                     btemp	set	126	;btemp
   679  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         6
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      6      12
    BANK0            80      5       5
    BANK1            80      0       0
    BANK2            48      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _ISR in COMMON

    _ISR->_escribirSalida

Critical Paths under _main in BANK0

    _main->_resetearSalidas

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0     164
                           _InitUART
                    _resetearSalidas
 ---------------------------------------------------------------------------------
 (1) _resetearSalidas                                      5     3      2     164
                                              0 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 (1) _InitUART                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _ISR                                                  4     4      0      30
                                              2 COMMON     4     4      0
                     _escribirSalida
 ---------------------------------------------------------------------------------
 (3) _escribirSalida                                       2     2      0      30
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _InitUART
   _resetearSalidas

 _ISR (ROOT)
   _escribirSalida

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA              80      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      6       C       1       85.7%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
BANK0               50      5       5       3        6.3%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      11       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK2            30      0       0       8        0.0%
BANK2               30      0       0       9        0.0%
DATA                 0      0      11      10        0.0%


Microchip Technology PIC Macro Assembler V1.42 build -159332390 
Symbol Table                                                                                   Sun Nov 12 17:21:13 2017

                   __CFG_CP$OFF 0000                              l31 005F                              l49 00A3  
       __size_of_escribirSalida 0028                             l674 0045                             _GIE 005F  
                           _RA0 0028                             _RA1 0029                             _RA2 002A  
                           u115 004F                    __CFG_CPD$OFF 0000                             _ISR 007E  
                           _RX9 00C6                             _TX9 04C6                             fsr0 0004  
                  __CFG_LVP$OFF 0000                            ?_ISR 0076                            _BRGH 04C2  
                          _CREN 00C4                            _PEIE 005E                            i1l35 0026  
                          _RCIE 0465                            i1l36 003C                            i1l44 0085  
                          _RCIF 0065                            _OERR 00C1                            _SPEN 00C7  
                          _SREN 00C5                            _TXIE 0464                            _TXEN 04C5  
                          _TXIF 0064                            _SYNC 04C4                            u2_25 0024  
                          u3_25 003A                            _main 0092                            btemp 007E  
                 __CFG_BOREN$ON 0000                            start 0010                           ??_ISR 0078  
                         ?_main 0076                   __CFG_WDTE$OFF 0000                           _CMCON 001F  
                         i1l622 0084                           _RCREG 001A                           _SPBRG 0099  
                         _TRISA 0085                           _TXREG 0019                           pclath 000A  
                         status 0003                           wtemp0 007E                  __CFG_MCLRE$OFF 0000  
               __initialization 0011                ?_resetearSalidas 0020                    __end_of_main 00A4  
              __end_of_InitUART 007E                          ??_main 0025                          _TRISB1 0431  
                        _TRISB2 0432                  __CFG_PWRTE$OFF 0000                  _escribirSalida 0019  
                        saved_w 007E         __end_of__initialization 0017                  __pcstackCOMMON 0076  
        __end_of_escribirSalida 0041                      _dataLength 0074                       ?_InitUART 0076  
                    __pmaintext 0092                      __pintentry 0004                 ?_escribirSalida 0076  
                    ??_InitUART 0020                         __ptext1 0041                         __ptext2 0064  
                       __ptext3 007E                         __ptext4 0019                    __size_of_ISR 0014  
                       _palabra 0070            end_of_initialization 0017        __size_of_resetearSalidas 0023  
           start_initialization 0011                     __end_of_ISR 0092               __size_of_InitUART 001A  
              ??_escribirSalida 0076                     __pbssCOMMON 0070                       ___latbits 0000  
                 __pcstackBANK0 0020               ??_resetearSalidas 0022                resetearSalidas@i 0023  
             interrupt_function 0004                        _InitUART 0064                   __size_of_main 0012  
               _resetearSalidas 0041                        intlevel1 0000  resetearSalidas@cantidadSalidas 0020  
               escribirSalida@i 0076              __CFG_FOSC$INTOSCIO 0000         __end_of_resetearSalidas 0064  
