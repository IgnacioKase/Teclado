

Microchip Technology PIC LITE Macro Assembler V1.42 build -159332390 
                                                                                               Tue Nov 14 21:30:14 2017

Microchip Technology Omniscient Code Generator v1.42 (Free mode) build 201704130522
     1                           	processor	16F628A
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     7                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     8                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	maintext,global,class=CODE,split=1,delta=2
    10                           	psect	text1,local,class=CODE,merge=1,delta=2
    11                           	psect	text2,local,class=CODE,merge=1,delta=2
    12                           	psect	text3,local,class=CODE,merge=1,delta=2
    13                           	psect	intentry,global,class=CODE,delta=2
    14                           	psect	text4,local,class=CODE,merge=1,delta=2
    15                           	psect	text5,local,class=CODE,merge=1,delta=2
    16                           	dabs	1,0x7E,2
    17  0000                     
    18                           ; Version 1.42
    19                           ; Generated 13/04/2017 GMT
    20                           ; 
    21                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    22                           ; All rights reserved.
    23                           ; 
    24                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    25                           ; 
    26                           ; Redistribution and use in source and binary forms, with or without modification, are
    27                           ; permitted provided that the following conditions are met:
    28                           ; 
    29                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    30                           ;        conditions and the following disclaimer.
    31                           ; 
    32                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    33                           ;        of conditions and the following disclaimer in the documentation and/or other
    34                           ;        materials provided with the distribution.
    35                           ; 
    36                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    37                           ;        software without specific prior written permission.
    38                           ; 
    39                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    40                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    41                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    42                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    43                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    44                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    45                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    46                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    47                           ; 
    48                           ; 
    49                           ; Code-generator required, PIC16F628A Definitions
    50                           ; 
    51                           ; SFR Addresses
    52  0000                     	;# 
    53  0001                     	;# 
    54  0002                     	;# 
    55  0003                     	;# 
    56  0004                     	;# 
    57  0005                     	;# 
    58  0006                     	;# 
    59  000A                     	;# 
    60  000B                     	;# 
    61  000C                     	;# 
    62  000E                     	;# 
    63  000E                     	;# 
    64  000F                     	;# 
    65  0010                     	;# 
    66  0011                     	;# 
    67  0012                     	;# 
    68  0015                     	;# 
    69  0015                     	;# 
    70  0016                     	;# 
    71  0017                     	;# 
    72  0018                     	;# 
    73  0019                     	;# 
    74  001A                     	;# 
    75  001F                     	;# 
    76  0081                     	;# 
    77  0085                     	;# 
    78  0086                     	;# 
    79  008C                     	;# 
    80  008E                     	;# 
    81  0092                     	;# 
    82  0098                     	;# 
    83  0099                     	;# 
    84  009A                     	;# 
    85  009B                     	;# 
    86  009C                     	;# 
    87  009D                     	;# 
    88  009F                     	;# 
    89  001A                     _RCREG	set	26
    90  001F                     _CMCON	set	31
    91  00C1                     _OERR	set	193
    92  00C6                     _RX9	set	198
    93  00C5                     _SREN	set	197
    94  00C4                     _CREN	set	196
    95  00C7                     _SPEN	set	199
    96  002A                     _RA2	set	42
    97  0029                     _RA1	set	41
    98  0028                     _RA0	set	40
    99  0065                     _RCIF	set	101
   100  005E                     _PEIE	set	94
   101  005F                     _GIE	set	95
   102  002B                     _RA3	set	43
   103  0099                     _SPBRG	set	153
   104  0085                     _TRISA	set	133
   105  04C5                     _TXEN	set	1221
   106  04C6                     _TX9	set	1222
   107  0465                     _RCIE	set	1125
   108  0464                     _TXIE	set	1124
   109  04C4                     _SYNC	set	1220
   110  04C2                     _BRGH	set	1218
   111                           
   112                           ; #config settings
   113  0000                     
   114                           	psect	cinit
   115  0011                     start_initialization:	
   116  0011                     __initialization:	
   117                           
   118                           ; Clear objects allocated to COMMON
   119  0011  01F7               	clrf	__pbssCOMMON& (0+127)
   120  0012  01F8               	clrf	(__pbssCOMMON+1)& (0+127)
   121  0013  01F9               	clrf	(__pbssCOMMON+2)& (0+127)
   122  0014  01FA               	clrf	(__pbssCOMMON+3)& (0+127)
   123  0015  01FB               	clrf	(__pbssCOMMON+4)& (0+127)
   124  0016  01FC               	clrf	(__pbssCOMMON+5)& (0+127)
   125                           
   126                           ; Clear objects allocated to BANK0
   127  0017  01B3               	clrf	__pbssBANK0& (0+127)
   128  0018  01B4               	clrf	(__pbssBANK0+1)& (0+127)
   129  0019  01B5               	clrf	(__pbssBANK0+2)& (0+127)
   130  001A  01B6               	clrf	(__pbssBANK0+3)& (0+127)
   131  001B  01B7               	clrf	(__pbssBANK0+4)& (0+127)
   132  001C  01B8               	clrf	(__pbssBANK0+5)& (0+127)
   133  001D  01B9               	clrf	(__pbssBANK0+6)& (0+127)
   134  001E  01BA               	clrf	(__pbssBANK0+7)& (0+127)
   135  001F                     end_of_initialization:	
   136                           ;End of C runtime variable initialization code
   137                           
   138  001F                     __end_of__initialization:	
   139  001F  0183               	clrf	3
   140  0020  2932               	ljmp	_main	;jump to C main() function
   141                           
   142                           	psect	bssCOMMON
   143  0077                     __pbssCOMMON:	
   144  0077                     _lectura:	
   145  0077                     	ds	2
   146  0079                     _dataLength:	
   147  0079                     	ds	2
   148  007B                     _indice:	
   149  007B                     	ds	2
   150                           
   151                           	psect	bssBANK0
   152  0033                     __pbssBANK0:	
   153  0033                     _palabras:	
   154  0033                     	ds	8
   155                           
   156                           	psect	cstackCOMMON
   157  0070                     __pcstackCOMMON:	
   158  0070                     ?_InitUART:	
   159  0070                     ?_ReceiveByteSerially:	
   160                           ; 1 bytes @ 0x0
   161                           
   162  0070                     ??_ReceiveByteSerially:	
   163                           ; 1 bytes @ 0x0
   164                           
   165  0070                     ?_escribirSalida:	
   166                           ; 1 bytes @ 0x0
   167                           
   168  0070                     ??_escribirSalida:	
   169                           ; 1 bytes @ 0x0
   170                           
   171  0070                     ?_main:	
   172                           ; 1 bytes @ 0x0
   173                           
   174  0070                     ?_Interrupcion:	
   175                           ; 1 bytes @ 0x0
   176                           
   177                           
   178                           ; 1 bytes @ 0x0
   179  0070                     	ds	3
   180  0073                     escribirSalida@i:	
   181                           
   182                           ; 2 bytes @ 0x3
   183  0073                     	ds	2
   184  0075                     escribirSalida@k:	
   185                           
   186                           ; 2 bytes @ 0x5
   187  0075                     	ds	2
   188                           
   189                           	psect	cstackBANK0
   190  0020                     __pcstackBANK0:	
   191  0020                     ??_Interrupcion:	
   192                           
   193                           ; 1 bytes @ 0x0
   194  0020                     	ds	14
   195  002E                     ??_InitUART:	
   196  002E                     ?_resetearSalidas:	
   197                           ; 1 bytes @ 0xE
   198                           
   199  002E                     resetearSalidas@cantidadSalidas:	
   200                           ; 1 bytes @ 0xE
   201                           
   202                           
   203                           ; 2 bytes @ 0xE
   204  002E                     	ds	2
   205  0030                     ??_resetearSalidas:	
   206                           
   207                           ; 1 bytes @ 0x10
   208  0030                     	ds	1
   209  0031                     resetearSalidas@i:	
   210                           
   211                           ; 2 bytes @ 0x11
   212  0031                     	ds	2
   213  0033                     ??_main:	
   214                           
   215                           	psect	maintext
   216  0132                     __pmaintext:	
   217                           ; 1 bytes @ 0x13
   218 ;;
   219 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   220 ;;
   221 ;; *************** function _main *****************
   222 ;; Defined at:
   223 ;;		line 31 in file "main.c"
   224 ;; Parameters:    Size  Location     Type
   225 ;;		None
   226 ;; Auto vars:     Size  Location     Type
   227 ;;		None
   228 ;; Return value:  Size  Location     Type
   229 ;;                  1    wreg      void 
   230 ;; Registers used:
   231 ;;		wreg, status,2, status,0, pclath, cstack
   232 ;; Tracked objects:
   233 ;;		On entry : B00/0
   234 ;;		On exit  : 0/0
   235 ;;		Unchanged: 0/0
   236 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   237 ;;      Params:         0       0       0       0
   238 ;;      Locals:         0       0       0       0
   239 ;;      Temps:          0       0       0       0
   240 ;;      Totals:         0       0       0       0
   241 ;;Total ram usage:        0 bytes
   242 ;; Hardware stack levels required when called:    3
   243 ;; This function calls:
   244 ;;		_InitUART
   245 ;;		_resetearSalidas
   246 ;; This function is called by:
   247 ;;		Startup code after reset
   248 ;; This function uses a non-reentrant model
   249 ;;
   250                           
   251                           
   252                           ;psect for function _main
   253  0132                     _main:	
   254                           
   255                           ;main.c: 33: CMCON = 0x07;
   256                           
   257                           ;incstack = 0
   258                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   259  0132  3007               	movlw	7
   260  0133  1283               	bcf	3,5	;RP0=0, select bank0
   261  0134  1303               	bcf	3,6	;RP1=0, select bank0
   262  0135  009F               	movwf	31	;volatile
   263                           
   264                           ;main.c: 34: TRISA = 0b00000000;
   265  0136  1683               	bsf	3,5	;RP0=1, select bank1
   266  0137  1303               	bcf	3,6	;RP1=0, select bank1
   267  0138  0185               	clrf	5	;volatile
   268                           
   269                           ;main.c: 35: RA3 = 0;
   270  0139  1283               	bcf	3,5	;RP0=0, select bank0
   271  013A  1303               	bcf	3,6	;RP1=0, select bank0
   272  013B  1185               	bcf	5,3	;volatile
   273                           
   274                           ;main.c: 37: InitUART();
   275  013C  211A               	fcall	_InitUART
   276                           
   277                           ;main.c: 39: GIE = 1;
   278  013D  178B               	bsf	11,7	;volatile
   279                           
   280                           ;main.c: 40: PEIE = 1;
   281  013E  170B               	bsf	11,6	;volatile
   282                           
   283                           ;main.c: 42: resetearSalidas(64);
   284  013F  3040               	movlw	64
   285  0140  1283               	bcf	3,5	;RP0=0, select bank0
   286  0141  1303               	bcf	3,6	;RP1=0, select bank0
   287  0142  00AE               	movwf	resetearSalidas@cantidadSalidas
   288  0143  3000               	movlw	0
   289  0144  00AF               	movwf	resetearSalidas@cantidadSalidas+1
   290  0145  20F7               	fcall	_resetearSalidas
   291  0146                     l65:	
   292                           ;main.c: 44: while(1)
   293                           
   294                           
   295                           ;main.c: 45: {
   296  0146  2946               	goto	l65
   297  0147                     __end_of_main:	
   298                           
   299                           	psect	text1
   300  00F7                     __ptext1:	
   301 ;; *************** function _resetearSalidas *****************
   302 ;; Defined at:
   303 ;;		line 86 in file "main.c"
   304 ;; Parameters:    Size  Location     Type
   305 ;;  cantidadSali    2   14[BANK0 ] int 
   306 ;; Auto vars:     Size  Location     Type
   307 ;;  i               2   17[BANK0 ] int 
   308 ;; Return value:  Size  Location     Type
   309 ;;                  1    wreg      void 
   310 ;; Registers used:
   311 ;;		wreg, status,2, status,0
   312 ;; Tracked objects:
   313 ;;		On entry : 0/0
   314 ;;		On exit  : 0/0
   315 ;;		Unchanged: 0/0
   316 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   317 ;;      Params:         0       2       0       0
   318 ;;      Locals:         0       2       0       0
   319 ;;      Temps:          0       1       0       0
   320 ;;      Totals:         0       5       0       0
   321 ;;Total ram usage:        5 bytes
   322 ;; Hardware stack levels used:    1
   323 ;; Hardware stack levels required when called:    2
   324 ;; This function calls:
   325 ;;		Nothing
   326 ;; This function is called by:
   327 ;;		_main
   328 ;; This function uses a non-reentrant model
   329 ;;
   330                           
   331                           
   332                           ;psect for function _resetearSalidas
   333  00F7                     _resetearSalidas:	
   334                           
   335                           ;main.c: 88: for(int i = 0; i < cantidadSalidas; i = i + 1)
   336                           
   337                           ;incstack = 0
   338                           ; Regs used in _resetearSalidas: [wreg+status,2+status,0]
   339  00F7  1283               	bcf	3,5	;RP0=0, select bank0
   340  00F8  1303               	bcf	3,6	;RP1=0, select bank0
   341  00F9  01B1               	clrf	resetearSalidas@i
   342  00FA  01B2               	clrf	resetearSalidas@i+1
   343  00FB                     l661:	
   344  00FB  0832               	movf	resetearSalidas@i+1,w
   345  00FC  3A80               	xorlw	128
   346  00FD  00B0               	movwf	??_resetearSalidas
   347  00FE  082F               	movf	resetearSalidas@cantidadSalidas+1,w
   348  00FF  3A80               	xorlw	128
   349  0100  0230               	subwf	??_resetearSalidas,w
   350  0101  1D03               	skipz
   351  0102  2905               	goto	u155
   352  0103  082E               	movf	resetearSalidas@cantidadSalidas,w
   353  0104  0231               	subwf	resetearSalidas@i,w
   354  0105                     u155:	
   355  0105  1803               	btfsc	3,0
   356  0106  2915               	goto	l89
   357                           
   358                           ;main.c: 89: {
   359                           ;main.c: 90: RA0 = 0;
   360  0107  1283               	bcf	3,5	;RP0=0, select bank0
   361  0108  1303               	bcf	3,6	;RP1=0, select bank0
   362  0109  1005               	bcf	5,0	;volatile
   363                           
   364                           ;main.c: 91: RA1 = 1;
   365  010A  1485               	bsf	5,1	;volatile
   366                           
   367                           ;main.c: 92: RA1 = 0;
   368  010B  1085               	bcf	5,1	;volatile
   369  010C  0831               	movf	resetearSalidas@i,w
   370  010D  3E01               	addlw	1
   371  010E  00B1               	movwf	resetearSalidas@i
   372  010F  0832               	movf	resetearSalidas@i+1,w
   373  0110  1803               	skipnc
   374  0111  3E01               	addlw	1
   375  0112  3E00               	addlw	0
   376  0113  00B2               	movwf	resetearSalidas@i+1
   377  0114  28FB               	goto	l661
   378  0115                     l89:	
   379                           
   380                           ;main.c: 93: }
   381                           ;main.c: 94: RA2 = 1;
   382  0115  1283               	bcf	3,5	;RP0=0, select bank0
   383  0116  1303               	bcf	3,6	;RP1=0, select bank0
   384  0117  1505               	bsf	5,2	;volatile
   385                           
   386                           ;main.c: 95: RA2 = 0;
   387  0118  1105               	bcf	5,2	;volatile
   388  0119  0008               	return
   389  011A                     __end_of_resetearSalidas:	
   390                           
   391                           	psect	text2
   392  011A                     __ptext2:	
   393 ;; *************** function _InitUART *****************
   394 ;; Defined at:
   395 ;;		line 98 in file "main.c"
   396 ;; Parameters:    Size  Location     Type
   397 ;;		None
   398 ;; Auto vars:     Size  Location     Type
   399 ;;		None
   400 ;; Return value:  Size  Location     Type
   401 ;;                  1    wreg      void 
   402 ;; Registers used:
   403 ;;		wreg
   404 ;; Tracked objects:
   405 ;;		On entry : 0/0
   406 ;;		On exit  : 0/0
   407 ;;		Unchanged: 0/0
   408 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   409 ;;      Params:         0       0       0       0
   410 ;;      Locals:         0       0       0       0
   411 ;;      Temps:          0       0       0       0
   412 ;;      Totals:         0       0       0       0
   413 ;;Total ram usage:        0 bytes
   414 ;; Hardware stack levels used:    1
   415 ;; Hardware stack levels required when called:    2
   416 ;; This function calls:
   417 ;;		Nothing
   418 ;; This function is called by:
   419 ;;		_main
   420 ;; This function uses a non-reentrant model
   421 ;;
   422                           
   423                           
   424                           ;psect for function _InitUART
   425  011A                     _InitUART:	
   426                           
   427                           ;main.c: 100: SPBRG = ((4000000/16)/19200) - 1;
   428                           
   429                           ;incstack = 0
   430                           ; Regs used in _InitUART: [wreg]
   431  011A  300C               	movlw	12
   432  011B  1683               	bsf	3,5	;RP0=1, select bank1
   433  011C  1303               	bcf	3,6	;RP1=0, select bank1
   434  011D  0099               	movwf	25	;volatile
   435                           
   436                           ;main.c: 101: BRGH = 1;
   437  011E  1518               	bsf	24,2	;volatile
   438                           
   439                           ;main.c: 102: SYNC = 0;
   440  011F  1218               	bcf	24,4	;volatile
   441                           
   442                           ;main.c: 103: SPEN = 1;
   443  0120  1283               	bcf	3,5	;RP0=0, select bank0
   444  0121  1303               	bcf	3,6	;RP1=0, select bank0
   445  0122  1798               	bsf	24,7	;volatile
   446                           
   447                           ;main.c: 104: CREN = 1;
   448  0123  1618               	bsf	24,4	;volatile
   449                           
   450                           ;main.c: 105: SREN = 0;
   451  0124  1298               	bcf	24,5	;volatile
   452                           
   453                           ;main.c: 106: TXIE = 0;
   454  0125  1683               	bsf	3,5	;RP0=1, select bank1
   455  0126  1303               	bcf	3,6	;RP1=0, select bank1
   456  0127  120C               	bcf	12,4	;volatile
   457                           
   458                           ;main.c: 107: RCIE = 1;
   459  0128  168C               	bsf	12,5	;volatile
   460                           
   461                           ;main.c: 108: TX9 = 0;
   462  0129  1318               	bcf	24,6	;volatile
   463                           
   464                           ;main.c: 109: RX9 = 0;
   465  012A  1283               	bcf	3,5	;RP0=0, select bank0
   466  012B  1303               	bcf	3,6	;RP1=0, select bank0
   467  012C  1318               	bcf	24,6	;volatile
   468                           
   469                           ;main.c: 110: TXEN = 0;
   470  012D  1683               	bsf	3,5	;RP0=1, select bank1
   471  012E  1303               	bcf	3,6	;RP1=0, select bank1
   472  012F  1298               	bcf	24,5	;volatile
   473                           
   474                           ;main.c: 111: TXEN = 1;
   475  0130  1698               	bsf	24,5	;volatile
   476  0131  0008               	return
   477  0132                     __end_of_InitUART:	
   478                           
   479                           	psect	text3
   480  0021                     __ptext3:	
   481 ;; *************** function _Interrupcion *****************
   482 ;; Defined at:
   483 ;;		line 49 in file "main.c"
   484 ;; Parameters:    Size  Location     Type
   485 ;;		None
   486 ;; Auto vars:     Size  Location     Type
   487 ;;		None
   488 ;; Return value:  Size  Location     Type
   489 ;;                  1    wreg      void 
   490 ;; Registers used:
   491 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   492 ;; Tracked objects:
   493 ;;		On entry : 0/0
   494 ;;		On exit  : 0/0
   495 ;;		Unchanged: 0/0
   496 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   497 ;;      Params:         0       0       0       0
   498 ;;      Locals:         0       0       0       0
   499 ;;      Temps:          0      14       0       0
   500 ;;      Totals:         0      14       0       0
   501 ;;Total ram usage:       14 bytes
   502 ;; Hardware stack levels used:    1
   503 ;; Hardware stack levels required when called:    1
   504 ;; This function calls:
   505 ;;		_ReceiveByteSerially
   506 ;;		_escribirSalida
   507 ;; This function is called by:
   508 ;;		Interrupt level 1
   509 ;; This function uses a non-reentrant model
   510 ;;
   511                           
   512                           
   513                           ;psect for function _Interrupcion
   514  0021                     _Interrupcion:	
   515                           
   516                           ;main.c: 51: if(RCIF)
   517  0021  1E8C               	btfss	12,5	;volatile
   518  0022  287F               	goto	i1l77
   519                           
   520                           ;main.c: 52: {
   521                           ;main.c: 53: lectura = ReceiveByteSerially();
   522  0023  2147               	fcall	_ReceiveByteSerially
   523  0024  1283               	bcf	3,5	;RP0=0, select bank0
   524  0025  1303               	bcf	3,6	;RP1=0, select bank0
   525  0026  00A0               	movwf	??_Interrupcion
   526  0027  01A1               	clrf	??_Interrupcion+1
   527  0028  0820               	movf	??_Interrupcion,w
   528  0029  00F7               	movwf	_lectura
   529  002A  0821               	movf	??_Interrupcion+1,w
   530  002B  00F8               	movwf	_lectura+1
   531                           
   532                           ;main.c: 54: RA3 = !RA3;
   533  002C  3008               	movlw	8
   534  002D  0685               	xorwf	5,f
   535                           
   536                           ;main.c: 55: if(dataLength > 0)
   537  002E  0879               	movf	_dataLength,w
   538  002F  047A               	iorwf	_dataLength+1,w
   539  0030  1903               	btfsc	3,2
   540  0031  287B               	goto	i1l731
   541                           
   542                           ;main.c: 56: {
   543                           ;main.c: 57: indice = lectura/16;
   544  0032  0E77               	swapf	_lectura,w
   545  0033  390F               	andlw	15
   546  0034  00FB               	movwf	_indice
   547  0035  0E78               	swapf	_lectura+1,w
   548  0036  39F0               	andlw	240
   549  0037  04FB               	iorwf	_indice,f
   550  0038  0E78               	swapf	_lectura+1,w
   551  0039  390F               	andlw	15
   552  003A  00FC               	movwf	_indice+1
   553                           
   554                           ;main.c: 58: dataLength--;
   555  003B  3001               	movlw	1
   556  003C  02F9               	subwf	_dataLength,f
   557  003D  3000               	movlw	0
   558  003E  1C03               	skipc
   559  003F  03FA               	decf	_dataLength+1,f
   560  0040  02FA               	subwf	_dataLength+1,f
   561                           
   562                           ;main.c: 59: palabras[ indice ] = palabras[ indice ] | (1 << (lectura - (indice * 16)));
   563  0041  087B               	movf	_indice,w
   564  0042  00A0               	movwf	??_Interrupcion
   565  0043  0720               	addwf	??_Interrupcion,w
   566  0044  3E33               	addlw	(low (_palabras| 0))& (0+255)
   567  0045  0084               	movwf	4
   568  0046  1383               	bcf	3,7	;select IRP bank0
   569  0047  0800               	movf	0,w
   570  0048  00A1               	movwf	??_Interrupcion+1
   571  0049  0A84               	incf	4,f
   572  004A  0800               	movf	0,w
   573  004B  00A2               	movwf	??_Interrupcion+2
   574  004C  087B               	movf	_indice,w
   575  004D  00A3               	movwf	??_Interrupcion+3
   576  004E  3003               	movlw	3
   577  004F                     u26_25:	
   578  004F  1003               	clrc
   579  0050  0DA3               	rlf	??_Interrupcion+3,f
   580  0051  3EFF               	addlw	-1
   581  0052  1D03               	skipz
   582  0053  284F               	goto	u26_25
   583  0054  1003               	clrc
   584  0055  0D23               	rlf	??_Interrupcion+3,w
   585  0056  3AFF               	xorlw	255
   586  0057  3E01               	addlw	1
   587  0058  0777               	addwf	_lectura,w
   588  0059  00A4               	movwf	??_Interrupcion+4
   589  005A  0AA4               	incf	??_Interrupcion+4,f
   590  005B  3001               	movlw	1
   591  005C  00A5               	movwf	??_Interrupcion+5
   592  005D  3000               	movlw	0
   593  005E  00A6               	movwf	??_Interrupcion+6
   594  005F  2863               	goto	u27_24
   595  0060                     u27_25:	
   596  0060  1003               	clrc
   597  0061  0DA5               	rlf	??_Interrupcion+5,f
   598  0062  0DA6               	rlf	??_Interrupcion+6,f
   599  0063                     u27_24:	
   600  0063  0BA4               	decfsz	??_Interrupcion+4,f
   601  0064  2860               	goto	u27_25
   602  0065  0821               	movf	??_Interrupcion+1,w
   603  0066  0425               	iorwf	??_Interrupcion+5,w
   604  0067  00A7               	movwf	??_Interrupcion+7
   605  0068  0822               	movf	??_Interrupcion+2,w
   606  0069  0426               	iorwf	??_Interrupcion+6,w
   607  006A  00A8               	movwf	??_Interrupcion+8
   608  006B  087B               	movf	_indice,w
   609  006C  00A9               	movwf	??_Interrupcion+9
   610  006D  0729               	addwf	??_Interrupcion+9,w
   611  006E  3E33               	addlw	(low (_palabras| 0))& (0+255)
   612  006F  0084               	movwf	4
   613  0070  0827               	movf	??_Interrupcion+7,w
   614  0071  0080               	movwf	0
   615  0072  0A84               	incf	4,f
   616  0073  0828               	movf	??_Interrupcion+8,w
   617  0074  0080               	movwf	0
   618                           
   619                           ;main.c: 60: if(dataLength <= 0) escribirSalida();
   620  0075  0879               	movf	_dataLength,w
   621  0076  047A               	iorwf	_dataLength+1,w
   622  0077  1D03               	btfss	3,2
   623  0078  287F               	goto	i1l77
   624  0079  208C               	fcall	_escribirSalida
   625                           
   626                           ;main.c: 61: }
   627  007A  287F               	goto	i1l77
   628  007B                     i1l731:	
   629                           
   630                           ;main.c: 62: else
   631                           ;main.c: 63: {
   632                           ;main.c: 64: dataLength = lectura;
   633  007B  0878               	movf	_lectura+1,w
   634  007C  00FA               	movwf	_dataLength+1
   635  007D  0877               	movf	_lectura,w
   636  007E  00F9               	movwf	_dataLength
   637  007F                     i1l77:	
   638  007F  1283               	bcf	3,5	;RP0=0, select bank0
   639  0080  1303               	bcf	3,6	;RP1=0, select bank0
   640  0081  082D               	movf	??_Interrupcion+13,w
   641  0082  00FF               	movwf	127
   642  0083  082C               	movf	??_Interrupcion+12,w
   643  0084  008A               	movwf	10
   644  0085  082B               	movf	??_Interrupcion+11,w
   645  0086  0084               	movwf	4
   646  0087  0E2A               	swapf	(??_Interrupcion+10)^0,w
   647  0088  0083               	movwf	3
   648  0089  0EFE               	swapf	126,f
   649  008A  0E7E               	swapf	126,w
   650  008B  0009               	retfie
   651  008C                     __end_of_Interrupcion:	
   652                           
   653                           	psect	intentry
   654  0004                     __pintentry:	
   655                           ;incstack = 0
   656                           ; Regs used in _Interrupcion: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   657                           
   658  0004                     interrupt_function:	
   659  007E                     saved_w	set	btemp
   660  0004  00FE               	movwf	btemp
   661  0005  0E03               	swapf	3,w
   662  0006  1283               	bcf	3,5	;RP0=0, select bank0
   663  0007  1303               	bcf	3,6	;RP1=0, select bank0
   664  0008  00AA               	movwf	??_Interrupcion+10
   665  0009  0804               	movf	4,w
   666  000A  00AB               	movwf	??_Interrupcion+11
   667  000B  080A               	movf	10,w
   668  000C  00AC               	movwf	??_Interrupcion+12
   669  000D  087F               	movf	btemp+1,w
   670  000E  00AD               	movwf	??_Interrupcion+13
   671  000F  2821               	ljmp	_Interrupcion
   672                           
   673                           	psect	text4
   674  008C                     __ptext4:	
   675 ;; *************** function _escribirSalida *****************
   676 ;; Defined at:
   677 ;;		line 69 in file "main.c"
   678 ;; Parameters:    Size  Location     Type
   679 ;;		None
   680 ;; Auto vars:     Size  Location     Type
   681 ;;  i               2    3[COMMON] int 
   682 ;;  k               2    5[COMMON] int 
   683 ;; Return value:  Size  Location     Type
   684 ;;                  1    wreg      void 
   685 ;; Registers used:
   686 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1
   687 ;; Tracked objects:
   688 ;;		On entry : 0/0
   689 ;;		On exit  : 0/0
   690 ;;		Unchanged: 0/0
   691 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   692 ;;      Params:         0       0       0       0
   693 ;;      Locals:         4       0       0       0
   694 ;;      Temps:          3       0       0       0
   695 ;;      Totals:         7       0       0       0
   696 ;;Total ram usage:        7 bytes
   697 ;; Hardware stack levels used:    1
   698 ;; This function calls:
   699 ;;		Nothing
   700 ;; This function is called by:
   701 ;;		_Interrupcion
   702 ;; This function uses a non-reentrant model
   703 ;;
   704                           
   705                           
   706                           ;psect for function _escribirSalida
   707  008C                     _escribirSalida:	
   708                           
   709                           ;main.c: 71: for(int k = 0; k < 4; k++)
   710                           
   711                           ;incstack = 0
   712                           ; Regs used in _escribirSalida: [wreg-fsr0h+status,2+status,0+btemp+1]
   713  008C  01F5               	clrf	escribirSalida@k
   714  008D  01F6               	clrf	escribirSalida@k+1
   715  008E  0876               	movf	escribirSalida@k+1,w
   716  008F  3A80               	xorlw	128
   717  0090  00FF               	movwf	127
   718  0091  3080               	movlw	128
   719  0092  027F               	subwf	127,w
   720  0093  1D03               	skipz
   721  0094  2897               	goto	u17_25
   722  0095  3004               	movlw	4
   723  0096  0275               	subwf	escribirSalida@k,w
   724  0097                     u17_25:	
   725  0097  1803               	btfsc	3,0
   726  0098  28F2               	goto	i1l81
   727  0099                     i1l677:	
   728                           
   729                           ;main.c: 72: {
   730                           ;main.c: 73: for(int i = 0; i < 16; i++)
   731  0099  01F3               	clrf	escribirSalida@i
   732  009A  01F4               	clrf	escribirSalida@i+1
   733  009B  0874               	movf	escribirSalida@i+1,w
   734  009C  3A80               	xorlw	128
   735  009D  00FF               	movwf	127
   736  009E  3080               	movlw	128
   737  009F  027F               	subwf	127,w
   738  00A0  1D03               	skipz
   739  00A1  28A4               	goto	u18_25
   740  00A2  3010               	movlw	16
   741  00A3  0273               	subwf	escribirSalida@i,w
   742  00A4                     u18_25:	
   743  00A4  1803               	btfsc	3,0
   744  00A5  28D8               	goto	i1l693
   745  00A6                     i1l683:	
   746                           
   747                           ;main.c: 74: {
   748                           ;main.c: 75: RA0 = ((palabras[k] >> (16 - i)) & 1);
   749  00A6  0875               	movf	escribirSalida@k,w
   750  00A7  00F0               	movwf	??_escribirSalida
   751  00A8  0770               	addwf	??_escribirSalida,w
   752  00A9  3E33               	addlw	(low (_palabras| 0))& (0+255)
   753  00AA  0084               	movwf	4
   754  00AB  1383               	bcf	3,7	;select IRP bank0
   755  00AC  0800               	movf	0,w
   756  00AD  00F1               	movwf	??_escribirSalida+1
   757  00AE  0A84               	incf	4,f
   758  00AF  0800               	movf	0,w
   759  00B0  00F2               	movwf	??_escribirSalida+2
   760  00B1  0373               	decf	escribirSalida@i,w
   761  00B2  3AFF               	xorlw	255
   762  00B3  3E10               	addlw	16
   763  00B4  3E01               	addlw	1
   764  00B5  28B9               	goto	u19_24
   765  00B6                     u19_25:	
   766  00B6  1003               	clrc
   767  00B7  0CF2               	rrf	??_escribirSalida+2,f
   768  00B8  0CF1               	rrf	??_escribirSalida+1,f
   769  00B9                     u19_24:	
   770  00B9  3EFF               	addlw	-1
   771  00BA  1D03               	skipz
   772  00BB  28B6               	goto	u19_25
   773  00BC  1C71               	btfss	??_escribirSalida+1,0
   774  00BD  28C2               	goto	u20_20
   775  00BE  1283               	bcf	3,5	;RP0=0, select bank0
   776  00BF  1303               	bcf	3,6	;RP1=0, select bank0
   777  00C0  1405               	bsf	5,0	;volatile
   778  00C1  28C5               	goto	i1l685
   779  00C2                     u20_20:	
   780  00C2  1283               	bcf	3,5	;RP0=0, select bank0
   781  00C3  1303               	bcf	3,6	;RP1=0, select bank0
   782  00C4  1005               	bcf	5,0	;volatile
   783  00C5                     i1l685:	
   784                           
   785                           ;main.c: 76: RA1 = 1;
   786  00C5  1485               	bsf	5,1	;volatile
   787                           
   788                           ;main.c: 77: RA1 = 0;
   789  00C6  1085               	bcf	5,1	;volatile
   790  00C7  3001               	movlw	1
   791  00C8  07F3               	addwf	escribirSalida@i,f
   792  00C9  1803               	skipnc
   793  00CA  0AF4               	incf	escribirSalida@i+1,f
   794  00CB  3000               	movlw	0
   795  00CC  07F4               	addwf	escribirSalida@i+1,f
   796  00CD  0874               	movf	escribirSalida@i+1,w
   797  00CE  3A80               	xorlw	128
   798  00CF  00FF               	movwf	127
   799  00D0  3080               	movlw	128
   800  00D1  027F               	subwf	127,w
   801  00D2  1D03               	skipz
   802  00D3  28D6               	goto	u22_25
   803  00D4  3010               	movlw	16
   804  00D5  0273               	subwf	escribirSalida@i,w
   805  00D6                     u22_25:	
   806  00D6  1C03               	skipc
   807  00D7  28A6               	goto	i1l683
   808  00D8                     i1l693:	
   809                           
   810                           ;main.c: 78: }
   811                           ;main.c: 79: palabras[k] = 0;
   812  00D8  0875               	movf	escribirSalida@k,w
   813  00D9  00F0               	movwf	??_escribirSalida
   814  00DA  0770               	addwf	??_escribirSalida,w
   815  00DB  3E33               	addlw	(low (_palabras| 0))& (0+255)
   816  00DC  0084               	movwf	4
   817  00DD  1383               	bcf	3,7	;select IRP bank0
   818  00DE  0180               	clrf	0
   819  00DF  0A84               	incf	4,f
   820  00E0  0180               	clrf	0
   821  00E1  3001               	movlw	1
   822  00E2  07F5               	addwf	escribirSalida@k,f
   823  00E3  1803               	skipnc
   824  00E4  0AF6               	incf	escribirSalida@k+1,f
   825  00E5  3000               	movlw	0
   826  00E6  07F6               	addwf	escribirSalida@k+1,f
   827  00E7  0876               	movf	escribirSalida@k+1,w
   828  00E8  3A80               	xorlw	128
   829  00E9  00FF               	movwf	127
   830  00EA  3080               	movlw	128
   831  00EB  027F               	subwf	127,w
   832  00EC  1D03               	skipz
   833  00ED  28F0               	goto	u23_25
   834  00EE  3004               	movlw	4
   835  00EF  0275               	subwf	escribirSalida@k,w
   836  00F0                     u23_25:	
   837  00F0  1C03               	skipc
   838  00F1  2899               	goto	i1l677
   839  00F2                     i1l81:	
   840                           
   841                           ;main.c: 80: }
   842                           ;main.c: 82: RA2 = 1;
   843  00F2  1283               	bcf	3,5	;RP0=0, select bank0
   844  00F3  1303               	bcf	3,6	;RP1=0, select bank0
   845  00F4  1505               	bsf	5,2	;volatile
   846                           
   847                           ;main.c: 83: RA2 = 0;
   848  00F5  1105               	bcf	5,2	;volatile
   849  00F6  0008               	return
   850  00F7                     __end_of_escribirSalida:	
   851                           
   852                           	psect	text5
   853  0147                     __ptext5:	
   854 ;; *************** function _ReceiveByteSerially *****************
   855 ;; Defined at:
   856 ;;		line 114 in file "main.c"
   857 ;; Parameters:    Size  Location     Type
   858 ;;		None
   859 ;; Auto vars:     Size  Location     Type
   860 ;;		None
   861 ;; Return value:  Size  Location     Type
   862 ;;                  1    wreg      unsigned char 
   863 ;; Registers used:
   864 ;;		wreg
   865 ;; Tracked objects:
   866 ;;		On entry : 0/0
   867 ;;		On exit  : 0/0
   868 ;;		Unchanged: 0/0
   869 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   870 ;;      Params:         0       0       0       0
   871 ;;      Locals:         0       0       0       0
   872 ;;      Temps:          0       0       0       0
   873 ;;      Totals:         0       0       0       0
   874 ;;Total ram usage:        0 bytes
   875 ;; Hardware stack levels used:    1
   876 ;; This function calls:
   877 ;;		Nothing
   878 ;; This function is called by:
   879 ;;		_Interrupcion
   880 ;; This function uses a non-reentrant model
   881 ;;
   882                           
   883                           
   884                           ;psect for function _ReceiveByteSerially
   885  0147                     _ReceiveByteSerially:	
   886                           
   887                           ;main.c: 116: if(OERR)
   888                           
   889                           ;incstack = 0
   890                           ; Regs used in _ReceiveByteSerially: [wreg]
   891  0147  1283               	bcf	3,5	;RP0=0, select bank0
   892  0148  1303               	bcf	3,6	;RP1=0, select bank0
   893  0149  1C98               	btfss	24,1	;volatile
   894  014A  294D               	goto	i1l667
   895                           
   896                           ;main.c: 117: {
   897                           ;main.c: 118: CREN = 0;
   898  014B  1218               	bcf	24,4	;volatile
   899                           
   900                           ;main.c: 119: CREN = 1;
   901  014C  1618               	bsf	24,4	;volatile
   902  014D                     i1l667:	
   903                           
   904                           ;main.c: 120: }
   905                           ;main.c: 121: return RCREG;
   906  014D  081A               	movf	26,w	;volatile
   907  014E  0008               	return
   908  014F                     __end_of_ReceiveByteSerially:	
   909  007E                     btemp	set	126	;btemp
   910  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         14
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      7      13
    BANK0            80     19      27
    BANK1            80      0       0
    BANK2            48      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _Interrupcion in COMMON

    _Interrupcion->_escribirSalida

Critical Paths under _main in BANK0

    _main->_resetearSalidas

Critical Paths under _Interrupcion in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _Interrupcion in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _Interrupcion in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0     121
                           _InitUART
                    _resetearSalidas
 ---------------------------------------------------------------------------------
 (1) _resetearSalidas                                      5     3      2     121
                                             14 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 (1) _InitUART                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _Interrupcion                                        14    14      0     158
                                              0 BANK0     14    14      0
                _ReceiveByteSerially
                     _escribirSalida
 ---------------------------------------------------------------------------------
 (3) _escribirSalida                                       7     7      0     158
                                              0 COMMON     7     7      0
 ---------------------------------------------------------------------------------
 (3) _ReceiveByteSerially                                  0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _InitUART
   _resetearSalidas

 _Interrupcion (ROOT)
   _ReceiveByteSerially
   _escribirSalida

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA              80      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      7       D       1       92.9%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
BANK0               50     13      1B       3       33.8%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      28       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK2            30      0       0       8        0.0%
BANK2               30      0       0       9        0.0%
DATA                 0      0      28      10        0.0%


Microchip Technology PIC Macro Assembler V1.42 build -159332390 
Symbol Table                                                                                   Tue Nov 14 21:30:14 2017

                   __CFG_CP$OFF 0000                              l65 0146                              l89 0115  
       __size_of_escribirSalida 006B                             l661 00FB                             _GIE 005F  
                           _RA0 0028                             _RA1 0029                             _RA2 002A  
                           _RA3 002B                             u155 0105                    __CFG_CPD$OFF 0000  
                           _RX9 00C6                             _TX9 04C6                             fsr0 0004  
                           indf 0000                    __CFG_LVP$OFF 0000                            _BRGH 04C2  
                          _CREN 00C4                            _PEIE 005E                            _RCIE 0465  
                          _RCIF 0065                            i1l81 00F2                            i1l77 007F  
                          _OERR 00C1                            _SPEN 00C7                            _SREN 00C5  
                          _TXIE 0464                            _TXEN 04C5                            _SYNC 04C4  
                          _main 0132                            btemp 007E                   __CFG_BOREN$ON 0000  
                          start 0010                           ?_main 0070                   __CFG_WDTE$OFF 0000  
                         _CMCON 001F                           i1l731 007B                           i1l667 014D  
                         i1l683 00A6                           i1l685 00C5                           i1l693 00D8  
                         i1l677 0099                           _RCREG 001A                           u20_20 00C2  
                         u22_25 00D6                           u23_25 00F0                           u17_25 0097  
                         _SPBRG 0099                           u18_25 00A4                           u26_25 004F  
                         u19_24 00B9                           u27_24 0063                           u19_25 00B6  
                         u27_25 0060                           _TRISA 0085                           pclath 000A  
                         status 0003                           wtemp0 007E                  __CFG_MCLRE$OFF 0000  
               __initialization 0011                ?_resetearSalidas 002E                    __end_of_main 0147  
              __end_of_InitUART 0132                          ??_main 0033                   ?_Interrupcion 0070  
                __CFG_PWRTE$OFF 0000                          _indice 007B                  _escribirSalida 008C  
                        saved_w 007E                  ??_Interrupcion 0020         __end_of__initialization 001F  
   __end_of_ReceiveByteSerially 014F                  __pcstackCOMMON 0070          __end_of_escribirSalida 00F7  
                    _dataLength 0079                      __pbssBANK0 0033                       ?_InitUART 0070  
                    __pmaintext 0132                      __pintentry 0004                 ?_escribirSalida 0070  
                    ??_InitUART 002E                         __ptext1 00F7                         __ptext2 011A  
                       __ptext3 0021                         __ptext4 008C                         __ptext5 0147  
          __end_of_Interrupcion 008C                         _lectura 0077            end_of_initialization 001F  
      __size_of_resetearSalidas 0023             start_initialization 0011               __size_of_InitUART 0018  
              ??_escribirSalida 0070           __size_of_Interrupcion 006B    __size_of_ReceiveByteSerially 0008  
                   __pbssCOMMON 0077                       ___latbits 0000                   __pcstackBANK0 0020  
             ??_resetearSalidas 0030                    _Interrupcion 0021                resetearSalidas@i 0031  
             interrupt_function 0004                        _InitUART 011A             _ReceiveByteSerially 0147  
                      _palabras 0033                   __size_of_main 0015            ?_ReceiveByteSerially 0070  
               _resetearSalidas 00F7                        intlevel1 0000           ??_ReceiveByteSerially 0070  
resetearSalidas@cantidadSalidas 002E                 escribirSalida@i 0073                 escribirSalida@k 0075  
            __CFG_FOSC$INTOSCIO 0000         __end_of_resetearSalidas 011A  
