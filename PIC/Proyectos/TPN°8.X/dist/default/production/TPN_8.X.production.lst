

Microchip Technology PIC LITE Macro Assembler V1.42 build -159332390 
                                                                                               Fri Aug 18 12:30:49 2017

Microchip Technology Omniscient Code Generator v1.42 (Free mode) build 201704130522
     1                           	processor	16F628A
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	maintext,global,class=CODE,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2
     9                           	psect	intentry,global,class=CODE,delta=2
    10                           	psect	text2,local,class=CODE,merge=1,delta=2
    11                           	dabs	1,0x7E,2
    12  0000                     
    13                           ; Version 1.42
    14                           ; Generated 13/04/2017 GMT
    15                           ; 
    16                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    17                           ; All rights reserved.
    18                           ; 
    19                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    20                           ; 
    21                           ; Redistribution and use in source and binary forms, with or without modification, are
    22                           ; permitted provided that the following conditions are met:
    23                           ; 
    24                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    25                           ;        conditions and the following disclaimer.
    26                           ; 
    27                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    28                           ;        of conditions and the following disclaimer in the documentation and/or other
    29                           ;        materials provided with the distribution.
    30                           ; 
    31                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    32                           ;        software without specific prior written permission.
    33                           ; 
    34                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    35                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    36                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    37                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    38                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    39                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    40                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    41                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    42                           ; 
    43                           ; 
    44                           ; Code-generator required, PIC16F628A Definitions
    45                           ; 
    46                           ; SFR Addresses
    47  0000                     	;# 
    48  0001                     	;# 
    49  0002                     	;# 
    50  0003                     	;# 
    51  0004                     	;# 
    52  0005                     	;# 
    53  0006                     	;# 
    54  000A                     	;# 
    55  000B                     	;# 
    56  000C                     	;# 
    57  000E                     	;# 
    58  000E                     	;# 
    59  000F                     	;# 
    60  0010                     	;# 
    61  0011                     	;# 
    62  0012                     	;# 
    63  0015                     	;# 
    64  0015                     	;# 
    65  0016                     	;# 
    66  0017                     	;# 
    67  0018                     	;# 
    68  0019                     	;# 
    69  001A                     	;# 
    70  001F                     	;# 
    71  0081                     	;# 
    72  0085                     	;# 
    73  0086                     	;# 
    74  008C                     	;# 
    75  008E                     	;# 
    76  0092                     	;# 
    77  0098                     	;# 
    78  0099                     	;# 
    79  009A                     	;# 
    80  009B                     	;# 
    81  009C                     	;# 
    82  009D                     	;# 
    83  009F                     	;# 
    84  0001                     _TMR0	set	1
    85  000B                     _INTCONbits	set	11
    86  0030                     _RB0	set	48
    87  0081                     _OPTION_REGbits	set	129
    88  0086                     _TRISB	set	134
    89                           
    90                           ; #config settings
    91  0000                     
    92                           	psect	cinit
    93  0011                     start_initialization:	
    94  0011                     __initialization:	
    95                           
    96                           ; Clear objects allocated to COMMON
    97  0011  01F6               	clrf	__pbssCOMMON& (0+127)
    98  0012  01F7               	clrf	(__pbssCOMMON+1)& (0+127)
    99  0013                     end_of_initialization:	
   100                           ;End of C runtime variable initialization code
   101                           
   102  0013                     __end_of__initialization:	
   103  0013  0183               	clrf	3
   104  0014  2815               	ljmp	_main	;jump to C main() function
   105                           
   106                           	psect	bssCOMMON
   107  0076                     __pbssCOMMON:	
   108  0076                     _contador:	
   109  0076                     	ds	2
   110                           
   111                           	psect	cstackCOMMON
   112  0070                     __pcstackCOMMON:	
   113  0070                     ?_led:	
   114  0070                     ??_led:	
   115                           ; 1 bytes @ 0x0
   116                           
   117  0070                     ?_leds:	
   118                           ; 1 bytes @ 0x0
   119                           
   120  0070                     ??_leds:	
   121                           ; 1 bytes @ 0x0
   122                           
   123  0070                     ?_main:	
   124                           ; 1 bytes @ 0x0
   125                           
   126                           
   127                           ; 1 bytes @ 0x0
   128  0070                     	ds	4
   129  0074                     ??_main:	
   130                           
   131                           ; 1 bytes @ 0x4
   132  0074                     	ds	2
   133                           
   134                           	psect	maintext
   135  0015                     __pmaintext:	
   136 ;;
   137 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   138 ;;
   139 ;; *************** function _main *****************
   140 ;; Defined at:
   141 ;;		line 46 in file "main.c"
   142 ;; Parameters:    Size  Location     Type
   143 ;;		None
   144 ;; Auto vars:     Size  Location     Type
   145 ;;		None
   146 ;; Return value:  Size  Location     Type
   147 ;;                  1    wreg      void 
   148 ;; Registers used:
   149 ;;		wreg, status,2
   150 ;; Tracked objects:
   151 ;;		On entry : B00/0
   152 ;;		On exit  : 0/0
   153 ;;		Unchanged: 0/0
   154 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   155 ;;      Params:         0       0       0       0
   156 ;;      Locals:         0       0       0       0
   157 ;;      Temps:          2       0       0       0
   158 ;;      Totals:         2       0       0       0
   159 ;;Total ram usage:        2 bytes
   160 ;; Hardware stack levels required when called:    2
   161 ;; This function calls:
   162 ;;		Nothing
   163 ;; This function is called by:
   164 ;;		Startup code after reset
   165 ;; This function uses a non-reentrant model
   166 ;;
   167                           
   168                           
   169                           ;psect for function _main
   170  0015                     _main:	
   171                           
   172                           ;main.c: 48: TRISB = 0b00000000;
   173                           
   174                           ;incstack = 0
   175                           ; Regs used in _main: [wreg+status,2]
   176  0015  1683               	bsf	3,5	;RP0=1, select bank1
   177  0016  1303               	bcf	3,6	;RP1=0, select bank1
   178  0017  0186               	clrf	6	;volatile
   179                           
   180                           ;main.c: 50: RB0 = 0;
   181  0018  1283               	bcf	3,5	;RP0=0, select bank0
   182  0019  1303               	bcf	3,6	;RP1=0, select bank0
   183  001A  1006               	bcf	6,0	;volatile
   184                           
   185                           ;main.c: 52: TMR0 = 12;
   186  001B  300C               	movlw	12
   187  001C  0081               	movwf	1	;volatile
   188                           
   189                           ;main.c: 54: INTCONbits.GIE=1;
   190  001D  178B               	bsf	11,7	;volatile
   191                           
   192                           ;main.c: 55: INTCONbits.PEIE=1;
   193  001E  170B               	bsf	11,6	;volatile
   194                           
   195                           ;main.c: 56: INTCONbits.T0IE=1;
   196  001F  168B               	bsf	11,5	;volatile
   197                           
   198                           ;main.c: 57: INTCONbits.T0IF=0;
   199  0020  110B               	bcf	11,2	;volatile
   200                           
   201                           ;main.c: 59: OPTION_REGbits.T0CS=0;
   202  0021  1683               	bsf	3,5	;RP0=1, select bank1
   203  0022  1303               	bcf	3,6	;RP1=0, select bank1
   204  0023  1281               	bcf	1,5	;volatile
   205                           
   206                           ;main.c: 60: OPTION_REGbits.T0SE=0;
   207  0024  1201               	bcf	1,4	;volatile
   208                           
   209                           ;main.c: 61: OPTION_REGbits.PSA=0;
   210  0025  1181               	bcf	1,3	;volatile
   211                           
   212                           ;main.c: 63: OPTION_REGbits.PS0=1;
   213  0026  1401               	bsf	1,0	;volatile
   214                           
   215                           ;main.c: 64: OPTION_REGbits.PS1=1;
   216  0027  1481               	bsf	1,1	;volatile
   217                           
   218                           ;main.c: 65: OPTION_REGbits.PS2=1;
   219  0028  1501               	bsf	1,2	;volatile
   220  0029                     l536:	
   221                           ;main.c: 67: while (1)
   222                           
   223                           
   224                           ;main.c: 68: {
   225                           ;main.c: 69: _delay((unsigned long)((100)*(4000000/4000.0)));
   226  0029  3082               	movlw	130
   227  002A  00F5               	movwf	??_main+1
   228  002B  30DD               	movlw	221
   229  002C  00F4               	movwf	??_main
   230  002D                     u47:	
   231  002D  0BF4               	decfsz	??_main,f
   232  002E  282D               	goto	u47
   233  002F  0BF5               	decfsz	??_main+1,f
   234  0030  282D               	goto	u47
   235  0031  2832               	nop2
   236  0032  2829               	goto	l536
   237  0033                     __end_of_main:	
   238                           
   239                           	psect	text1
   240  0033                     __ptext1:	
   241 ;; *************** function _leds *****************
   242 ;; Defined at:
   243 ;;		line 32 in file "main.c"
   244 ;; Parameters:    Size  Location     Type
   245 ;;		None
   246 ;; Auto vars:     Size  Location     Type
   247 ;;		None
   248 ;; Return value:  Size  Location     Type
   249 ;;                  1    wreg      void 
   250 ;; Registers used:
   251 ;;		wreg, status,2, status,0, pclath, cstack
   252 ;; Tracked objects:
   253 ;;		On entry : 0/0
   254 ;;		On exit  : 0/0
   255 ;;		Unchanged: 0/0
   256 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   257 ;;      Params:         0       0       0       0
   258 ;;      Locals:         0       0       0       0
   259 ;;      Temps:          4       0       0       0
   260 ;;      Totals:         4       0       0       0
   261 ;;Total ram usage:        4 bytes
   262 ;; Hardware stack levels used:    1
   263 ;; Hardware stack levels required when called:    1
   264 ;; This function calls:
   265 ;;		_led
   266 ;; This function is called by:
   267 ;;		Interrupt level 1
   268 ;; This function uses a non-reentrant model
   269 ;;
   270                           
   271                           
   272                           ;psect for function _leds
   273  0033                     _leds:	
   274                           
   275                           ;main.c: 34: if(INTCONbits.T0IF == 1)
   276  0033  1D0B               	btfss	11,2	;volatile
   277  0034  2844               	goto	i1l26
   278                           
   279                           ;main.c: 35: {
   280                           ;main.c: 36: INTCONbits.T0IF = 0;
   281  0035  110B               	bcf	11,2	;volatile
   282                           
   283                           ;main.c: 37: contador++;
   284  0036  3001               	movlw	1
   285  0037  07F6               	addwf	_contador,f
   286  0038  1803               	skipnc
   287  0039  0AF7               	incf	_contador+1,f
   288  003A  3000               	movlw	0
   289  003B  07F7               	addwf	_contador+1,f
   290                           
   291                           ;main.c: 38: if(contador == 16)
   292  003C  3010               	movlw	16
   293  003D  0676               	xorwf	_contador,w
   294  003E  0477               	iorwf	_contador+1,w
   295  003F  1D03               	btfss	3,2
   296  0040  2844               	goto	i1l26
   297                           
   298                           ;main.c: 39: {
   299                           ;main.c: 40: led();
   300  0041  2051               	fcall	_led
   301                           
   302                           ;main.c: 41: contador = 0;
   303  0042  01F6               	clrf	_contador
   304  0043  01F7               	clrf	_contador+1
   305  0044                     i1l26:	
   306  0044  0873               	movf	??_leds+3,w
   307  0045  1283               	bcf	3,5	;RP0=0, select bank0
   308  0046  1303               	bcf	3,6	;RP1=0, select bank0
   309  0047  00FF               	movwf	127
   310  0048  0872               	movf	??_leds+2,w
   311  0049  008A               	movwf	10
   312  004A  0871               	movf	??_leds+1,w
   313  004B  0084               	movwf	4
   314  004C  0E70               	swapf	??_leds^(0+-128),w
   315  004D  0083               	movwf	3
   316  004E  0EFE               	swapf	126,f
   317  004F  0E7E               	swapf	126,w
   318  0050  0009               	retfie
   319  0051                     __end_of_leds:	
   320                           
   321                           	psect	intentry
   322  0004                     __pintentry:	
   323                           ;incstack = 0
   324                           ; Regs used in _leds: [wreg+status,2+status,0+pclath+cstack]
   325                           
   326  0004                     interrupt_function:	
   327  007E                     saved_w	set	btemp
   328  0004  00FE               	movwf	btemp
   329  0005  0E03               	swapf	3,w
   330  0006  00F0               	movwf	??_leds
   331  0007  0804               	movf	4,w
   332  0008  00F1               	movwf	??_leds+1
   333  0009  080A               	movf	10,w
   334  000A  00F2               	movwf	??_leds+2
   335  000B  1283               	bcf	3,5	;RP0=0, select bank0
   336  000C  1303               	bcf	3,6	;RP1=0, select bank0
   337  000D  087F               	movf	btemp+1,w
   338  000E  00F3               	movwf	??_leds+3
   339  000F  2833               	ljmp	_leds
   340                           
   341                           	psect	text2
   342  0051                     __ptext2:	
   343 ;; *************** function _led *****************
   344 ;; Defined at:
   345 ;;		line 20 in file "main.c"
   346 ;; Parameters:    Size  Location     Type
   347 ;;		None
   348 ;; Auto vars:     Size  Location     Type
   349 ;;		None
   350 ;; Return value:  Size  Location     Type
   351 ;;                  1    wreg      void 
   352 ;; Registers used:
   353 ;;		None
   354 ;; Tracked objects:
   355 ;;		On entry : 0/0
   356 ;;		On exit  : 0/0
   357 ;;		Unchanged: 0/0
   358 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   359 ;;      Params:         0       0       0       0
   360 ;;      Locals:         0       0       0       0
   361 ;;      Temps:          0       0       0       0
   362 ;;      Totals:         0       0       0       0
   363 ;;Total ram usage:        0 bytes
   364 ;; Hardware stack levels used:    1
   365 ;; This function calls:
   366 ;;		Nothing
   367 ;; This function is called by:
   368 ;;		_leds
   369 ;; This function uses a non-reentrant model
   370 ;;
   371                           
   372                           
   373                           ;psect for function _led
   374  0051                     _led:	
   375                           
   376                           ;main.c: 22: if (RB0 == 1)
   377                           
   378                           ;incstack = 0
   379                           ; Regs used in _led: []
   380  0051  1283               	bcf	3,5	;RP0=0, select bank0
   381  0052  1303               	bcf	3,6	;RP1=0, select bank0
   382  0053  1C06               	btfss	6,0	;volatile
   383  0054  2857               	goto	i1l17
   384                           
   385                           ;main.c: 23: {
   386                           ;main.c: 24: RB0 = 0;
   387  0055  1006               	bcf	6,0	;volatile
   388                           
   389                           ;main.c: 25: }
   390  0056  0008               	return
   391  0057                     i1l17:	
   392                           
   393                           ;main.c: 26: else
   394                           ;main.c: 27: {
   395                           ;main.c: 28: RB0 = 1;
   396  0057  1406               	bsf	6,0	;volatile
   397  0058  0008               	return
   398  0059                     __end_of_led:	
   399  007E                     btemp	set	126	;btemp
   400  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         2
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      6       8
    BANK0            80      0       0
    BANK1            80      0       0
    BANK2            48      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _leds in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _leds in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _leds in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _leds in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0       0
                                              4 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (1) _leds                                                 4     4      0       0
                                              0 COMMON     4     4      0
                                _led
 ---------------------------------------------------------------------------------
 (2) _led                                                  0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)

 _leds (ROOT)
   _led

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA              80      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      6       8       1       57.1%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
BANK0               50      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0       8       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK2            30      0       0       8        0.0%
BANK2               30      0       0       9        0.0%
DATA                 0      0       8      10        0.0%


Microchip Technology PIC Macro Assembler V1.42 build -159332390 
Symbol Table                                                                                   Fri Aug 18 12:30:49 2017

            __CFG_CP$OFF 0000                       u47 002D                      l536 0029  
                    _RB0 0030             __CFG_CPD$OFF 0000                      _led 0051  
                    fsr0 0004             __CFG_LVP$OFF 0000                     ?_led 0070  
                   i1l17 0057                     i1l26 0044                     _TMR0 0001  
                   _main 0015                     _leds 0033                     btemp 007E  
          __CFG_BOREN$ON 0000                     start 0010                    ??_led 0070  
                  ?_main 0070                    ?_leds 0070            __CFG_WDTE$OFF 0000  
                  _TRISB 0086                    pclath 000A                    status 0003  
                  wtemp0 007E           __CFG_MCLRE$OFF 0000          __initialization 0011  
           __end_of_main 0033             __end_of_leds 0051                   ??_main 0074  
                 ??_leds 0070           __CFG_PWRTE$OFF 0000                   saved_w 007E  
__end_of__initialization 0013           __pcstackCOMMON 0070           _OPTION_REGbits 0081  
             __pmaintext 0015               __pintentry 0004                  __ptext1 0033  
                __ptext2 0051             __size_of_led 0008     end_of_initialization 0013  
    start_initialization 0011              __end_of_led 0059              __pbssCOMMON 0076  
              ___latbits 0000        interrupt_function 0004                 _contador 0076  
          __size_of_main 001E            __size_of_leds 001E               _INTCONbits 000B  
               intlevel1 0000       __CFG_FOSC$INTOSCIO 0000  
