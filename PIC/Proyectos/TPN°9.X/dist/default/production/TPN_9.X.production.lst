

Microchip Technology PIC LITE Macro Assembler V1.42 build -159332390 
                                                                                               Thu Aug 31 12:05:43 2017

Microchip Technology Omniscient Code Generator v1.42 (Free mode) build 201704130522
     1                           	processor	16F628A
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK0,global,class=CODE,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
     7                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     8                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	maintext,global,class=CODE,split=1,delta=2
    10                           	psect	text1,local,class=CODE,merge=1,delta=2
    11                           	psect	text2,local,class=CODE,merge=1,delta=2
    12                           	dabs	1,0x7E,2
    13  0000                     
    14                           ; Version 1.42
    15                           ; Generated 13/04/2017 GMT
    16                           ; 
    17                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    18                           ; All rights reserved.
    19                           ; 
    20                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    21                           ; 
    22                           ; Redistribution and use in source and binary forms, with or without modification, are
    23                           ; permitted provided that the following conditions are met:
    24                           ; 
    25                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    26                           ;        conditions and the following disclaimer.
    27                           ; 
    28                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    29                           ;        of conditions and the following disclaimer in the documentation and/or other
    30                           ;        materials provided with the distribution.
    31                           ; 
    32                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    33                           ;        software without specific prior written permission.
    34                           ; 
    35                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    36                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    37                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    38                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    39                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    40                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    41                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    42                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    43                           ; 
    44                           ; 
    45                           ; Code-generator required, PIC16F628A Definitions
    46                           ; 
    47                           ; SFR Addresses
    48  0000                     	;# 
    49  0001                     	;# 
    50  0002                     	;# 
    51  0003                     	;# 
    52  0004                     	;# 
    53  0005                     	;# 
    54  0006                     	;# 
    55  000A                     	;# 
    56  000B                     	;# 
    57  000C                     	;# 
    58  000E                     	;# 
    59  000E                     	;# 
    60  000F                     	;# 
    61  0010                     	;# 
    62  0011                     	;# 
    63  0012                     	;# 
    64  0015                     	;# 
    65  0015                     	;# 
    66  0016                     	;# 
    67  0017                     	;# 
    68  0018                     	;# 
    69  0019                     	;# 
    70  001A                     	;# 
    71  001F                     	;# 
    72  0081                     	;# 
    73  0085                     	;# 
    74  0086                     	;# 
    75  008C                     	;# 
    76  008E                     	;# 
    77  0092                     	;# 
    78  0098                     	;# 
    79  0099                     	;# 
    80  009A                     	;# 
    81  009B                     	;# 
    82  009C                     	;# 
    83  009D                     	;# 
    84  009F                     	;# 
    85                           
    86                           	psect	idataBANK0
    87  0779                     __pidataBANK0:	
    88                           
    89                           ;initializer for _randx
    90  0779  3401               	retlw	1
    91  077A  3400               	retlw	0
    92  077B  3400               	retlw	0
    93  077C  3400               	retlw	0
    94  001F                     _CMCON	set	31
    95  0030                     _RB0	set	48
    96  0033                     _RB3	set	51
    97  0031                     _RB1	set	49
    98  0032                     _RB2	set	50
    99  0085                     _TRISA	set	133
   100  0086                     _TRISB	set	134
   101                           
   102                           ; #config settings
   103  0000                     
   104                           	psect	cinit
   105  07F6                     start_initialization:	
   106  07F6                     __initialization:	
   107                           
   108                           ; Initialize objects allocated to BANK0
   109  07F6  2779               	fcall	__pidataBANK0	;fetch initializer
   110  07F7  00A0               	movwf	__pdataBANK0& (0+127)
   111  07F8  277A               	fcall	__pidataBANK0+1	;fetch initializer
   112  07F9  00A1               	movwf	(__pdataBANK0+1)& (0+127)
   113  07FA  277B               	fcall	__pidataBANK0+2	;fetch initializer
   114  07FB  00A2               	movwf	(__pdataBANK0+2)& (0+127)
   115  07FC  277C               	fcall	__pidataBANK0+3	;fetch initializer
   116  07FD  00A3               	movwf	(__pdataBANK0+3)& (0+127)
   117  07FE                     end_of_initialization:	
   118                           ;End of C runtime variable initialization code
   119                           
   120  07FE                     __end_of__initialization:	
   121  07FE  0183               	clrf	3
   122  07FF  2F9E               	ljmp	_main	;jump to C main() function
   123                           
   124                           	psect	dataBANK0
   125  0020                     __pdataBANK0:	
   126  0020                     _randx:	
   127  0020                     	ds	4
   128                           
   129                           	psect	cstackCOMMON
   130  0070                     __pcstackCOMMON:	
   131  0070                     ?_resetearSalidas:	
   132  0070                     ?_main:	
   133                           ; 1 bytes @ 0x0
   134                           
   135  0070                     resetearSalidas@cantidadSalidas:	
   136                           ; 1 bytes @ 0x0
   137                           
   138                           
   139                           ; 2 bytes @ 0x0
   140  0070                     	ds	2
   141  0072                     ??_resetearSalidas:	
   142                           
   143                           ; 1 bytes @ 0x2
   144  0072                     	ds	1
   145  0073                     resetearSalidas@i:	
   146                           
   147                           ; 2 bytes @ 0x3
   148  0073                     	ds	2
   149  0075                     ?_palabraBinariaAlAzar:	
   150  0075                     palabraBinariaAlAzar@cantidadSalidas:	
   151                           ; 1 bytes @ 0x5
   152                           
   153                           
   154                           ; 2 bytes @ 0x5
   155  0075                     	ds	2
   156  0077                     ??_palabraBinariaAlAzar:	
   157                           
   158                           ; 1 bytes @ 0x7
   159  0077                     	ds	2
   160  0079                     palabraBinariaAlAzar@i:	
   161                           
   162                           ; 2 bytes @ 0x9
   163  0079                     	ds	2
   164  007B                     ??_main:	
   165                           
   166                           ; 1 bytes @ 0xB
   167  007B                     	ds	2
   168                           
   169                           	psect	cstackBANK0
   170  0024                     __pcstackBANK0:	
   171  0024                     main@palabaraBinaria:	
   172                           
   173                           ; 2 bytes @ 0x0
   174  0024                     	ds	2
   175                           
   176                           	psect	maintext
   177  079E                     __pmaintext:	
   178 ;;
   179 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   180 ;;
   181 ;; *************** function _main *****************
   182 ;; Defined at:
   183 ;;		line 50 in file "main.c"
   184 ;; Parameters:    Size  Location     Type
   185 ;;		None
   186 ;; Auto vars:     Size  Location     Type
   187 ;;  palabaraBina    2    0[BANK0 ] int 
   188 ;; Return value:  Size  Location     Type
   189 ;;                  1    wreg      void 
   190 ;; Registers used:
   191 ;;		wreg, status,2, status,0, pclath, cstack
   192 ;; Tracked objects:
   193 ;;		On entry : B00/0
   194 ;;		On exit  : 0/0
   195 ;;		Unchanged: 0/0
   196 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   197 ;;      Params:         0       0       0       0
   198 ;;      Locals:         0       2       0       0
   199 ;;      Temps:          2       0       0       0
   200 ;;      Totals:         2       2       0       0
   201 ;;Total ram usage:        4 bytes
   202 ;; Hardware stack levels required when called:    2
   203 ;; This function calls:
   204 ;;		_palabraBinariaAlAzar
   205 ;;		_resetearSalidas
   206 ;; This function is called by:
   207 ;;		Startup code after reset
   208 ;; This function uses a non-reentrant model
   209 ;;
   210                           
   211                           
   212                           ;psect for function _main
   213  079E                     _main:	
   214                           
   215                           ;main.c: 52: TRISB = 0b00000001;
   216                           
   217                           ;incstack = 0
   218                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   219  079E  3001               	movlw	1
   220  079F  1683               	bsf	3,5	;RP0=1, select bank1
   221  07A0  1303               	bcf	3,6	;RP1=0, select bank1
   222  07A1  0086               	movwf	6	;volatile
   223                           
   224                           ;main.c: 53: CMCON = 0x07;
   225  07A2  3007               	movlw	7
   226  07A3  1283               	bcf	3,5	;RP0=0, select bank0
   227  07A4  1303               	bcf	3,6	;RP1=0, select bank0
   228  07A5  009F               	movwf	31	;volatile
   229                           
   230                           ;main.c: 54: TRISA = 0b00000100;
   231  07A6  3004               	movlw	4
   232  07A7  1683               	bsf	3,5	;RP0=1, select bank1
   233  07A8  1303               	bcf	3,6	;RP1=0, select bank1
   234  07A9  0085               	movwf	5	;volatile
   235                           
   236                           ;main.c: 57: int palabaraBinaria = 48;
   237  07AA  3030               	movlw	48
   238  07AB  1283               	bcf	3,5	;RP0=0, select bank0
   239  07AC  1303               	bcf	3,6	;RP1=0, select bank0
   240  07AD  00A4               	movwf	main@palabaraBinaria
   241  07AE  3000               	movlw	0
   242  07AF  00A5               	movwf	main@palabaraBinaria+1
   243                           
   244                           ;main.c: 59: resetearSalidas(palabaraBinaria);
   245  07B0  0825               	movf	main@palabaraBinaria+1,w
   246  07B1  00F1               	movwf	resetearSalidas@cantidadSalidas+1
   247  07B2  0824               	movf	main@palabaraBinaria,w
   248  07B3  00F0               	movwf	resetearSalidas@cantidadSalidas
   249  07B4  277D               	fcall	_resetearSalidas
   250  07B5                     l553:	
   251                           ;main.c: 61: while (1)
   252                           
   253                           
   254                           ;main.c: 62: {
   255                           ;main.c: 63: if(RB0 == 1)
   256  07B5  1283               	bcf	3,5	;RP0=0, select bank0
   257  07B6  1303               	bcf	3,6	;RP1=0, select bank0
   258  07B7  1C06               	btfss	6,0	;volatile
   259  07B8  2FB5               	goto	l553
   260                           
   261                           ;main.c: 64: {
   262                           ;main.c: 65: palabraBinariaAlAzar (palabaraBinaria);
   263  07B9  0825               	movf	main@palabaraBinaria+1,w
   264  07BA  00F6               	movwf	palabraBinariaAlAzar@cantidadSalidas+1
   265  07BB  0824               	movf	main@palabaraBinaria,w
   266  07BC  00F5               	movwf	palabraBinariaAlAzar@cantidadSalidas
   267  07BD  27C8               	fcall	_palabraBinariaAlAzar
   268                           
   269                           ;main.c: 66: _delay((unsigned long)((100)*(4000000/4000.0)));
   270  07BE  3082               	movlw	130
   271  07BF  00FC               	movwf	??_main+1
   272  07C0  30DD               	movlw	221
   273  07C1  00FB               	movwf	??_main
   274  07C2                     u77:	
   275  07C2  0BFB               	decfsz	??_main,f
   276  07C3  2FC2               	goto	u77
   277  07C4  0BFC               	decfsz	??_main+1,f
   278  07C5  2FC2               	goto	u77
   279  07C6  2FC7               	nop2
   280  07C7  2FB5               	goto	l553
   281  07C8                     __end_of_main:	
   282                           
   283                           	psect	text1
   284  07C8                     __ptext1:	
   285 ;; *************** function _palabraBinariaAlAzar *****************
   286 ;; Defined at:
   287 ;;		line 34 in file "main.c"
   288 ;; Parameters:    Size  Location     Type
   289 ;;  cantidadSali    2    5[COMMON] int 
   290 ;; Auto vars:     Size  Location     Type
   291 ;;  i               2    9[COMMON] int 
   292 ;; Return value:  Size  Location     Type
   293 ;;                  1    wreg      void 
   294 ;; Registers used:
   295 ;;		wreg, status,2, status,0, pclath, cstack
   296 ;; Tracked objects:
   297 ;;		On entry : 0/0
   298 ;;		On exit  : 0/0
   299 ;;		Unchanged: 0/0
   300 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   301 ;;      Params:         2       0       0       0
   302 ;;      Locals:         2       0       0       0
   303 ;;      Temps:          2       0       0       0
   304 ;;      Totals:         6       0       0       0
   305 ;;Total ram usage:        6 bytes
   306 ;; Hardware stack levels used:    1
   307 ;; Hardware stack levels required when called:    1
   308 ;; This function calls:
   309 ;;		_resetearSalidas
   310 ;; This function is called by:
   311 ;;		_main
   312 ;; This function uses a non-reentrant model
   313 ;;
   314                           
   315                           
   316                           ;psect for function _palabraBinariaAlAzar
   317  07C8                     _palabraBinariaAlAzar:	
   318                           
   319                           ;main.c: 36: int rand(void);
   320                           ;main.c: 37: for(int i = 0; i < cantidadSalidas; i = i + 1)
   321                           
   322                           ;incstack = 0
   323                           ; Regs used in _palabraBinariaAlAzar: [wreg+status,2+status,0+pclath+cstack]
   324  07C8  01F9               	clrf	palabraBinariaAlAzar@i
   325  07C9  01FA               	clrf	palabraBinariaAlAzar@i+1
   326  07CA                     l543:	
   327  07CA  087A               	movf	palabraBinariaAlAzar@i+1,w
   328  07CB  3A80               	xorlw	128
   329  07CC  00F7               	movwf	??_palabraBinariaAlAzar
   330  07CD  0876               	movf	palabraBinariaAlAzar@cantidadSalidas+1,w
   331  07CE  3A80               	xorlw	128
   332  07CF  0277               	subwf	??_palabraBinariaAlAzar,w
   333  07D0  1D03               	skipz
   334  07D1  2FD4               	goto	u55
   335  07D2  0875               	movf	palabraBinariaAlAzar@cantidadSalidas,w
   336  07D3  0279               	subwf	palabraBinariaAlAzar@i,w
   337  07D4                     u55:	
   338  07D4  1803               	btfsc	3,0
   339  07D5  2FE4               	goto	l29
   340                           
   341                           ;main.c: 38: {
   342                           ;main.c: 40: RB2 = 1;
   343  07D6  1283               	bcf	3,5	;RP0=0, select bank0
   344  07D7  1303               	bcf	3,6	;RP1=0, select bank0
   345  07D8  1506               	bsf	6,2	;volatile
   346                           
   347                           ;main.c: 41: RB1 = 1;
   348  07D9  1486               	bsf	6,1	;volatile
   349                           
   350                           ;main.c: 42: RB1 = 0;
   351  07DA  1086               	bcf	6,1	;volatile
   352  07DB  0879               	movf	palabraBinariaAlAzar@i,w
   353  07DC  3E01               	addlw	1
   354  07DD  00F9               	movwf	palabraBinariaAlAzar@i
   355  07DE  087A               	movf	palabraBinariaAlAzar@i+1,w
   356  07DF  1803               	skipnc
   357  07E0  3E01               	addlw	1
   358  07E1  3E00               	addlw	0
   359  07E2  00FA               	movwf	palabraBinariaAlAzar@i+1
   360  07E3  2FCA               	goto	l543
   361  07E4                     l29:	
   362                           
   363                           ;main.c: 43: }
   364                           ;main.c: 44: RB3 = 1;
   365  07E4  1283               	bcf	3,5	;RP0=0, select bank0
   366  07E5  1303               	bcf	3,6	;RP1=0, select bank0
   367  07E6  1586               	bsf	6,3	;volatile
   368                           
   369                           ;main.c: 45: RB3 = 0;
   370  07E7  1186               	bcf	6,3	;volatile
   371                           
   372                           ;main.c: 46: _delay((unsigned long)((60)*(4000000/4000.0)));
   373  07E8  304E               	movlw	78
   374  07E9  00F8               	movwf	??_palabraBinariaAlAzar+1
   375  07EA  30EB               	movlw	235
   376  07EB  00F7               	movwf	??_palabraBinariaAlAzar
   377  07EC                     u87:	
   378  07EC  0BF7               	decfsz	??_palabraBinariaAlAzar,f
   379  07ED  2FEC               	goto	u87
   380  07EE  0BF8               	decfsz	??_palabraBinariaAlAzar+1,f
   381  07EF  2FEC               	goto	u87
   382                           
   383                           ;main.c: 47: resetearSalidas(cantidadSalidas);
   384  07F0  0876               	movf	palabraBinariaAlAzar@cantidadSalidas+1,w
   385  07F1  00F1               	movwf	resetearSalidas@cantidadSalidas+1
   386  07F2  0875               	movf	palabraBinariaAlAzar@cantidadSalidas,w
   387  07F3  00F0               	movwf	resetearSalidas@cantidadSalidas
   388  07F4  277D               	fcall	_resetearSalidas
   389  07F5  0008               	return
   390  07F6                     __end_of_palabraBinariaAlAzar:	
   391                           
   392                           	psect	text2
   393  077D                     __ptext2:	
   394 ;; *************** function _resetearSalidas *****************
   395 ;; Defined at:
   396 ;;		line 23 in file "main.c"
   397 ;; Parameters:    Size  Location     Type
   398 ;;  cantidadSali    2    0[COMMON] int 
   399 ;; Auto vars:     Size  Location     Type
   400 ;;  i               2    3[COMMON] int 
   401 ;; Return value:  Size  Location     Type
   402 ;;                  1    wreg      void 
   403 ;; Registers used:
   404 ;;		wreg, status,2, status,0
   405 ;; Tracked objects:
   406 ;;		On entry : 0/0
   407 ;;		On exit  : 0/0
   408 ;;		Unchanged: 0/0
   409 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   410 ;;      Params:         2       0       0       0
   411 ;;      Locals:         2       0       0       0
   412 ;;      Temps:          1       0       0       0
   413 ;;      Totals:         5       0       0       0
   414 ;;Total ram usage:        5 bytes
   415 ;; Hardware stack levels used:    1
   416 ;; This function calls:
   417 ;;		Nothing
   418 ;; This function is called by:
   419 ;;		_palabraBinariaAlAzar
   420 ;;		_main
   421 ;; This function uses a non-reentrant model
   422 ;;
   423                           
   424                           
   425                           ;psect for function _resetearSalidas
   426  077D                     _resetearSalidas:	
   427                           
   428                           ;main.c: 25: for(int i = 0; i < cantidadSalidas; i = i + 1)
   429                           
   430                           ;incstack = 0
   431                           ; Regs used in _resetearSalidas: [wreg+status,2+status,0]
   432  077D  01F3               	clrf	resetearSalidas@i
   433  077E  01F4               	clrf	resetearSalidas@i+1
   434  077F                     l537:	
   435  077F  0874               	movf	resetearSalidas@i+1,w
   436  0780  3A80               	xorlw	128
   437  0781  00F2               	movwf	??_resetearSalidas
   438  0782  0871               	movf	resetearSalidas@cantidadSalidas+1,w
   439  0783  3A80               	xorlw	128
   440  0784  0272               	subwf	??_resetearSalidas,w
   441  0785  1D03               	skipz
   442  0786  2F89               	goto	u45
   443  0787  0870               	movf	resetearSalidas@cantidadSalidas,w
   444  0788  0273               	subwf	resetearSalidas@i,w
   445  0789                     u45:	
   446  0789  1803               	btfsc	3,0
   447  078A  2F99               	goto	l21
   448                           
   449                           ;main.c: 26: {
   450                           ;main.c: 27: RB2 = 0;
   451  078B  1283               	bcf	3,5	;RP0=0, select bank0
   452  078C  1303               	bcf	3,6	;RP1=0, select bank0
   453  078D  1106               	bcf	6,2	;volatile
   454                           
   455                           ;main.c: 28: RB1 = 1;
   456  078E  1486               	bsf	6,1	;volatile
   457                           
   458                           ;main.c: 29: RB1 = 0;
   459  078F  1086               	bcf	6,1	;volatile
   460  0790  0873               	movf	resetearSalidas@i,w
   461  0791  3E01               	addlw	1
   462  0792  00F3               	movwf	resetearSalidas@i
   463  0793  0874               	movf	resetearSalidas@i+1,w
   464  0794  1803               	skipnc
   465  0795  3E01               	addlw	1
   466  0796  3E00               	addlw	0
   467  0797  00F4               	movwf	resetearSalidas@i+1
   468  0798  2F7F               	goto	l537
   469  0799                     l21:	
   470                           
   471                           ;main.c: 30: }
   472                           ;main.c: 31: RB3 = 1;
   473  0799  1283               	bcf	3,5	;RP0=0, select bank0
   474  079A  1303               	bcf	3,6	;RP1=0, select bank0
   475  079B  1586               	bsf	6,3	;volatile
   476                           
   477                           ;main.c: 32: RB3 = 0;
   478  079C  1186               	bcf	6,3	;volatile
   479  079D  0008               	return
   480  079E                     __end_of_resetearSalidas:	
   481  007E                     btemp	set	126	;btemp
   482  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    0
    Data        4
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     13      13
    BANK0            80      2       6
    BANK1            80      0       0
    BANK2            48      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_palabraBinariaAlAzar
    _palabraBinariaAlAzar->_resetearSalidas

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0     536
                                             11 COMMON     2     2      0
                                              0 BANK0      2     2      0
               _palabraBinariaAlAzar
                    _resetearSalidas
 ---------------------------------------------------------------------------------
 (1) _palabraBinariaAlAzar                                 6     4      2     317
                                              5 COMMON     6     4      2
                    _resetearSalidas
 ---------------------------------------------------------------------------------
 (1) _resetearSalidas                                      5     3      2     174
                                              0 COMMON     5     3      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _palabraBinariaAlAzar
     _resetearSalidas
   _resetearSalidas

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               30      0       0       9        0.0%
BITBANK2            30      0       0       8        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50      2       6       3        7.5%
BITBANK0            50      0       0       5        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      D       D       1       92.9%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      13      10        0.0%
ABS                  0      0      13       4        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA              80      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V1.42 build -159332390 
Symbol Table                                                                                   Thu Aug 31 12:05:43 2017

                        __CFG_CP$OFF 0000                                   l21 0799  
                                 l29 07E4                                   u45 0789  
                                 u55 07D4                                   u77 07C2  
                                 u87 07EC                                  l543 07CA  
                                l537 077F                                  l553 07B5  
                                _RB0 0030                                  _RB1 0031  
                                _RB2 0032                                  _RB3 0033  
                       __CFG_CPD$OFF 0000                         __CFG_LVP$OFF 0000  
                               _main 079E                                 btemp 007E  
                      __CFG_BOREN$ON 0000                                 start 0000  
      __size_of_palabraBinariaAlAzar 002E                                ?_main 0070  
                      __CFG_WDTE$OFF 0000                                _CMCON 001F  
                              _TRISA 0085                                _TRISB 0086  
                              _randx 0020                                status 0003  
                              wtemp0 007E                       __CFG_MCLRE$OFF 0000  
                    __initialization 07F6                     ?_resetearSalidas 0070  
                       __end_of_main 07C8                               ??_main 007B  
                     __CFG_PWRTE$OFF 0000              __end_of__initialization 07FE  
                     __pcstackCOMMON 0070                         __pidataBANK0 0779  
              palabraBinariaAlAzar@i 0079                           __pmaintext 079E  
       __end_of_palabraBinariaAlAzar 07F6                              __ptext1 07C8  
                            __ptext2 077D                 end_of_initialization 07FE  
palabraBinariaAlAzar@cantidadSalidas 0075             __size_of_resetearSalidas 0021  
               _palabraBinariaAlAzar 07C8                  start_initialization 07F6  
              ?_palabraBinariaAlAzar 0075                          __pdataBANK0 0020  
                          ___latbits 0000                        __pcstackBANK0 0024  
                  ??_resetearSalidas 0072                     resetearSalidas@i 0073  
             ??_palabraBinariaAlAzar 0077                  main@palabaraBinaria 0024  
                      __size_of_main 002A                      _resetearSalidas 077D  
     resetearSalidas@cantidadSalidas 0070                   __CFG_FOSC$INTOSCIO 0000  
            __end_of_resetearSalidas 079E  
