

Microchip Technology PIC LITE Macro Assembler V1.42 build -159332390 
                                                                                               Thu Jul 27 09:59:44 2017

Microchip Technology Omniscient Code Generator v1.42 (Free mode) build 201704130522
     1                           	processor	16F628A
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK0,global,class=CODE,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
     7                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     8                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	maintext,global,class=CODE,split=1,delta=2
    10                           	psect	text1,local,class=CODE,merge=1,delta=2
    11                           	psect	text2,local,class=CODE,merge=1,delta=2
    12                           	psect	text3,local,class=CODE,merge=1,delta=2,group=2
    13                           	psect	text4,local,class=CODE,merge=1,delta=2,group=2
    14                           	dabs	1,0x7E,2
    15  0000                     
    16                           ; Version 1.42
    17                           ; Generated 13/04/2017 GMT
    18                           ; 
    19                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    20                           ; All rights reserved.
    21                           ; 
    22                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    23                           ; 
    24                           ; Redistribution and use in source and binary forms, with or without modification, are
    25                           ; permitted provided that the following conditions are met:
    26                           ; 
    27                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    28                           ;        conditions and the following disclaimer.
    29                           ; 
    30                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    31                           ;        of conditions and the following disclaimer in the documentation and/or other
    32                           ;        materials provided with the distribution.
    33                           ; 
    34                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    35                           ;        software without specific prior written permission.
    36                           ; 
    37                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    38                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    39                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    40                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    41                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    42                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    43                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    44                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    45                           ; 
    46                           ; 
    47                           ; Code-generator required, PIC16F628A Definitions
    48                           ; 
    49                           ; SFR Addresses
    50  0000                     	;# 
    51  0001                     	;# 
    52  0002                     	;# 
    53  0003                     	;# 
    54  0004                     	;# 
    55  0005                     	;# 
    56  0006                     	;# 
    57  000A                     	;# 
    58  000B                     	;# 
    59  000C                     	;# 
    60  000E                     	;# 
    61  000E                     	;# 
    62  000F                     	;# 
    63  0010                     	;# 
    64  0011                     	;# 
    65  0012                     	;# 
    66  0015                     	;# 
    67  0015                     	;# 
    68  0016                     	;# 
    69  0017                     	;# 
    70  0018                     	;# 
    71  0019                     	;# 
    72  001A                     	;# 
    73  001F                     	;# 
    74  0081                     	;# 
    75  0085                     	;# 
    76  0086                     	;# 
    77  008C                     	;# 
    78  008E                     	;# 
    79  0092                     	;# 
    80  0098                     	;# 
    81  0099                     	;# 
    82  009A                     	;# 
    83  009B                     	;# 
    84  009C                     	;# 
    85  009D                     	;# 
    86  009F                     	;# 
    87                           
    88                           	psect	idataBANK0
    89  06E9                     __pidataBANK0:	
    90                           
    91                           ;initializer for _randx
    92  06E9  3401               	retlw	1
    93  06EA  3400               	retlw	0
    94  06EB  3400               	retlw	0
    95  06EC  3400               	retlw	0
    96  0005                     _PORTAbits	set	5
    97  001F                     _CMCON	set	31
    98  0006                     _PORTBbits	set	6
    99  0086                     _TRISB	set	134
   100                           
   101                           ; #config settings
   102  0000                     
   103                           	psect	cinit
   104  07F6                     start_initialization:	
   105  07F6                     __initialization:	
   106                           
   107                           ; Initialize objects allocated to BANK0
   108  07F6  26E9               	fcall	__pidataBANK0	;fetch initializer
   109  07F7  00B2               	movwf	__pdataBANK0& (0+127)
   110  07F8  26EA               	fcall	__pidataBANK0+1	;fetch initializer
   111  07F9  00B3               	movwf	(__pdataBANK0+1)& (0+127)
   112  07FA  26EB               	fcall	__pidataBANK0+2	;fetch initializer
   113  07FB  00B4               	movwf	(__pdataBANK0+2)& (0+127)
   114  07FC  26EC               	fcall	__pidataBANK0+3	;fetch initializer
   115  07FD  00B5               	movwf	(__pdataBANK0+3)& (0+127)
   116  07FE                     end_of_initialization:	
   117                           ;End of C runtime variable initialization code
   118                           
   119  07FE                     __end_of__initialization:	
   120  07FE  0183               	clrf	3
   121  07FF  2F0E               	ljmp	_main	;jump to C main() function
   122                           
   123                           	psect	dataBANK0
   124  0032                     __pdataBANK0:	
   125  0032                     _randx:	
   126  0032                     	ds	4
   127                           
   128                           	psect	cstackCOMMON
   129  0070                     __pcstackCOMMON:	
   130  0070                     ?_resetearSalidas:	
   131  0070                     ?_main:	
   132                           ; 1 bytes @ 0x0
   133                           
   134  0070                     ?___lmul:	
   135                           ; 1 bytes @ 0x0
   136                           
   137  0070                     resetearSalidas@cantidadSalidas:	
   138                           ; 4 bytes @ 0x0
   139                           
   140  0070                     ___lmul@multiplier:	
   141                           ; 2 bytes @ 0x0
   142                           
   143                           
   144                           ; 4 bytes @ 0x0
   145  0070                     	ds	2
   146  0072                     ??_resetearSalidas:	
   147                           
   148                           ; 1 bytes @ 0x2
   149  0072                     	ds	1
   150  0073                     resetearSalidas@i:	
   151                           
   152                           ; 2 bytes @ 0x3
   153  0073                     	ds	1
   154  0074                     ___lmul@multiplicand:	
   155                           
   156                           ; 4 bytes @ 0x4
   157  0074                     	ds	4
   158  0078                     ??___lmul:	
   159                           
   160                           ; 1 bytes @ 0x8
   161  0078                     	ds	1
   162  0079                     ___lmul@product:	
   163                           
   164                           ; 4 bytes @ 0x9
   165  0079                     	ds	4
   166                           
   167                           	psect	cstackBANK0
   168  0020                     __pcstackBANK0:	
   169  0020                     ?_rand:	
   170                           
   171                           ; 2 bytes @ 0x0
   172  0020                     	ds	2
   173  0022                     ??_rand:	
   174                           
   175                           ; 1 bytes @ 0x2
   176  0022                     	ds	5
   177  0027                     ?_palabraBinariaAlAzar:	
   178  0027                     palabraBinariaAlAzar@cantidadSalidas:	
   179                           ; 1 bytes @ 0x7
   180                           
   181                           
   182                           ; 2 bytes @ 0x7
   183  0027                     	ds	2
   184  0029                     ??_palabraBinariaAlAzar:	
   185                           
   186                           ; 1 bytes @ 0x9
   187  0029                     	ds	2
   188  002B                     palabraBinariaAlAzar@i:	
   189                           
   190                           ; 2 bytes @ 0xB
   191  002B                     	ds	2
   192  002D                     ??_main:	
   193                           
   194                           ; 1 bytes @ 0xD
   195  002D                     	ds	3
   196  0030                     main@palabaraBinaria:	
   197                           
   198                           ; 2 bytes @ 0x10
   199  0030                     	ds	2
   200                           
   201                           	psect	maintext
   202  070E                     __pmaintext:	
   203 ;;
   204 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   205 ;;
   206 ;; *************** function _main *****************
   207 ;; Defined at:
   208 ;;		line 43 in file "main.c"
   209 ;; Parameters:    Size  Location     Type
   210 ;;		None
   211 ;; Auto vars:     Size  Location     Type
   212 ;;  palabaraBina    2   16[BANK0 ] int 
   213 ;; Return value:  Size  Location     Type
   214 ;;                  1    wreg      void 
   215 ;; Registers used:
   216 ;;		wreg, status,2, status,0, pclath, cstack
   217 ;; Tracked objects:
   218 ;;		On entry : B00/0
   219 ;;		On exit  : 0/0
   220 ;;		Unchanged: 0/0
   221 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   222 ;;      Params:         0       0       0       0
   223 ;;      Locals:         0       2       0       0
   224 ;;      Temps:          0       3       0       0
   225 ;;      Totals:         0       5       0       0
   226 ;;Total ram usage:        5 bytes
   227 ;; Hardware stack levels required when called:    3
   228 ;; This function calls:
   229 ;;		_palabraBinariaAlAzar
   230 ;;		_resetearSalidas
   231 ;; This function is called by:
   232 ;;		Startup code after reset
   233 ;; This function uses a non-reentrant model
   234 ;;
   235                           
   236                           
   237                           ;psect for function _main
   238  070E                     _main:	
   239                           
   240                           ;main.c: 45: TRISB = 0b01000001;
   241                           
   242                           ;incstack = 0
   243                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   244  070E  3041               	movlw	65
   245  070F  1683               	bsf	3,5	;RP0=1, select bank1
   246  0710  1303               	bcf	3,6	;RP1=0, select bank1
   247  0711  0086               	movwf	6	;volatile
   248                           
   249                           ;main.c: 47: CMCON = 0x07;
   250  0712  3007               	movlw	7
   251  0713  1283               	bcf	3,5	;RP0=0, select bank0
   252  0714  1303               	bcf	3,6	;RP1=0, select bank0
   253  0715  009F               	movwf	31	;volatile
   254                           
   255                           ;main.c: 49: int rand(void);
   256                           ;main.c: 50: int palabaraBinaria = 24;
   257  0716  3018               	movlw	24
   258  0717  00B0               	movwf	main@palabaraBinaria
   259  0718  3000               	movlw	0
   260  0719  00B1               	movwf	main@palabaraBinaria+1
   261                           
   262                           ;main.c: 51: resetearSalidas (palabaraBinaria);
   263  071A  0831               	movf	main@palabaraBinaria+1,w
   264  071B  00F1               	movwf	resetearSalidas@cantidadSalidas+1
   265  071C  0830               	movf	main@palabaraBinaria,w
   266  071D  00F0               	movwf	resetearSalidas@cantidadSalidas
   267  071E  26ED               	fcall	_resetearSalidas
   268  071F                     l609:	
   269                           ;main.c: 52: while (1)
   270                           
   271                           
   272                           ;main.c: 53: {
   273                           ;main.c: 54: if(PORTAbits.RA2 == 1)
   274  071F  1283               	bcf	3,5	;RP0=0, select bank0
   275  0720  1303               	bcf	3,6	;RP1=0, select bank0
   276  0721  1D05               	btfss	5,2	;volatile
   277  0722  2F1F               	goto	l609
   278                           
   279                           ;main.c: 55: {
   280                           ;main.c: 56: palabraBinariaAlAzar (palabaraBinaria);
   281  0723  0831               	movf	main@palabaraBinaria+1,w
   282  0724  00A8               	movwf	palabraBinariaAlAzar@cantidadSalidas+1
   283  0725  0830               	movf	main@palabaraBinaria,w
   284  0726  00A7               	movwf	palabraBinariaAlAzar@cantidadSalidas
   285  0727  2737               	fcall	_palabraBinariaAlAzar
   286                           
   287                           ;main.c: 57: _delay((unsigned long)((200)*(4000000/4000.0)));
   288  0728  3002               	movlw	2
   289  0729  1283               	bcf	3,5	;RP0=0, select bank0
   290  072A  1303               	bcf	3,6	;RP1=0, select bank0
   291  072B  00AF               	movwf	??_main+2
   292  072C  3004               	movlw	4
   293  072D  00AE               	movwf	??_main+1
   294  072E  30BA               	movlw	186
   295  072F  00AD               	movwf	??_main
   296  0730                     u197:	
   297  0730  0BAD               	decfsz	??_main,f
   298  0731  2F30               	goto	u197
   299  0732  0BAE               	decfsz	??_main+1,f
   300  0733  2F30               	goto	u197
   301  0734  0BAF               	decfsz	??_main+2,f
   302  0735  2F30               	goto	u197
   303  0736  2F1F               	goto	l609
   304  0737                     __end_of_main:	
   305                           
   306                           	psect	text1
   307  0737                     __ptext1:	
   308 ;; *************** function _palabraBinariaAlAzar *****************
   309 ;; Defined at:
   310 ;;		line 29 in file "main.c"
   311 ;; Parameters:    Size  Location     Type
   312 ;;  cantidadSali    2    7[BANK0 ] int 
   313 ;; Auto vars:     Size  Location     Type
   314 ;;  i               2   11[BANK0 ] int 
   315 ;; Return value:  Size  Location     Type
   316 ;;                  1    wreg      void 
   317 ;; Registers used:
   318 ;;		wreg, status,2, status,0, pclath, cstack
   319 ;; Tracked objects:
   320 ;;		On entry : 0/0
   321 ;;		On exit  : 0/0
   322 ;;		Unchanged: 0/0
   323 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   324 ;;      Params:         0       2       0       0
   325 ;;      Locals:         0       2       0       0
   326 ;;      Temps:          0       2       0       0
   327 ;;      Totals:         0       6       0       0
   328 ;;Total ram usage:        6 bytes
   329 ;; Hardware stack levels used:    1
   330 ;; Hardware stack levels required when called:    2
   331 ;; This function calls:
   332 ;;		_rand
   333 ;;		_resetearSalidas
   334 ;; This function is called by:
   335 ;;		_main
   336 ;; This function uses a non-reentrant model
   337 ;;
   338                           
   339                           
   340                           ;psect for function _palabraBinariaAlAzar
   341  0737                     _palabraBinariaAlAzar:	
   342                           
   343                           ;main.c: 31: for(int i = 0; i < cantidadSalidas; i = i + 1)
   344                           
   345                           ;incstack = 0
   346                           ; Regs used in _palabraBinariaAlAzar: [wreg+status,2+status,0+pclath+cstack]
   347  0737  1283               	bcf	3,5	;RP0=0, select bank0
   348  0738  1303               	bcf	3,6	;RP1=0, select bank0
   349  0739  01AB               	clrf	palabraBinariaAlAzar@i
   350  073A  01AC               	clrf	palabraBinariaAlAzar@i+1
   351  073B                     l599:	
   352  073B  082C               	movf	palabraBinariaAlAzar@i+1,w
   353  073C  3A80               	xorlw	128
   354  073D  00A9               	movwf	??_palabraBinariaAlAzar
   355  073E  0828               	movf	palabraBinariaAlAzar@cantidadSalidas+1,w
   356  073F  3A80               	xorlw	128
   357  0740  0229               	subwf	??_palabraBinariaAlAzar,w
   358  0741  1D03               	skipz
   359  0742  2F45               	goto	u175
   360  0743  0827               	movf	palabraBinariaAlAzar@cantidadSalidas,w
   361  0744  022B               	subwf	palabraBinariaAlAzar@i,w
   362  0745                     u175:	
   363  0745  1803               	btfsc	3,0
   364  0746  2F5D               	goto	l23
   365                           
   366                           ;main.c: 32: {
   367                           ;main.c: 33: PORTBbits.RB4 = rand();
   368  0747  27B3               	fcall	_rand
   369  0748  1283               	bcf	3,5	;RP0=0, select bank0
   370  0749  1303               	bcf	3,6	;RP1=0, select bank0
   371  074A  0820               	movf	?_rand,w
   372  074B  00A9               	movwf	??_palabraBinariaAlAzar
   373  074C  0EA9               	swapf	??_palabraBinariaAlAzar,f
   374  074D  0806               	movf	6,w	;volatile
   375  074E  0629               	xorwf	??_palabraBinariaAlAzar,w
   376  074F  39EF               	andlw	-17
   377  0750  0629               	xorwf	??_palabraBinariaAlAzar,w
   378  0751  0086               	movwf	6	;volatile
   379                           
   380                           ;main.c: 34: PORTBbits.RB3 = 1;
   381  0752  1586               	bsf	6,3	;volatile
   382                           
   383                           ;main.c: 35: PORTBbits.RB3 = 0;
   384  0753  1186               	bcf	6,3	;volatile
   385  0754  082B               	movf	palabraBinariaAlAzar@i,w
   386  0755  3E01               	addlw	1
   387  0756  00AB               	movwf	palabraBinariaAlAzar@i
   388  0757  082C               	movf	palabraBinariaAlAzar@i+1,w
   389  0758  1803               	skipnc
   390  0759  3E01               	addlw	1
   391  075A  3E00               	addlw	0
   392  075B  00AC               	movwf	palabraBinariaAlAzar@i+1
   393  075C  2F3B               	goto	l599
   394  075D                     l23:	
   395                           
   396                           ;main.c: 36: }
   397                           ;main.c: 37: PORTBbits.RB5 = 1;
   398  075D  1283               	bcf	3,5	;RP0=0, select bank0
   399  075E  1303               	bcf	3,6	;RP1=0, select bank0
   400  075F  1686               	bsf	6,5	;volatile
   401                           
   402                           ;main.c: 38: PORTBbits.RB5 = 0;
   403  0760  1286               	bcf	6,5	;volatile
   404                           
   405                           ;main.c: 39: _delay((unsigned long)((40)*(4000000/4000.0)));
   406  0761  3034               	movlw	52
   407  0762  1283               	bcf	3,5	;RP0=0, select bank0
   408  0763  1303               	bcf	3,6	;RP1=0, select bank0
   409  0764  00AA               	movwf	??_palabraBinariaAlAzar+1
   410  0765  30F1               	movlw	241
   411  0766  00A9               	movwf	??_palabraBinariaAlAzar
   412  0767                     u207:	
   413  0767  0BA9               	decfsz	??_palabraBinariaAlAzar,f
   414  0768  2F67               	goto	u207
   415  0769  0BAA               	decfsz	??_palabraBinariaAlAzar+1,f
   416  076A  2F67               	goto	u207
   417  076B  0000               	nop
   418                           
   419                           ;main.c: 40: resetearSalidas (cantidadSalidas);
   420  076C  1283               	bcf	3,5	;RP0=0, select bank0
   421  076D  1303               	bcf	3,6	;RP1=0, select bank0
   422  076E  0828               	movf	palabraBinariaAlAzar@cantidadSalidas+1,w
   423  076F  00F1               	movwf	resetearSalidas@cantidadSalidas+1
   424  0770  0827               	movf	palabraBinariaAlAzar@cantidadSalidas,w
   425  0771  00F0               	movwf	resetearSalidas@cantidadSalidas
   426  0772  26ED               	fcall	_resetearSalidas
   427  0773  0008               	return
   428  0774                     __end_of_palabraBinariaAlAzar:	
   429                           
   430                           	psect	text2
   431  06ED                     __ptext2:	
   432 ;; *************** function _resetearSalidas *****************
   433 ;; Defined at:
   434 ;;		line 18 in file "main.c"
   435 ;; Parameters:    Size  Location     Type
   436 ;;  cantidadSali    2    0[COMMON] int 
   437 ;; Auto vars:     Size  Location     Type
   438 ;;  i               2    3[COMMON] int 
   439 ;; Return value:  Size  Location     Type
   440 ;;                  1    wreg      void 
   441 ;; Registers used:
   442 ;;		wreg, status,2, status,0
   443 ;; Tracked objects:
   444 ;;		On entry : 0/0
   445 ;;		On exit  : 0/0
   446 ;;		Unchanged: 0/0
   447 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   448 ;;      Params:         2       0       0       0
   449 ;;      Locals:         2       0       0       0
   450 ;;      Temps:          1       0       0       0
   451 ;;      Totals:         5       0       0       0
   452 ;;Total ram usage:        5 bytes
   453 ;; Hardware stack levels used:    1
   454 ;; This function calls:
   455 ;;		Nothing
   456 ;; This function is called by:
   457 ;;		_palabraBinariaAlAzar
   458 ;;		_main
   459 ;; This function uses a non-reentrant model
   460 ;;
   461                           
   462                           
   463                           ;psect for function _resetearSalidas
   464  06ED                     _resetearSalidas:	
   465                           
   466                           ;main.c: 20: for(int i = 0; i < cantidadSalidas; i = i + 1)
   467                           
   468                           ;incstack = 0
   469                           ; Regs used in _resetearSalidas: [wreg+status,2+status,0]
   470  06ED  01F3               	clrf	resetearSalidas@i
   471  06EE  01F4               	clrf	resetearSalidas@i+1
   472  06EF                     l579:	
   473  06EF  0874               	movf	resetearSalidas@i+1,w
   474  06F0  3A80               	xorlw	128
   475  06F1  00F2               	movwf	??_resetearSalidas
   476  06F2  0871               	movf	resetearSalidas@cantidadSalidas+1,w
   477  06F3  3A80               	xorlw	128
   478  06F4  0272               	subwf	??_resetearSalidas,w
   479  06F5  1D03               	skipz
   480  06F6  2EF9               	goto	u155
   481  06F7  0870               	movf	resetearSalidas@cantidadSalidas,w
   482  06F8  0273               	subwf	resetearSalidas@i,w
   483  06F9                     u155:	
   484  06F9  1803               	btfsc	3,0
   485  06FA  2F09               	goto	l17
   486                           
   487                           ;main.c: 21: {
   488                           ;main.c: 22: PORTBbits.RB2 = 0;
   489  06FB  1283               	bcf	3,5	;RP0=0, select bank0
   490  06FC  1303               	bcf	3,6	;RP1=0, select bank0
   491  06FD  1106               	bcf	6,2	;volatile
   492                           
   493                           ;main.c: 23: PORTBbits.RB1 = 1;
   494  06FE  1486               	bsf	6,1	;volatile
   495                           
   496                           ;main.c: 24: PORTBbits.RB1 = 0;
   497  06FF  1086               	bcf	6,1	;volatile
   498  0700  0873               	movf	resetearSalidas@i,w
   499  0701  3E01               	addlw	1
   500  0702  00F3               	movwf	resetearSalidas@i
   501  0703  0874               	movf	resetearSalidas@i+1,w
   502  0704  1803               	skipnc
   503  0705  3E01               	addlw	1
   504  0706  3E00               	addlw	0
   505  0707  00F4               	movwf	resetearSalidas@i+1
   506  0708  2EEF               	goto	l579
   507  0709                     l17:	
   508                           
   509                           ;main.c: 25: }
   510                           ;main.c: 26: PORTBbits.RB3 = 1;
   511  0709  1283               	bcf	3,5	;RP0=0, select bank0
   512  070A  1303               	bcf	3,6	;RP1=0, select bank0
   513  070B  1586               	bsf	6,3	;volatile
   514                           
   515                           ;main.c: 27: PORTBbits.RB3 = 0;
   516  070C  1186               	bcf	6,3	;volatile
   517  070D  0008               	return
   518  070E                     __end_of_resetearSalidas:	
   519                           
   520                           	psect	text3
   521  07B3                     __ptext3:	
   522 ;; *************** function _rand *****************
   523 ;; Defined at:
   524 ;;		line 12 in file "C:\Program Files (x86)\Microchip\xc8\v1.42\sources\common\rand.c"
   525 ;; Parameters:    Size  Location     Type
   526 ;;		None
   527 ;; Auto vars:     Size  Location     Type
   528 ;;		None
   529 ;; Return value:  Size  Location     Type
   530 ;;                  2    0[BANK0 ] int 
   531 ;; Registers used:
   532 ;;		wreg, status,2, status,0, pclath, cstack
   533 ;; Tracked objects:
   534 ;;		On entry : 0/0
   535 ;;		On exit  : 0/0
   536 ;;		Unchanged: 0/0
   537 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   538 ;;      Params:         0       2       0       0
   539 ;;      Locals:         0       0       0       0
   540 ;;      Temps:          0       5       0       0
   541 ;;      Totals:         0       7       0       0
   542 ;;Total ram usage:        7 bytes
   543 ;; Hardware stack levels used:    1
   544 ;; Hardware stack levels required when called:    1
   545 ;; This function calls:
   546 ;;		___lmul
   547 ;; This function is called by:
   548 ;;		_palabraBinariaAlAzar
   549 ;; This function uses a non-reentrant model
   550 ;;
   551                           
   552                           
   553                           ;psect for function _rand
   554  07B3                     _rand:	
   555                           
   556                           ;incstack = 0
   557                           ; Regs used in _rand: [wreg+status,2+status,0+pclath+cstack]
   558  07B3  1283               	bcf	3,5	;RP0=0, select bank0
   559  07B4  1303               	bcf	3,6	;RP1=0, select bank0
   560  07B5  0835               	movf	_randx+3,w
   561  07B6  00F3               	movwf	___lmul@multiplier+3
   562  07B7  0834               	movf	_randx+2,w
   563  07B8  00F2               	movwf	___lmul@multiplier+2
   564  07B9  0833               	movf	_randx+1,w
   565  07BA  00F1               	movwf	___lmul@multiplier+1
   566  07BB  0832               	movf	_randx,w
   567  07BC  00F0               	movwf	___lmul@multiplier
   568  07BD  3041               	movlw	65
   569  07BE  00F7               	movwf	___lmul@multiplicand+3
   570  07BF  30C6               	movlw	198
   571  07C0  00F6               	movwf	___lmul@multiplicand+2
   572  07C1  304E               	movlw	78
   573  07C2  00F5               	movwf	___lmul@multiplicand+1
   574  07C3  306D               	movlw	109
   575  07C4  00F4               	movwf	___lmul@multiplicand
   576  07C5  2774               	fcall	___lmul
   577  07C6  0873               	movf	?___lmul+3,w
   578  07C7  1283               	bcf	3,5	;RP0=0, select bank0
   579  07C8  1303               	bcf	3,6	;RP1=0, select bank0
   580  07C9  00B5               	movwf	_randx+3
   581  07CA  0872               	movf	?___lmul+2,w
   582  07CB  00B4               	movwf	_randx+2
   583  07CC  0871               	movf	?___lmul+1,w
   584  07CD  00B3               	movwf	_randx+1
   585  07CE  0870               	movf	?___lmul,w
   586  07CF  00B2               	movwf	_randx
   587  07D0  3039               	movlw	57
   588  07D1  07B2               	addwf	_randx,f
   589  07D2  3030               	movlw	48
   590  07D3  1803               	skipnc
   591  07D4  3031               	movlw	49
   592  07D5  07B3               	addwf	_randx+1,f
   593  07D6  3000               	movlw	0
   594  07D7  1803               	skipnc
   595  07D8  3001               	movlw	1
   596  07D9  07B4               	addwf	_randx+2,f
   597  07DA  3000               	movlw	0
   598  07DB  1803               	skipnc
   599  07DC  3001               	movlw	1
   600  07DD  07B5               	addwf	_randx+3,f
   601  07DE  0832               	movf	_randx,w
   602  07DF  00A2               	movwf	??_rand
   603  07E0  0833               	movf	_randx+1,w
   604  07E1  00A3               	movwf	??_rand+1
   605  07E2  0834               	movf	_randx+2,w
   606  07E3  00A4               	movwf	??_rand+2
   607  07E4  0835               	movf	_randx+3,w
   608  07E5  00A5               	movwf	??_rand+3
   609  07E6  3010               	movlw	16
   610  07E7  00A6               	movwf	??_rand+4
   611  07E8                     u165:	
   612  07E8  0D25               	rlf	??_rand+3,w
   613  07E9  0CA5               	rrf	??_rand+3,f
   614  07EA  0CA4               	rrf	??_rand+2,f
   615  07EB  0CA3               	rrf	??_rand+1,f
   616  07EC  0CA2               	rrf	??_rand,f
   617  07ED  0BA6               	decfsz	??_rand+4,f
   618  07EE  2FE8               	goto	u165
   619  07EF  30FF               	movlw	255
   620  07F0  0522               	andwf	??_rand,w
   621  07F1  00A0               	movwf	?_rand
   622  07F2  307F               	movlw	127
   623  07F3  0523               	andwf	??_rand+1,w
   624  07F4  00A1               	movwf	?_rand+1
   625  07F5  0008               	return
   626  07F6                     __end_of_rand:	
   627                           
   628                           	psect	text4
   629  0774                     __ptext4:	
   630 ;; *************** function ___lmul *****************
   631 ;; Defined at:
   632 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.42\sources\common\Umul32.c"
   633 ;; Parameters:    Size  Location     Type
   634 ;;  multiplier      4    0[COMMON] unsigned long 
   635 ;;  multiplicand    4    4[COMMON] unsigned long 
   636 ;; Auto vars:     Size  Location     Type
   637 ;;  product         4    9[COMMON] unsigned long 
   638 ;; Return value:  Size  Location     Type
   639 ;;                  4    0[COMMON] unsigned long 
   640 ;; Registers used:
   641 ;;		wreg, status,2, status,0
   642 ;; Tracked objects:
   643 ;;		On entry : 0/0
   644 ;;		On exit  : 0/0
   645 ;;		Unchanged: 0/0
   646 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   647 ;;      Params:         8       0       0       0
   648 ;;      Locals:         4       0       0       0
   649 ;;      Temps:          1       0       0       0
   650 ;;      Totals:        13       0       0       0
   651 ;;Total ram usage:       13 bytes
   652 ;; Hardware stack levels used:    1
   653 ;; This function calls:
   654 ;;		Nothing
   655 ;; This function is called by:
   656 ;;		_rand
   657 ;; This function uses a non-reentrant model
   658 ;;
   659                           
   660                           
   661                           ;psect for function ___lmul
   662  0774                     ___lmul:	
   663                           
   664                           ;incstack = 0
   665                           ; Regs used in ___lmul: [wreg+status,2+status,0]
   666  0774  3000               	movlw	0
   667  0775  00FC               	movwf	___lmul@product+3
   668  0776  3000               	movlw	0
   669  0777  00FB               	movwf	___lmul@product+2
   670  0778  3000               	movlw	0
   671  0779  00FA               	movwf	___lmul@product+1
   672  077A  3000               	movlw	0
   673  077B  00F9               	movwf	___lmul@product
   674  077C                     l563:	
   675  077C  1C70               	btfss	___lmul@multiplier,0
   676  077D  2F92               	goto	l567
   677  077E  0874               	movf	___lmul@multiplicand,w
   678  077F  07F9               	addwf	___lmul@product,f
   679  0780  0875               	movf	___lmul@multiplicand+1,w
   680  0781  1103               	clrz
   681  0782  1803               	skipnc
   682  0783  3E01               	addlw	1
   683  0784  1D03               	btfss	3,2
   684  0785  07FA               	addwf	___lmul@product+1,f
   685  0786  0876               	movf	___lmul@multiplicand+2,w
   686  0787  1103               	clrz
   687  0788  1803               	skipnc
   688  0789  3E01               	addlw	1
   689  078A  1D03               	btfss	3,2
   690  078B  07FB               	addwf	___lmul@product+2,f
   691  078C  0877               	movf	___lmul@multiplicand+3,w
   692  078D  1103               	clrz
   693  078E  1803               	skipnc
   694  078F  3E01               	addlw	1
   695  0790  1D03               	btfss	3,2
   696  0791  07FC               	addwf	___lmul@product+3,f
   697  0792                     l567:	
   698  0792  3001               	movlw	1
   699  0793  00F8               	movwf	??___lmul
   700  0794                     u125:	
   701  0794  1003               	clrc
   702  0795  0DF4               	rlf	___lmul@multiplicand,f
   703  0796  0DF5               	rlf	___lmul@multiplicand+1,f
   704  0797  0DF6               	rlf	___lmul@multiplicand+2,f
   705  0798  0DF7               	rlf	___lmul@multiplicand+3,f
   706  0799  0BF8               	decfsz	??___lmul,f
   707  079A  2F94               	goto	u125
   708  079B  3001               	movlw	1
   709  079C                     u135:	
   710  079C  1003               	clrc
   711  079D  0CF3               	rrf	___lmul@multiplier+3,f
   712  079E  0CF2               	rrf	___lmul@multiplier+2,f
   713  079F  0CF1               	rrf	___lmul@multiplier+1,f
   714  07A0  0CF0               	rrf	___lmul@multiplier,f
   715  07A1  3EFF               	addlw	-1
   716  07A2  1D03               	skipz
   717  07A3  2F9C               	goto	u135
   718  07A4  0873               	movf	___lmul@multiplier+3,w
   719  07A5  0472               	iorwf	___lmul@multiplier+2,w
   720  07A6  0471               	iorwf	___lmul@multiplier+1,w
   721  07A7  0470               	iorwf	___lmul@multiplier,w
   722  07A8  1D03               	skipz
   723  07A9  2F7C               	goto	l563
   724  07AA  087C               	movf	___lmul@product+3,w
   725  07AB  00F3               	movwf	?___lmul+3
   726  07AC  087B               	movf	___lmul@product+2,w
   727  07AD  00F2               	movwf	?___lmul+2
   728  07AE  087A               	movf	___lmul@product+1,w
   729  07AF  00F1               	movwf	?___lmul+1
   730  07B0  0879               	movf	___lmul@product,w
   731  07B1  00F0               	movwf	?___lmul
   732  07B2  0008               	return
   733  07B3                     __end_of___lmul:	
   734  007E                     btemp	set	126	;btemp
   735  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    0
    Data        4
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     13      13
    BANK0            80     18      22
    BANK1            80      0       0
    BANK2            48      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _rand->___lmul

Critical Paths under _main in BANK0

    _main->_palabraBinariaAlAzar
    _palabraBinariaAlAzar->_rand

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 5     5      0     811
                                             13 BANK0      5     5      0
               _palabraBinariaAlAzar
                    _resetearSalidas
 ---------------------------------------------------------------------------------
 (1) _palabraBinariaAlAzar                                 6     4      2     570
                                              7 BANK0      6     4      2
                               _rand
                    _resetearSalidas
 ---------------------------------------------------------------------------------
 (1) _resetearSalidas                                      5     3      2     196
                                              0 COMMON     5     3      2
 ---------------------------------------------------------------------------------
 (2) _rand                                                 7     5      2     220
                                              0 BANK0      7     5      2
                             ___lmul
 ---------------------------------------------------------------------------------
 (3) ___lmul                                              13     5      8     220
                                              0 COMMON    13     5      8
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _palabraBinariaAlAzar
     _rand
       ___lmul
     _resetearSalidas
   _resetearSalidas

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               30      0       0       9        0.0%
BITBANK2            30      0       0       8        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     12      16       3       27.5%
BITBANK0            50      0       0       5        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      D       D       1       92.9%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      23      10        0.0%
ABS                  0      0      23       4        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA              80      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V1.42 build -159332390 
Symbol Table                                                                                   Thu Jul 27 09:59:44 2017

                        __CFG_CP$OFF 0000                                   l23 075D  
                                 l17 0709                                  l609 071F  
                                l563 077C                                  l567 0792  
                                l579 06EF                                  l599 073B  
                                u125 0794                                  u135 079C  
                                u207 0767                                  u155 06F9  
                                u165 07E8                                  u175 0745  
                       __CFG_CPD$OFF 0000                                  u197 0730  
                       __CFG_LVP$OFF 0000                                 _main 070E  
                               _rand 07B3                                 btemp 007E  
                      __CFG_BOREN$ON 0000                                 start 0000  
      __size_of_palabraBinariaAlAzar 003D                                ?_main 0070  
                              ?_rand 0020                        __CFG_WDTE$OFF 0000  
                              _CMCON 001F                                _TRISB 0086  
                ___lmul@multiplicand 0074                                _randx 0032  
                              status 0003                                wtemp0 007E  
                     __CFG_MCLRE$OFF 0000                      __initialization 07F6  
                   ?_resetearSalidas 0070                         __end_of_main 0737  
                       __end_of_rand 07F6                               ??_main 002D  
                             ??_rand 0022                       __CFG_PWRTE$OFF 0000  
                             ___lmul 0774              __end_of__initialization 07FE  
                     __pcstackCOMMON 0070                         __pidataBANK0 06E9  
              palabraBinariaAlAzar@i 002B                           __pmaintext 070E  
                            ?___lmul 0070                       ___lmul@product 0079  
       __end_of_palabraBinariaAlAzar 0774                      __size_of___lmul 003F  
                            __ptext1 0737                              __ptext2 06ED  
                            __ptext3 07B3                              __ptext4 0774  
               end_of_initialization 07FE  palabraBinariaAlAzar@cantidadSalidas 0027  
                          _PORTAbits 0005                            _PORTBbits 0006  
           __size_of_resetearSalidas 0021                       __end_of___lmul 07B3  
               _palabraBinariaAlAzar 0737                  start_initialization 07F6  
                           ??___lmul 0078                ?_palabraBinariaAlAzar 0027  
                        __pdataBANK0 0032                            ___latbits 0000  
                      __pcstackBANK0 0020                    ??_resetearSalidas 0072  
                   resetearSalidas@i 0073               ??_palabraBinariaAlAzar 0029  
                  ___lmul@multiplier 0070                  main@palabaraBinaria 0030  
                      __size_of_main 0029                        __size_of_rand 0043  
                    _resetearSalidas 06ED       resetearSalidas@cantidadSalidas 0070  
                 __CFG_FOSC$INTOSCIO 0000              __end_of_resetearSalidas 070E  
